"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPackageJson = void 0;
const parse_triple_1 = require("../parse-triple");
const createPackageJson = (name, binaryName, targets) => {
    const pkgContent = {
        name,
        version: '0.0.0',
        napi: {
            name: binaryName,
        },
        license: 'MIT',
        dependencies: {
            '@node-rs/helper': '^1.1.0',
        },
        devDependencies: {
            '@napi-rs/cli': '^1.1.0',
        },
        engines: {
            node: '>= 10',
        },
        scripts: {
            artifacts: 'napi artifacts',
            build: 'napi build --platform --release',
            'build:debug': 'napi build --platform',
            prepublishOnly: 'napi prepublish -t npm',
            version: 'napi version',
        },
    };
    const triples = {};
    const defaultTargetsSupported = parse_triple_1.DefaultPlatforms.every((p) => targets.includes(p.raw));
    const isOnlyDefaultTargets = targets.length === 3 &&
        parse_triple_1.DefaultPlatforms.every((p) => targets.includes(p.raw));
    if (!isOnlyDefaultTargets) {
        if (!defaultTargetsSupported) {
            triples.defaults = false;
            triples.additional = targets;
        }
        else {
            triples.additional = targets.filter((t) => !parse_triple_1.DefaultPlatforms.map((p) => p.raw).includes(t));
        }
    }
    // @ts-expect-error
    pkgContent.napi.triples = triples;
    return pkgContent;
};
exports.createPackageJson = createPackageJson;
//# sourceMappingURL=package.js.map