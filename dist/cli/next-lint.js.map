{"version":3,"sources":["../../cli/next-lint.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { existsSync } from 'fs'\nimport arg from 'next/dist/compiled/arg/index.js'\nimport { resolve, join } from 'path'\nimport chalk from 'chalk'\n\nimport { cliCommand } from '../bin/next'\nimport { ESLINT_DEFAULT_DIRS } from '../lib/constants'\nimport { runLintCheck } from '../lib/eslint/runLintCheck'\nimport { printAndExit } from '../server/lib/utils'\nimport { Telemetry } from '../telemetry/storage'\nimport loadConfig from '../server/config'\nimport { PHASE_PRODUCTION_BUILD } from '../shared/lib/constants'\nimport { eventLintCheckCompleted } from '../telemetry/events'\nimport { CompileError } from '../lib/compile-error'\n\nconst eslintOptions = (args: arg.Spec, defaultCacheLocation: string) => ({\n  overrideConfigFile: args['--config'] || null,\n  extensions: args['--ext'] ?? ['.js', '.jsx', '.ts', '.tsx'],\n  resolvePluginsRelativeTo: args['--resolve-plugins-relative-to'] || null,\n  rulePaths: args['--rulesdir'] ?? [],\n  fix: args['--fix'] ?? false,\n  fixTypes: args['--fix-type'] ?? null,\n  ignorePath: args['--ignore-path'] || null,\n  ignore: !Boolean(args['--no-ignore']),\n  allowInlineConfig: !Boolean(args['--no-inline-config']),\n  reportUnusedDisableDirectives:\n    args['--report-unused-disable-directives'] || null,\n  cache: !Boolean(args['--no-cache']),\n  cacheLocation: args['--cache-location'] || defaultCacheLocation,\n  errorOnUnmatchedPattern: args['--error-on-unmatched-pattern']\n    ? Boolean(args['--error-on-unmatched-pattern'])\n    : false,\n})\n\nconst nextLint: cliCommand = async (argv) => {\n  const validArgs: arg.Spec = {\n    // Types\n    '--help': Boolean,\n    '--base-dir': String,\n    '--dir': [String],\n    '--strict': Boolean,\n\n    // Aliases\n    '-h': '--help',\n    '-b': '--base-dir',\n    '-d': '--dir',\n  }\n\n  const validEslintArgs: arg.Spec = {\n    // Types\n    '--config': String,\n    '--ext': [String],\n    '--resolve-plugins-relative-to': String,\n    '--rulesdir': [String],\n    '--fix': Boolean,\n    '--fix-type': [String],\n    '--ignore-path': String,\n    '--no-ignore': Boolean,\n    '--quiet': Boolean,\n    '--max-warnings': Number,\n    '--no-inline-config': Boolean,\n    '--report-unused-disable-directives': String,\n    '--cache': Boolean, // Although cache is enabled by default, this dummy flag still exists to not cause any breaking changes\n    '--no-cache': Boolean,\n    '--cache-location': String,\n    '--error-on-unmatched-pattern': Boolean,\n    '--format': String,\n\n    // Aliases\n    '-c': '--config',\n    '-f': '--format',\n  }\n\n  let args: arg.Result<arg.Spec>\n  try {\n    args = arg({ ...validArgs, ...validEslintArgs }, { argv })\n  } catch (error) {\n    if (error.code === 'ARG_UNKNOWN_OPTION') {\n      return printAndExit(error.message, 1)\n    }\n    throw error\n  }\n  if (args['--help']) {\n    printAndExit(\n      `\n      Description\n        Run ESLint on every file in specified directories. \n        If not configured, ESLint will be set up for the first time.\n\n      Usage\n        $ next lint <baseDir> [options]\n      \n      <baseDir> represents the directory of the Next.js application.\n      If no directory is provided, the current directory will be used.\n\n      Options\n        Basic configuration:\n          -h, --help                     List this help\n          -d, --dir Array                Set directory, or directories, to run ESLint - default: 'pages', 'components', and 'lib'\n          -c, --config path::String      Use this configuration file, overriding all other config options\n          --ext [String]                 Specify JavaScript file extensions - default: .js, .jsx, .ts, .tsx\n          --resolve-plugins-relative-to path::String  A folder where plugins should be resolved from, CWD by default\n\n        Initial setup:\n          --strict                       Creates an .eslintrc.json file using the Next.js strict configuration (only possible if no .eslintrc.json file is present)\n\n        Specifying rules:\n          --rulesdir [path::String]      Use additional rules from this directory\n\n        Fixing problems:\n          --fix                          Automatically fix problems\n          --fix-type Array               Specify the types of fixes to apply (problem, suggestion, layout)\n\n        Ignoring files:\n          --ignore-path path::String     Specify path of ignore file\n          --no-ignore                    Disable use of ignore files and patterns\n\n        Handling warnings:\n          --quiet                        Report errors only - default: false\n          --max-warnings Int             Number of warnings to trigger nonzero exit code - default: -1\n        \n        Output:\n          -f, --format String            Use a specific output format - default: Next.js custom formatter\n\n        Inline configuration comments:\n          --no-inline-config             Prevent comments from changing config or rules\n          --report-unused-disable-directives  Adds reported errors for unused eslint-disable directives (\"error\" | \"warn\" | \"off\")\n\n        Caching:\n          --no-cache                     Disable caching\n          --cache-location path::String  Path to the cache file or directory - default: .eslintcache\n        \n        Miscellaneous:\n          --error-on-unmatched-pattern   Show errors when any file patterns are unmatched - default: false\n          `,\n      0\n    )\n  }\n\n  const baseDir = resolve(args._[0] || '.')\n\n  // Check if the provided directory exists\n  if (!existsSync(baseDir)) {\n    printAndExit(`> No such directory exists as the project root: ${baseDir}`)\n  }\n\n  const nextConfig = await loadConfig(PHASE_PRODUCTION_BUILD, baseDir)\n\n  const dirs: string[] = args['--dir'] ?? nextConfig.eslint?.dirs\n  const lintDirs = (dirs ?? ESLINT_DEFAULT_DIRS).reduce(\n    (res: string[], d: string) => {\n      const currDir = join(baseDir, d)\n      if (!existsSync(currDir)) return res\n      res.push(currDir)\n      return res\n    },\n    []\n  )\n\n  const reportErrorsOnly = Boolean(args['--quiet'])\n  const maxWarnings = args['--max-warnings'] ?? -1\n  const formatter = args['--format'] || null\n  const strict = Boolean(args['--strict'])\n\n  const distDir = join(baseDir, nextConfig.distDir)\n  const defaultCacheLocation = join(distDir, 'cache', 'eslint/')\n\n  runLintCheck(\n    baseDir,\n    lintDirs,\n    false,\n    eslintOptions(args, defaultCacheLocation),\n    reportErrorsOnly,\n    maxWarnings,\n    formatter,\n    strict\n  )\n    .then(async (lintResults) => {\n      const lintOutput =\n        typeof lintResults === 'string' ? lintResults : lintResults?.output\n\n      if (typeof lintResults !== 'string' && lintResults?.eventInfo) {\n        const telemetry = new Telemetry({\n          distDir,\n        })\n        telemetry.record(\n          eventLintCheckCompleted({\n            ...lintResults.eventInfo,\n            buildLint: false,\n          })\n        )\n        await telemetry.flush()\n      }\n\n      if (\n        typeof lintResults !== 'string' &&\n        lintResults?.isError &&\n        lintOutput\n      ) {\n        throw new CompileError(lintOutput)\n      }\n\n      if (lintOutput) {\n        printAndExit(lintOutput, 0)\n      } else if (lintResults && !lintOutput) {\n        printAndExit(chalk.green('âœ” No ESLint warnings or errors'), 0)\n      }\n    })\n    .catch((err) => {\n      printAndExit(err.message)\n    })\n}\n\nexport { nextLint }\n"],"names":["args","eslintOptions","defaultCacheLocation","overrideConfigFile","extensions","resolvePluginsRelativeTo","rulePaths","fix","fixTypes","ignorePath","ignore","Boolean","allowInlineConfig","reportUnusedDisableDirectives","cache","cacheLocation","errorOnUnmatchedPattern","nextLint","argv","nextConfig","validArgs","String","validEslintArgs","Number","error","code","message","baseDir","_","dirs","eslint","lintDirs","reduce","res","d","currDir","push","reportErrorsOnly","maxWarnings","formatter","strict","distDir","then","lintResults","lintOutput","output","eventInfo","telemetry","record","buildLint","flush","isError","green","catch","err"],"mappings":"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"}