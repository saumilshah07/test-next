{"version":3,"sources":["../../cli/next-dev.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { resolve } from 'path'\nimport arg from 'next/dist/compiled/arg/index.js'\nimport { existsSync } from 'fs'\nimport startServer from '../server/lib/start-server'\nimport { printAndExit } from '../server/lib/utils'\nimport * as Log from '../build/output/log'\nimport { startedDevelopmentServer } from '../build/output'\nimport { cliCommand } from '../bin/next'\n\nconst nextDev: cliCommand = (argv) => {\n  const validArgs: arg.Spec = {\n    // Types\n    '--help': Boolean,\n    '--port': Number,\n    '--hostname': String,\n\n    // Aliases\n    '-h': '--help',\n    '-p': '--port',\n    '-H': '--hostname',\n  }\n  let args: arg.Result<arg.Spec>\n  try {\n    args = arg(validArgs, { argv })\n  } catch (error) {\n    if (error.code === 'ARG_UNKNOWN_OPTION') {\n      return printAndExit(error.message, 1)\n    }\n    throw error\n  }\n  if (args['--help']) {\n    console.log(`\n      Description\n        Starts the application in development mode (hot-code reloading, error\n        reporting, etc)\n\n      Usage\n        $ next dev <dir> -p <port number>\n\n      <dir> represents the directory of the Next.js application.\n      If no directory is provided, the current directory will be used.\n\n      Options\n        --port, -p      A port number on which to start the application\n        --hostname, -H  Hostname on which to start the application (default: 0.0.0.0)\n        --help, -h      Displays this message\n    `)\n    process.exit(0)\n  }\n\n  const dir = resolve(args._[0] || '.')\n\n  // Check if pages dir exists and warn if not\n  if (!existsSync(dir)) {\n    printAndExit(`> No such directory exists as the project root: ${dir}`)\n  }\n\n  async function preflight() {\n    const { getPackageVersion } = await import('../lib/get-package-version')\n    const [sassVersion, nodeSassVersion] = await Promise.all([\n      getPackageVersion({ cwd: dir, name: 'sass' }),\n      getPackageVersion({ cwd: dir, name: 'node-sass' }),\n    ])\n    if (sassVersion && nodeSassVersion) {\n      Log.warn(\n        'Your project has both `sass` and `node-sass` installed as dependencies, but should only use one or the other. ' +\n          'Please remove the `node-sass` dependency from your project. ' +\n          ' Read more: https://nextjs.org/docs/messages/duplicate-sass'\n      )\n    }\n  }\n\n  const port =\n    args['--port'] || (process.env.PORT && parseInt(process.env.PORT)) || 3000\n\n  // We do not set a default host value here to prevent breaking\n  // some set-ups that rely on listening on other interfaces\n  const host = args['--hostname']\n  const appUrl = `http://${\n    !host || host === '0.0.0.0' ? 'localhost' : host\n  }:${port}`\n\n  startServer({ dir, dev: true, isNextDevCommand: true }, port, host)\n    .then(async (app) => {\n      startedDevelopmentServer(appUrl, `${host || '0.0.0.0'}:${port}`)\n      // Start preflight after server is listening and ignore errors:\n      preflight().catch(() => {})\n      // Finalize server bootup:\n      await app.prepare()\n    })\n    .catch((err) => {\n      if (err.code === 'EADDRINUSE') {\n        let errorMessage = `Port ${port} is already in use.`\n        const pkgAppPath = require('next/dist/compiled/find-up').sync(\n          'package.json',\n          {\n            cwd: dir,\n          }\n        )\n        const appPackage = require(pkgAppPath)\n        if (appPackage.scripts) {\n          const nextScript = Object.entries(appPackage.scripts).find(\n            (scriptLine) => scriptLine[1] === 'next'\n          )\n          if (nextScript) {\n            errorMessage += `\\nUse \\`npm run ${nextScript[0]} -- -p <some other port>\\`.`\n          }\n        }\n        console.error(errorMessage)\n      } else {\n        console.error(err)\n      }\n      process.nextTick(() => process.exit(1))\n    })\n}\n\nexport { nextDev }\n"],"names":["Log","nextDev","argv","validArgs","Boolean","Number","String","args","error","code","message","console","log","process","exit","dir","_","preflight","getPackageVersion","sassVersion","nodeSassVersion","Promise","all","cwd","name","warn","port","env","PORT","parseInt","host","appUrl","dev","isNextDevCommand","then","app","catch","prepare","err","errorMessage","pkgAppPath","require","sync","appPackage","scripts","nextScript","Object","entries","find","scriptLine","nextTick"],"mappings":"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"}