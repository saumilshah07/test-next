{"version":3,"sources":["../../cli/next-export.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { resolve, join } from 'path'\nimport { existsSync } from 'fs'\nimport arg from 'next/dist/compiled/arg/index.js'\nimport exportApp from '../export'\nimport { printAndExit } from '../server/lib/utils'\nimport { cliCommand } from '../bin/next'\n\nconst nextExport: cliCommand = (argv) => {\n  const validArgs: arg.Spec = {\n    // Types\n    '--help': Boolean,\n    '--silent': Boolean,\n    '--outdir': String,\n    '--threads': Number,\n\n    // Aliases\n    '-h': '--help',\n    '-s': '--silent',\n    '-o': '--outdir',\n  }\n  let args: arg.Result<arg.Spec>\n  try {\n    args = arg(validArgs, { argv })\n  } catch (error) {\n    if (error.code === 'ARG_UNKNOWN_OPTION') {\n      return printAndExit(error.message, 1)\n    }\n    throw error\n  }\n  if (args['--help']) {\n    console.log(`\n      Description\n        Exports the application for production deployment\n\n      Usage\n        $ next export [options] <dir>\n\n      <dir> represents the directory of the Next.js application.\n      If no directory is provided, the current directory will be used.\n\n      Options\n        -h - list this help\n        -o - set the output dir (defaults to 'out')\n        -s - do not print any messages to console\n    `)\n    process.exit(0)\n  }\n\n  const dir = resolve(args._[0] || '.')\n\n  // Check if pages dir exists and warn if not\n  if (!existsSync(dir)) {\n    printAndExit(`> No such directory exists as the project root: ${dir}`)\n  }\n\n  const options = {\n    silent: args['--silent'] || false,\n    threads: args['--threads'],\n    outdir: args['--outdir'] ? resolve(args['--outdir']) : join(dir, 'out'),\n  }\n\n  exportApp(dir, options)\n    .then(() => {\n      printAndExit(`Export successful. Files written to ${options.outdir}`, 0)\n    })\n    .catch((err) => {\n      printAndExit(err)\n    })\n}\n\nexport { nextExport }\n"],"names":["nextExport","argv","validArgs","Boolean","String","Number","args","error","code","message","console","log","process","exit","dir","_","options","silent","threads","outdir","then","catch","err"],"mappings":";;;;;;AAC8B,GAAM,CAAN,KAAM;AACT,GAAI,CAAJ,GAAI;AACf,GAAiC,CAAjC,QAAiC;AAC3B,GAAW,CAAX,OAAW;AACJ,GAAqB,CAArB,MAAqB;;;;;;AAGlD,KAAK,CAACA,UAAU,IAAgBC,IAAI,GAAK,CAAC;IACxC,KAAK,CAACC,SAAS,GAAa,CAAC;QAC3B,EAAQ,AAAR,MAAQ;QACR,CAAQ,SAAEC,OAAO;QACjB,CAAU,WAAEA,OAAO;QACnB,CAAU,WAAEC,MAAM;QAClB,CAAW,YAAEC,MAAM;QAEnB,EAAU,AAAV,QAAU;QACV,CAAI,KAAE,CAAQ;QACd,CAAI,KAAE,CAAU;QAChB,CAAI,KAAE,CAAU;IAClB,CAAC;IACD,GAAG,CAACC,IAAI;IACR,GAAG,CAAC,CAAC;QACHA,IAAI,OApBQ,QAAiC,UAoBlCJ,SAAS,EAAE,CAAC;YAACD,IAAI;QAAC,CAAC;IAChC,CAAC,CAAC,KAAK,EAAEM,KAAK,EAAE,CAAC;QACf,EAAE,EAAEA,KAAK,CAACC,IAAI,KAAK,CAAoB,qBAAE,CAAC;YACxC,MAAM,KArBiB,MAAqB,eAqBxBD,KAAK,CAACE,OAAO,EAAE,CAAC;QACtC,CAAC;QACD,KAAK,CAACF,KAAK;IACb,CAAC;IACD,EAAE,EAAED,IAAI,CAAC,CAAQ,UAAG,CAAC;QACnBI,OAAO,CAACC,GAAG,EAAE,8ZAcb;QACAC,OAAO,CAACC,IAAI,CAAC,CAAC;IAChB,CAAC;IAED,KAAK,CAACC,GAAG,OAhDmB,KAAM,UAgDdR,IAAI,CAACS,CAAC,CAAC,CAAC,KAAK,CAAG;IAEpC,EAA4C,AAA5C,0CAA4C;IAC5C,EAAE,OAlDuB,GAAI,aAkDbD,GAAG,GAAG,CAAC;YA/CI,MAAqB,gBAgDhC,gDAAgD,EAAEA,GAAG;IACrE,CAAC;IAED,KAAK,CAACE,OAAO,GAAG,CAAC;QACfC,MAAM,EAAEX,IAAI,CAAC,CAAU,cAAK,KAAK;QACjCY,OAAO,EAAEZ,IAAI,CAAC,CAAW;QACzBa,MAAM,EAAEb,IAAI,CAAC,CAAU,iBA1DG,KAAM,UA0DGA,IAAI,CAAC,CAAU,kBA1DxB,KAAM,OA0D4BQ,GAAG,EAAE,CAAK;IACxE,CAAC;QAxDmB,OAAW,UA0DrBA,GAAG,EAAEE,OAAO,EACnBI,IAAI,KAAO,CAAC;YA1DY,MAAqB,gBA2D9B,oCAAoC,EAAEJ,OAAO,CAACG,MAAM,IAAI,CAAC;IACzE,CAAC,EACAE,KAAK,EAAEC,GAAG,GAAK,CAAC;YA7DQ,MAAqB,eA8D/BA,GAAG;IAClB,CAAC;AACL,CAAC;QAEQtB,UAAU,GAAVA,UAAU"}