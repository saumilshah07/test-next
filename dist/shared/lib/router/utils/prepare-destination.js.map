{"version":3,"sources":["../../../../../shared/lib/router/utils/prepare-destination.ts"],"sourcesContent":["import type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport { parseUrl } from './parse-url'\nimport * as pathToRegexp from 'next/dist/compiled/path-to-regexp'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\n\ntype Params = { [param: string]: any }\n\n// ensure only a-zA-Z are used for param names for proper interpolating\n// with path-to-regexp\nexport const getSafeParamName = (paramName: string) => {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nexport function matchHas(\n  req: IncomingMessage,\n  has: RouteHas[],\n  query: Params\n): false | Params {\n  const params: Params = {}\n\n  const allMatch = has.every((hasItem) => {\n    let value: undefined | string\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        value = (req as any).cookies[hasItem.key]\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':')[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = value.match(matcher)\n\n      if (matches) {\n        if (matches.groups) {\n          Object.keys(matches.groups).forEach((groupKey) => {\n            params[groupKey] = matches.groups![groupKey]\n          })\n        } else if (hasItem.type === 'host' && matches[0]) {\n          params.host = matches[0]\n        }\n        return true\n      }\n    }\n    return false\n  })\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return pathToRegexp\n    .compile(`/${value}`, { validate: false })(params)\n    .substr(1)\n}\n\nexport default function prepareDestination(\n  destination: string,\n  params: Params,\n  query: ParsedUrlQuery,\n  appendParamsToQuery: boolean\n) {\n  // clone query so we don't modify the original\n  query = Object.assign({}, query)\n  const hadLocale = query.__nextLocale\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n\n  const parsedDestination = parseUrl(destination)\n  const destQuery = parsedDestination.query\n  const destPath = `${parsedDestination.pathname!}${\n    parsedDestination.hash || ''\n  }`\n  const destPathParamKeys: pathToRegexp.Key[] = []\n  pathToRegexp.pathToRegexp(destPath, destPathParamKeys)\n\n  const destPathParams = destPathParamKeys.map((key) => key.name)\n\n  let destinationCompiler = pathToRegexp.compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n  let newUrl\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) => compileNonPath(value, params))\n    } else {\n      destQuery[key] = compileNonPath(strOrArray, params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(params)\n\n  // remove internal param for i18n\n  if (hadLocale) {\n    paramKeys = paramKeys.filter((name) => name !== 'nextInternalLocale')\n  }\n\n  if (\n    appendParamsToQuery &&\n    !paramKeys.some((key) => destPathParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = params[key]\n      }\n    }\n  }\n\n  try {\n    newUrl = destinationCompiler(params)\n\n    const [pathname, hash] = newUrl.split('#')\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    parsedDestination,\n  }\n}\n"],"names":["matchHas","compileNonPath","prepareDestination","pathToRegexp","getSafeParamName","paramName","newParamName","i","length","charCode","charCodeAt","req","has","query","params","allMatch","every","hasItem","value","key","type","toLowerCase","headers","cookies","host","hostname","split","matcher","RegExp","matches","match","groups","Object","keys","forEach","groupKey","includes","replace","compile","validate","substr","destination","appendParamsToQuery","assign","hadLocale","__nextLocale","__nextDefaultLocale","parsedDestination","destQuery","destPath","pathname","hash","destPathParamKeys","destPathParams","map","name","destinationCompiler","newUrl","strOrArray","entries","Array","isArray","paramKeys","filter","some","search","err","message","Error"],"mappings":"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"}