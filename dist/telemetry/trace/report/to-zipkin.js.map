{"version":3,"sources":["../../../../telemetry/trace/report/to-zipkin.ts"],"sourcesContent":["import retry from 'next/dist/compiled/async-retry'\nimport { randomBytes } from 'crypto'\nimport fetch from 'node-fetch'\nimport * as Log from '../../../build/output/log'\n\nlet traceId: string\nlet batch: ReturnType<typeof batcher> | undefined\n\nconst localEndpoint = {\n  serviceName: 'nextjs',\n  ipv4: '127.0.0.1',\n  port: 9411,\n}\nconst zipkinUrl = `http://${localEndpoint.ipv4}:${localEndpoint.port}`\nconst zipkinAPI = `${zipkinUrl}/api/v2/spans`\n\ntype Event = {\n  traceId: string\n  parentId?: string\n  name: string\n  id: string\n  timestamp: number\n  duration: number\n  localEndpoint?: typeof localEndpoint\n  tags?: Object\n}\n\n// Batch events as zipkin allows for multiple events to be sent in one go\nexport function batcher(reportEvents: (evts: Event[]) => Promise<void>) {\n  const events: Event[] = []\n  // Promise queue to ensure events are always sent on flushAll\n  const queue = new Set()\n  return {\n    flushAll: async () => {\n      await Promise.all(queue)\n      if (events.length > 0) {\n        await reportEvents(events)\n        events.length = 0\n      }\n    },\n    report: (event: Event) => {\n      events.push(event)\n\n      if (events.length > 100) {\n        const evts = events.slice()\n        events.length = 0\n        const report = reportEvents(evts)\n        queue.add(report)\n        report.then(() => queue.delete(report))\n      }\n    },\n  }\n}\n\nconst reportToLocalHost = (\n  name: string,\n  duration: number,\n  timestamp: number,\n  id: string,\n  parentId?: string,\n  attrs?: Object\n) => {\n  if (!traceId) {\n    traceId = process.env.TRACE_ID || randomBytes(8).toString('hex')\n    Log.info(\n      `Zipkin trace will be available on ${zipkinUrl}/zipkin/traces/${traceId}`\n    )\n  }\n\n  if (!batch) {\n    batch = batcher((events) => {\n      // Ensure ECONNRESET error is retried 3 times before erroring out\n      return retry(\n        () =>\n          // Send events to zipkin\n          fetch(zipkinAPI, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(events),\n          }),\n        { minTimeout: 500, retries: 3, factor: 1 }\n      ).catch(console.log)\n    })\n  }\n\n  batch.report({\n    traceId,\n    parentId,\n    name,\n    id,\n    timestamp,\n    duration,\n    localEndpoint,\n    tags: attrs,\n  })\n}\n\nexport default {\n  flushAll: () => (batch ? batch.flushAll() : undefined),\n  report: reportToLocalHost,\n}\n"],"names":["batcher","Log","traceId","batch","localEndpoint","serviceName","ipv4","port","zipkinUrl","zipkinAPI","reportEvents","events","queue","Set","flushAll","Promise","all","length","report","event","push","evts","slice","add","then","delete","reportToLocalHost","name","duration","timestamp","id","parentId","attrs","process","env","TRACE_ID","toString","info","method","headers","body","JSON","stringify","minTimeout","retries","factor","catch","console","log","tags","undefined"],"mappings":"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"}