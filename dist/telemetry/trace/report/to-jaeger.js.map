{"version":3,"sources":["../../../../telemetry/trace/report/to-jaeger.ts"],"sourcesContent":["import retry from 'next/dist/compiled/async-retry'\nimport { randomBytes } from 'crypto'\nimport fetch from 'node-fetch'\nimport * as Log from '../../../build/output/log'\n// Jaeger uses Zipkin's reporting\nimport { batcher } from './to-zipkin'\n\nlet traceId: string\nlet batch: ReturnType<typeof batcher> | undefined\n\nconst localEndpoint = {\n  serviceName: 'nextjs',\n  ipv4: '127.0.0.1',\n  port: 9411,\n}\n// Jaeger supports Zipkin's reporting API\nconst zipkinUrl = `http://${localEndpoint.ipv4}:${localEndpoint.port}`\nconst jaegerWebUiUrl = `http://${localEndpoint.ipv4}:16686`\nconst zipkinAPI = `${zipkinUrl}/api/v2/spans`\n\nfunction logWebUrl() {\n  Log.info(\n    `Jaeger trace will be available on ${jaegerWebUiUrl}/trace/${traceId}`\n  )\n}\n\nconst reportToLocalHost = (\n  name: string,\n  duration: number,\n  timestamp: number,\n  id: string,\n  parentId?: string,\n  attrs?: Object\n) => {\n  if (!traceId) {\n    traceId = process.env.TRACE_ID || randomBytes(8).toString('hex')\n    logWebUrl()\n  }\n\n  if (!batch) {\n    batch = batcher((events) => {\n      const eventsJson = JSON.stringify(events)\n      // Ensure ECONNRESET error is retried 3 times before erroring out\n      return retry(\n        () =>\n          // Send events to zipkin\n          fetch(zipkinAPI, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: eventsJson,\n          }),\n        { minTimeout: 500, retries: 3, factor: 1 }\n      )\n        .then(async (res: any) => {\n          if (res.status !== 202) {\n            console.log({\n              status: res.status,\n              body: await res.text(),\n              events: eventsJson,\n            })\n          }\n        })\n        .catch(console.log)\n    })\n  }\n\n  batch.report({\n    traceId,\n    parentId,\n    name,\n    id,\n    timestamp,\n    duration,\n    localEndpoint,\n    tags: attrs,\n  })\n}\n\nexport default {\n  flushAll: () =>\n    batch ? batch.flushAll().then(() => logWebUrl()) : undefined,\n  report: reportToLocalHost,\n}\n"],"names":["Log","traceId","batch","localEndpoint","serviceName","ipv4","port","zipkinUrl","jaegerWebUiUrl","zipkinAPI","logWebUrl","info","reportToLocalHost","name","duration","timestamp","id","parentId","attrs","process","env","TRACE_ID","toString","events","eventsJson","JSON","stringify","method","headers","body","minTimeout","retries","factor","then","res","status","console","log","text","catch","report","tags","flushAll","undefined"],"mappings":";;;;;AAAkB,GAAgC,CAAhC,WAAgC;AACtB,GAAQ,CAAR,OAAQ;AAClB,GAAY,CAAZ,UAAY;AAClBA,GAAG,CAAHA,GAAG;AAES,GAAa,CAAb,SAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErC,GAAG,CAACC,OAAO;AACX,GAAG,CAACC,KAAK;AAET,KAAK,CAACC,aAAa,GAAG,CAAC;IACrBC,WAAW,EAAE,CAAQ;IACrBC,IAAI,EAAE,CAAW;IACjBC,IAAI,EAAE,IAAI;AACZ,CAAC;AACD,EAAyC,AAAzC,uCAAyC;AACzC,KAAK,CAACC,SAAS,IAAI,OAAO,EAAEJ,aAAa,CAACE,IAAI,CAAC,CAAC,EAAEF,aAAa,CAACG,IAAI;AACpE,KAAK,CAACE,cAAc,IAAI,OAAO,EAAEL,aAAa,CAACE,IAAI,CAAC,MAAM;AAC1D,KAAK,CAACI,SAAS,MAAMF,SAAS,CAAC,aAAa;SAEnCG,SAAS,GAAG,CAAC;IAjBVV,GAAG,CAkBTW,IAAI,EACL,kCAAkC,EAAEH,cAAc,CAAC,OAAO,EAAEP,OAAO;AAExE,CAAC;AAED,KAAK,CAACW,iBAAiB,IACrBC,IAAY,EACZC,QAAgB,EAChBC,SAAiB,EACjBC,EAAU,EACVC,QAAiB,EACjBC,KAAc,GACX,CAAC;IACJ,EAAE,GAAGjB,OAAO,EAAE,CAAC;QACbA,OAAO,GAAGkB,OAAO,CAACC,GAAG,CAACC,QAAQ,QAlCN,OAAQ,cAkCc,CAAC,EAAEC,QAAQ,CAAC,CAAK;QAC/DZ,SAAS;IACX,CAAC;IAED,EAAE,GAAGR,KAAK,EAAE,CAAC;QACXA,KAAK,OAnCe,SAAa,WAmChBqB,MAAM,GAAK,CAAC;YAC3B,KAAK,CAACC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM;YACxC,EAAiE,AAAjE,+DAAiE;YACjE,MAAM,KA3CM,WAAgC,cA6CxC,EAAwB,AAAxB,sBAAwB;oBA3ChB,UAAY,UA4Cdd,SAAS,EAAE,CAAC;oBAChBkB,MAAM,EAAE,CAAM;oBACdC,OAAO,EAAE,CAAC;wBAAC,CAAc,eAAE,CAAkB;oBAAC,CAAC;oBAC/CC,IAAI,EAAEL,UAAU;gBAClB,CAAC;cACH,CAAC;gBAACM,UAAU,EAAE,GAAG;gBAAEC,OAAO,EAAE,CAAC;gBAAEC,MAAM,EAAE,CAAC;YAAC,CAAC,EAEzCC,IAAI,QAAQC,GAAQ,GAAK,CAAC;gBACzB,EAAE,EAAEA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE,CAAC;oBACvBC,OAAO,CAACC,GAAG,CAAC,CAAC;wBACXF,MAAM,EAAED,GAAG,CAACC,MAAM;wBAClBN,IAAI,EAAE,KAAK,CAACK,GAAG,CAACI,IAAI;wBACpBf,MAAM,EAAEC,UAAU;oBACpB,CAAC;gBACH,CAAC;YACH,CAAC,EACAe,KAAK,CAACH,OAAO,CAACC,GAAG;QACtB,CAAC;IACH,CAAC;IAEDnC,KAAK,CAACsC,MAAM,CAAC,CAAC;QACZvC,OAAO;QACPgB,QAAQ;QACRJ,IAAI;QACJG,EAAE;QACFD,SAAS;QACTD,QAAQ;QACRX,aAAa;QACbsC,IAAI,EAAEvB,KAAK;IACb,CAAC;AACH,CAAC;eAEc,CAAC;IACdwB,QAAQ,MACNxC,KAAK,GAAGA,KAAK,CAACwC,QAAQ,GAAGT,IAAI,KAAOvB,SAAS;YAAMiC,SAAS;;IAC9DH,MAAM,EAAE5B,iBAAiB;AAC3B,CAAC"}