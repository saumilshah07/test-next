{"version":3,"sources":["../../build/index.ts"],"sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport chalk from 'chalk'\nimport crypto from 'crypto'\nimport { promises, writeFileSync } from 'fs'\nimport { Worker } from '../lib/worker'\nimport devalue from 'next/dist/compiled/devalue'\nimport escapeStringRegexp from 'next/dist/compiled/escape-string-regexp'\nimport findUp from 'next/dist/compiled/find-up'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport path from 'path'\nimport formatWebpackMessages from '../client/dev/error-overlay/format-webpack-messages'\nimport {\n  STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n} from '../lib/constants'\nimport { fileExists } from '../lib/file-exists'\nimport { findPagesDir } from '../lib/find-pages-dir'\nimport loadCustomRoutes, {\n  CustomRoutes,\n  getRedirectStatus,\n  modifyRouteRegex,\n  normalizeRouteRegex,\n  Redirect,\n  Rewrite,\n  RouteType,\n} from '../lib/load-custom-routes'\nimport { nonNullable } from '../lib/non-nullable'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport { verifyAndLint } from '../lib/verifyAndLint'\nimport { verifyTypeScriptSetup } from '../lib/verifyTypeScriptSetup'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  FONT_MANIFEST,\n  IMAGES_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  PRERENDER_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  SERVER_FILES_MANIFEST,\n  STATIC_STATUS_PAGES,\n} from '../shared/lib/constants'\nimport {\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../shared/lib/router/utils'\nimport { __ApiPreviewProps } from '../server/api-utils'\nimport loadConfig, { isTargetLikeServerless } from '../server/config'\nimport { BuildManifest } from '../server/get-page-files'\nimport '../server/node-polyfill-fetch'\nimport { normalizePagePath } from '../server/normalize-page-path'\nimport { getPagePath } from '../server/require'\nimport * as ciEnvironment from '../telemetry/ci-info'\nimport {\n  eventBuildCompleted,\n  eventBuildOptimize,\n  eventCliSession,\n  eventNextPlugins,\n  eventTypeCheckCompleted,\n} from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport { CompilerResult, runCompiler } from './compiler'\nimport { createEntrypoints, createPagesMapping } from './entries'\nimport { generateBuildId } from './generate-build-id'\nimport { isWriteable } from './is-writeable'\nimport * as Log from './output/log'\nimport createSpinner from './spinner'\nimport { trace, flushAllTraces, setGlobal } from '../telemetry/trace'\nimport {\n  collectPages,\n  detectConflictingPaths,\n  computeFromManifest,\n  getJsPageSizeInKb,\n  PageInfo,\n  printCustomRoutes,\n  printTreeView,\n  getCssFilePaths,\n} from './utils'\nimport getBaseWebpackConfig from './webpack-config'\nimport { PagesManifest } from './webpack/plugins/pages-manifest-plugin'\nimport { writeBuildId } from './write-build-id'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport { NextConfigComplete } from '../server/config-shared'\n\nexport type SsgRoute = {\n  initialRevalidateSeconds: number | false\n  srcRoute: string | null\n  dataRoute: string\n}\n\nexport type DynamicSsgRoute = {\n  routeRegex: string\n  fallback: string | null | false\n  dataRoute: string\n  dataRouteRegex: string\n}\n\nexport type PrerenderManifest = {\n  version: 3\n  routes: { [route: string]: SsgRoute }\n  dynamicRoutes: { [route: string]: DynamicSsgRoute }\n  notFoundRoutes: string[]\n  preview: __ApiPreviewProps\n}\n\nexport default async function build(\n  dir: string,\n  conf = null,\n  reactProductionProfiling = false,\n  debugOutput = false,\n  runLint = true\n): Promise<void> {\n  const nextBuildSpan = trace('next-build')\n\n  const buildResult = await nextBuildSpan.traceAsyncFn(async () => {\n    // attempt to load global env values so they are available in next.config.js\n    const { loadedEnvFiles } = nextBuildSpan\n      .traceChild('load-dotenv')\n      .traceFn(() => loadEnvConfig(dir, false, Log))\n\n    const config: NextConfigComplete = await nextBuildSpan\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_PRODUCTION_BUILD, dir, conf))\n    const distDir = path.join(dir, config.distDir)\n    setGlobal('distDir', distDir)\n\n    const { target } = config\n    const buildId: string = await nextBuildSpan\n      .traceChild('generate-buildid')\n      .traceAsyncFn(() => generateBuildId(config.generateBuildId, nanoid))\n\n    const customRoutes: CustomRoutes = await nextBuildSpan\n      .traceChild('load-custom-routes')\n      .traceAsyncFn(() => loadCustomRoutes(config))\n\n    const { headers, rewrites, redirects } = customRoutes\n\n    const cacheDir = path.join(distDir, 'cache')\n    if (ciEnvironment.isCI && !ciEnvironment.hasNextSupport) {\n      const hasCache = await fileExists(cacheDir)\n\n      if (!hasCache) {\n        // Intentionally not piping to stderr in case people fail in CI when\n        // stderr is detected.\n        console.log(\n          `${Log.prefixes.warn} No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache`\n        )\n      }\n    }\n\n    const telemetry = new Telemetry({ distDir })\n    setGlobal('telemetry', telemetry)\n\n    const publicDir = path.join(dir, 'public')\n    const pagesDir = findPagesDir(dir)\n    const hasPublicDir = await fileExists(publicDir)\n\n    telemetry.record(\n      eventCliSession(PHASE_PRODUCTION_BUILD, dir, {\n        webpackVersion: isWebpack5 ? 5 : 4,\n        cliCommand: 'build',\n        isSrcDir: path.relative(dir, pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n\n    eventNextPlugins(path.resolve(dir)).then((events) =>\n      telemetry.record(events)\n    )\n\n    const ignoreTypeScriptErrors = Boolean(config.typescript.ignoreBuildErrors)\n    const typeCheckStart = process.hrtime()\n    const typeCheckingSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} ${\n        ignoreTypeScriptErrors\n          ? 'Skipping validation of types'\n          : 'Checking validity of types'\n      }`,\n    })\n\n    const verifyResult = await nextBuildSpan\n      .traceChild('verify-typescript-setup')\n      .traceAsyncFn(() =>\n        verifyTypeScriptSetup(\n          dir,\n          pagesDir,\n          !ignoreTypeScriptErrors,\n          !config.images.disableStaticImages,\n          cacheDir\n        )\n      )\n\n    const typeCheckEnd = process.hrtime(typeCheckStart)\n\n    if (!ignoreTypeScriptErrors) {\n      telemetry.record(\n        eventTypeCheckCompleted({\n          durationInSeconds: typeCheckEnd[0],\n          typescriptVersion: verifyResult.version,\n          inputFilesCount: verifyResult.result?.inputFilesCount,\n          totalFilesCount: verifyResult.result?.totalFilesCount,\n          incremental: verifyResult.result?.incremental,\n        })\n      )\n    }\n\n    if (typeCheckingSpinner) {\n      typeCheckingSpinner.stopAndPersist()\n    }\n\n    const ignoreESLint = Boolean(config.eslint.ignoreDuringBuilds)\n    const eslintCacheDir = path.join(cacheDir, 'eslint/')\n    if (!ignoreESLint && runLint) {\n      await nextBuildSpan\n        .traceChild('verify-and-lint')\n        .traceAsyncFn(async () => {\n          await verifyAndLint(\n            dir,\n            eslintCacheDir,\n            config.eslint?.dirs,\n            config.experimental.cpus,\n            config.experimental.workerThreads,\n            telemetry\n          )\n        })\n    }\n\n    const buildSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Creating an optimized production build`,\n    })\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    const pagePaths: string[] = await nextBuildSpan\n      .traceChild('collect-pages')\n      .traceAsyncFn(() => collectPages(pagesDir, config.pageExtensions))\n\n    // needed for static exporting since we want to replace with HTML\n    // files\n    const allStaticPages = new Set<string>()\n    let allPageInfos = new Map<string, PageInfo>()\n\n    const previewProps: __ApiPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    }\n\n    const mappedPages = nextBuildSpan\n      .traceChild('create-pages-mapping')\n      .traceFn(() =>\n        createPagesMapping(pagePaths, config.pageExtensions, isWebpack5, false)\n      )\n    const entrypoints = nextBuildSpan\n      .traceChild('create-entrypoints')\n      .traceFn(() =>\n        createEntrypoints(\n          mappedPages,\n          target,\n          buildId,\n          previewProps,\n          config,\n          loadedEnvFiles\n        )\n      )\n    const pageKeys = Object.keys(mappedPages)\n    const conflictingPublicFiles: string[] = []\n    const hasCustomErrorPage: boolean =\n      mappedPages['/_error'].startsWith('private-next-pages')\n    const hasPages404 = Boolean(\n      mappedPages['/404'] &&\n        mappedPages['/404'].startsWith('private-next-pages')\n    )\n\n    if (hasPublicDir) {\n      const hasPublicUnderScoreNextDir = await fileExists(\n        path.join(publicDir, '_next')\n      )\n      if (hasPublicUnderScoreNextDir) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    await nextBuildSpan\n      .traceChild('public-dir-conflict-check')\n      .traceAsyncFn(async () => {\n        // Check if pages conflict with files in `public`\n        // Only a page of public file can be served, not both.\n        for (const page in mappedPages) {\n          const hasPublicPageFile = await fileExists(\n            path.join(publicDir, page === '/' ? '/index' : page),\n            'file'\n          )\n          if (hasPublicPageFile) {\n            conflictingPublicFiles.push(page)\n          }\n        }\n\n        const numConflicting = conflictingPublicFiles.length\n\n        if (numConflicting) {\n          throw new Error(\n            `Conflicting public and page file${\n              numConflicting === 1 ? ' was' : 's were'\n            } found. https://nextjs.org/docs/messages/conflicting-public-file-page\\n${conflictingPublicFiles.join(\n              '\\n'\n            )}`\n          )\n        }\n      })\n\n    const nestedReservedPages = pageKeys.filter((page) => {\n      return (\n        page.match(/\\/(_app|_document|_error)$/) && path.dirname(page) !== '/'\n      )\n    })\n\n    if (nestedReservedPages.length) {\n      Log.warn(\n        `The following reserved Next.js pages were detected not directly under the pages directory:\\n` +\n          nestedReservedPages.join('\\n') +\n          `\\nSee more info here: https://nextjs.org/docs/messages/nested-reserved-page\\n`\n      )\n    }\n\n    const restrictedRedirectPaths = ['/_next'].map((p) =>\n      config.basePath ? `${config.basePath}${p}` : p\n    )\n\n    const buildCustomRoute = (\n      r: {\n        source: string\n        locale?: false\n        basePath?: false\n        statusCode?: number\n        destination?: string\n      },\n      type: RouteType\n    ) => {\n      const keys: any[] = []\n\n      const routeRegex = pathToRegexp(r.source, keys, {\n        strict: true,\n        sensitive: false,\n        delimiter: '/', // default is `/#?`, but Next does not pass query info\n      })\n      let regexSource = routeRegex.source\n\n      if (!(r as any).internal) {\n        regexSource = modifyRouteRegex(\n          routeRegex.source,\n          type === 'redirect' ? restrictedRedirectPaths : undefined\n        )\n      }\n\n      return {\n        ...r,\n        ...(type === 'redirect'\n          ? {\n              statusCode: getRedirectStatus(r as Redirect),\n              permanent: undefined,\n            }\n          : {}),\n        regex: normalizeRouteRegex(regexSource),\n      }\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const routesManifest: {\n      version: number\n      pages404: boolean\n      basePath: string\n      redirects: Array<ReturnType<typeof buildCustomRoute>>\n      rewrites:\n        | Array<ReturnType<typeof buildCustomRoute>>\n        | {\n            beforeFiles: Array<ReturnType<typeof buildCustomRoute>>\n            afterFiles: Array<ReturnType<typeof buildCustomRoute>>\n            fallback: Array<ReturnType<typeof buildCustomRoute>>\n          }\n      headers: Array<ReturnType<typeof buildCustomRoute>>\n      dynamicRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dataRoutes: Array<{\n        page: string\n        routeKeys?: { [key: string]: string }\n        dataRouteRegex: string\n        namedDataRouteRegex?: string\n      }>\n      i18n?: {\n        domains?: Array<{\n          http?: true\n          domain: string\n          locales?: string[]\n          defaultLocale: string\n        }>\n        locales: string[]\n        defaultLocale: string\n        localeDetection?: false\n      }\n    } = nextBuildSpan.traceChild('generate-routes-manifest').traceFn(() => ({\n      version: 3,\n      pages404: true,\n      basePath: config.basePath,\n      redirects: redirects.map((r: any) => buildCustomRoute(r, 'redirect')),\n      headers: headers.map((r: any) => buildCustomRoute(r, 'header')),\n      dynamicRoutes: getSortedRoutes(pageKeys)\n        .filter(isDynamicRoute)\n        .map((page) => {\n          const routeRegex = getRouteRegex(page)\n          return {\n            page,\n            regex: normalizeRouteRegex(routeRegex.re.source),\n            routeKeys: routeRegex.routeKeys,\n            namedRegex: routeRegex.namedRegex,\n          }\n        }),\n      dataRoutes: [],\n      i18n: config.i18n || undefined,\n    }))\n\n    if (rewrites.beforeFiles.length === 0 && rewrites.fallback.length === 0) {\n      routesManifest.rewrites = rewrites.afterFiles.map((r: any) =>\n        buildCustomRoute(r, 'rewrite')\n      )\n    } else {\n      routesManifest.rewrites = {\n        beforeFiles: rewrites.beforeFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        afterFiles: rewrites.afterFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        fallback: rewrites.fallback.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n      }\n    }\n    const combinedRewrites: Rewrite[] = [\n      ...rewrites.beforeFiles,\n      ...rewrites.afterFiles,\n      ...rewrites.fallback,\n    ]\n\n    const distDirCreated = await nextBuildSpan\n      .traceChild('create-dist-dir')\n      .traceAsyncFn(async () => {\n        try {\n          await promises.mkdir(distDir, { recursive: true })\n          return true\n        } catch (err) {\n          if (err.code === 'EPERM') {\n            return false\n          }\n          throw err\n        }\n      })\n\n    if (!distDirCreated || !(await isWriteable(distDir))) {\n      throw new Error(\n        '> Build directory is not writeable. https://nextjs.org/docs/messages/build-dir-not-writeable'\n      )\n    }\n\n    if (config.cleanDistDir) {\n      await recursiveDelete(distDir, /^cache/)\n    }\n\n    // We need to write the manifest with rewrites before build\n    // so serverless can import the manifest\n    await nextBuildSpan\n      .traceChild('write-routes-manifest')\n      .traceAsyncFn(() =>\n        promises.writeFile(\n          routesManifestPath,\n          JSON.stringify(routesManifest),\n          'utf8'\n        )\n      )\n\n    const manifestPath = path.join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )\n\n    const requiredServerFiles = nextBuildSpan\n      .traceChild('generate-required-server-files')\n      .traceFn(() => ({\n        version: 1,\n        config: {\n          ...config,\n          compress: false,\n          configFile: undefined,\n        },\n        appDir: dir,\n        files: [\n          ROUTES_MANIFEST,\n          path.relative(distDir, manifestPath),\n          BUILD_MANIFEST,\n          PRERENDER_MANIFEST,\n          REACT_LOADABLE_MANIFEST,\n          config.optimizeFonts\n            ? path.join(\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                FONT_MANIFEST\n              )\n            : null,\n          BUILD_ID_FILE,\n        ]\n          .filter(nonNullable)\n          .map((file) => path.join(config.distDir, file)),\n        ignore: [] as string[],\n      }))\n\n    const runWebpackSpan = nextBuildSpan.traceChild('run-webpack-compiler')\n    const configs = await runWebpackSpan\n      .traceChild('generate-webpack-config')\n      .traceAsyncFn(() =>\n        Promise.all([\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: false,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.client,\n            rewrites,\n            runWebpackSpan,\n          }),\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: true,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.server,\n            rewrites,\n            runWebpackSpan,\n          }),\n        ])\n      )\n\n    const clientConfig = configs[0]\n\n    if (\n      clientConfig.optimization &&\n      (clientConfig.optimization.minimize !== true ||\n        (clientConfig.optimization.minimizer &&\n          clientConfig.optimization.minimizer.length === 0))\n    ) {\n      Log.warn(\n        `Production code optimization has been disabled in your project. Read more: https://nextjs.org/docs/messages/minification-disabled`\n      )\n    }\n\n    const webpackBuildStart = process.hrtime()\n\n    let result: CompilerResult = { warnings: [], errors: [] }\n    // We run client and server compilation separately to optimize for memory usage\n    await runWebpackSpan.traceAsyncFn(async () => {\n      const clientResult = await runCompiler(clientConfig, { runWebpackSpan })\n      // Fail build if clientResult contains errors\n      if (clientResult.errors.length > 0) {\n        result = {\n          warnings: [...clientResult.warnings],\n          errors: [...clientResult.errors],\n        }\n      } else {\n        const serverResult = await runCompiler(configs[1], { runWebpackSpan })\n        result = {\n          warnings: [...clientResult.warnings, ...serverResult.warnings],\n          errors: [...clientResult.errors, ...serverResult.errors],\n        }\n      }\n    })\n\n    const webpackBuildEnd = process.hrtime(webpackBuildStart)\n    if (buildSpinner) {\n      buildSpinner.stopAndPersist()\n    }\n\n    result = nextBuildSpan\n      .traceChild('format-webpack-messages')\n      .traceFn(() => formatWebpackMessages(result))\n\n    if (result.errors.length > 0) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (result.errors.length > 1) {\n        result.errors.length = 1\n      }\n      const error = result.errors.join('\\n\\n')\n\n      console.error(chalk.red('Failed to compile.\\n'))\n\n      if (\n        error.indexOf('private-next-pages') > -1 &&\n        error.indexOf('does not contain a default export') > -1\n      ) {\n        const page_name_regex = /'private-next-pages\\/(?<page_name>[^']*)'/\n        const parsed = page_name_regex.exec(error)\n        const page_name = parsed && parsed.groups && parsed.groups.page_name\n        throw new Error(\n          `webpack build failed: found page without a React Component as default export in pages/${page_name}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.`\n        )\n      }\n\n      console.error(error)\n      console.error()\n\n      if (\n        error.indexOf('private-next-pages') > -1 ||\n        error.indexOf('__next_polyfill__') > -1\n      ) {\n        throw new Error(\n          '> webpack config.resolve.alias was incorrectly overridden. https://nextjs.org/docs/messages/invalid-resolve-alias'\n        )\n      }\n      throw new Error('> Build failed because of webpack errors')\n    } else {\n      telemetry.record(\n        eventBuildCompleted(pagePaths, {\n          durationInSeconds: webpackBuildEnd[0],\n        })\n      )\n\n      if (result.warnings.length > 0) {\n        Log.warn('Compiled with warnings\\n')\n        console.warn(result.warnings.join('\\n\\n'))\n        console.warn()\n      } else {\n        Log.info('Compiled successfully')\n      }\n    }\n\n    const postCompileSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Collecting page data`,\n    })\n\n    const buildManifestPath = path.join(distDir, BUILD_MANIFEST)\n\n    const ssgPages = new Set<string>()\n    const ssgStaticFallbackPages = new Set<string>()\n    const ssgBlockingFallbackPages = new Set<string>()\n    const staticPages = new Set<string>()\n    const invalidPages = new Set<string>()\n    const hybridAmpPages = new Set<string>()\n    const serverPropsPages = new Set<string>()\n    const additionalSsgPaths = new Map<string, Array<string>>()\n    const additionalSsgPathsEncoded = new Map<string, Array<string>>()\n    const pageTraceIncludes = new Map<string, Array<string>>()\n    const pageTraceExcludes = new Map<string, Array<string>>()\n    const pageInfos = new Map<string, PageInfo>()\n    const pagesManifest = JSON.parse(\n      await promises.readFile(manifestPath, 'utf8')\n    ) as PagesManifest\n    const buildManifest = JSON.parse(\n      await promises.readFile(buildManifestPath, 'utf8')\n    ) as BuildManifest\n\n    const timeout = config.experimental.staticPageGenerationTimeout || 0\n    const sharedPool = config.experimental.sharedPool || false\n    const staticWorker = sharedPool\n      ? require.resolve('./worker')\n      : require.resolve('./utils')\n    let infoPrinted = false\n    const staticWorkers = new Worker(staticWorker, {\n      timeout: timeout * 1000,\n      onRestart: (method, [arg], attempts) => {\n        if (method === 'exportPage') {\n          const { path: pagePath } = arg\n          if (attempts >= 3) {\n            throw new Error(\n              `Static page generation for ${pagePath} is still timing out after 3 attempts. See more info here https://nextjs.org/docs/messages/static-page-generation-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted static page genertion for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        } else {\n          const pagePath = arg\n          if (attempts >= 2) {\n            throw new Error(\n              `Collecting page data for ${pagePath} is still timing out after 2 attempts. See more info here https://nextjs.org/docs/messages/page-data-collection-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted collecting page data for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        }\n        if (!infoPrinted) {\n          Log.warn(\n            'See more info here https://nextjs.org/docs/messages/static-page-generation-timeout'\n          )\n          infoPrinted = true\n        }\n      },\n      numWorkers: config.experimental.cpus,\n      enableWorkerThreads: config.experimental.workerThreads,\n      exposedMethods: sharedPool\n        ? [\n            'hasCustomGetInitialProps',\n            'isPageStatic',\n            'getNamedExports',\n            'exportPage',\n          ]\n        : ['hasCustomGetInitialProps', 'isPageStatic', 'getNamedExports'],\n    }) as Worker &\n      Pick<\n        typeof import('./worker'),\n        | 'hasCustomGetInitialProps'\n        | 'isPageStatic'\n        | 'getNamedExports'\n        | 'exportPage'\n      >\n\n    const analysisBegin = process.hrtime()\n\n    const staticCheckSpan = nextBuildSpan.traceChild('static-check')\n    const {\n      customAppGetInitialProps,\n      namedExports,\n      isNextImageImported,\n      hasSsrAmpPages,\n      hasNonStaticErrorPage,\n    } = await staticCheckSpan.traceAsyncFn(async () => {\n      process.env.NEXT_PHASE = PHASE_PRODUCTION_BUILD\n\n      const runtimeEnvConfig = {\n        publicRuntimeConfig: config.publicRuntimeConfig,\n        serverRuntimeConfig: config.serverRuntimeConfig,\n      }\n\n      const nonStaticErrorPageSpan = staticCheckSpan.traceChild(\n        'check-static-error-page'\n      )\n      const errorPageHasCustomGetInitialProps =\n        nonStaticErrorPageSpan.traceAsyncFn(\n          async () =>\n            hasCustomErrorPage &&\n            (await staticWorkers.hasCustomGetInitialProps(\n              '/_error',\n              distDir,\n              isLikeServerless,\n              runtimeEnvConfig,\n              false\n            ))\n        )\n\n      const errorPageStaticResult = nonStaticErrorPageSpan.traceAsyncFn(\n        async () =>\n          hasCustomErrorPage &&\n          staticWorkers.isPageStatic(\n            '/_error',\n            distDir,\n            isLikeServerless,\n            runtimeEnvConfig,\n            config.httpAgentOptions,\n            config.i18n?.locales,\n            config.i18n?.defaultLocale\n          )\n      )\n\n      // we don't output _app in serverless mode so use _app export\n      // from _error instead\n      const appPageToCheck = isLikeServerless ? '/_error' : '/_app'\n\n      const customAppGetInitialPropsPromise =\n        staticWorkers.hasCustomGetInitialProps(\n          appPageToCheck,\n          distDir,\n          isLikeServerless,\n          runtimeEnvConfig,\n          true\n        )\n\n      const namedExportsPromise = staticWorkers.getNamedExports(\n        appPageToCheck,\n        distDir,\n        isLikeServerless,\n        runtimeEnvConfig\n      )\n\n      // eslint-disable-next-line no-shadow\n      let isNextImageImported: boolean | undefined\n      // eslint-disable-next-line no-shadow\n      let hasSsrAmpPages = false\n\n      const computedManifestData = await computeFromManifest(\n        buildManifest,\n        distDir,\n        config.experimental.gzipSize\n      )\n      await Promise.all(\n        pageKeys.map(async (page) => {\n          const checkPageSpan = staticCheckSpan.traceChild('check-page', {\n            page,\n          })\n          return checkPageSpan.traceAsyncFn(async () => {\n            const actualPage = normalizePagePath(page)\n            const [selfSize, allSize] = await getJsPageSizeInKb(\n              actualPage,\n              distDir,\n              buildManifest,\n              config.experimental.gzipSize,\n              computedManifestData\n            )\n\n            let isSsg = false\n            let isStatic = false\n            let isHybridAmp = false\n            let ssgPageRoutes: string[] | null = null\n\n            const nonReservedPage = !page.match(\n              /^\\/(_app|_error|_document|api(\\/|$))/\n            )\n\n            if (nonReservedPage) {\n              try {\n                let isPageStaticSpan =\n                  checkPageSpan.traceChild('is-page-static')\n                let workerResult = await isPageStaticSpan.traceAsyncFn(() => {\n                  return staticWorkers.isPageStatic(\n                    page,\n                    distDir,\n                    isLikeServerless,\n                    runtimeEnvConfig,\n                    config.httpAgentOptions,\n                    config.i18n?.locales,\n                    config.i18n?.defaultLocale,\n                    isPageStaticSpan.id\n                  )\n                })\n\n                if (config.experimental.nftTracing) {\n                  pageTraceIncludes.set(page, workerResult.traceIncludes || [])\n                  pageTraceExcludes.set(page, workerResult.traceExcludes || [])\n                }\n\n                if (\n                  workerResult.isStatic === false &&\n                  (workerResult.isHybridAmp || workerResult.isAmpOnly)\n                ) {\n                  hasSsrAmpPages = true\n                }\n\n                if (workerResult.isHybridAmp) {\n                  isHybridAmp = true\n                  hybridAmpPages.add(page)\n                }\n\n                if (workerResult.isNextImageImported) {\n                  isNextImageImported = true\n                }\n\n                if (workerResult.hasStaticProps) {\n                  ssgPages.add(page)\n                  isSsg = true\n\n                  if (\n                    workerResult.prerenderRoutes &&\n                    workerResult.encodedPrerenderRoutes\n                  ) {\n                    additionalSsgPaths.set(page, workerResult.prerenderRoutes)\n                    additionalSsgPathsEncoded.set(\n                      page,\n                      workerResult.encodedPrerenderRoutes\n                    )\n                    ssgPageRoutes = workerResult.prerenderRoutes\n                  }\n\n                  if (workerResult.prerenderFallback === 'blocking') {\n                    ssgBlockingFallbackPages.add(page)\n                  } else if (workerResult.prerenderFallback === true) {\n                    ssgStaticFallbackPages.add(page)\n                  }\n                } else if (workerResult.hasServerProps) {\n                  serverPropsPages.add(page)\n                } else if (\n                  workerResult.isStatic &&\n                  (await customAppGetInitialPropsPromise) === false\n                ) {\n                  staticPages.add(page)\n                  isStatic = true\n                }\n\n                if (hasPages404 && page === '/404') {\n                  if (!workerResult.isStatic && !workerResult.hasStaticProps) {\n                    throw new Error(\n                      `\\`pages/404\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                    )\n                  }\n                  // we need to ensure the 404 lambda is present since we use\n                  // it when _app has getInitialProps\n                  if (\n                    (await customAppGetInitialPropsPromise) &&\n                    !workerResult.hasStaticProps\n                  ) {\n                    staticPages.delete(page)\n                  }\n                }\n\n                if (\n                  STATIC_STATUS_PAGES.includes(page) &&\n                  !workerResult.isStatic &&\n                  !workerResult.hasStaticProps\n                ) {\n                  throw new Error(\n                    `\\`pages${page}\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                  )\n                }\n              } catch (err) {\n                if (err.message !== 'INVALID_DEFAULT_EXPORT') throw err\n                invalidPages.add(page)\n              }\n            }\n\n            pageInfos.set(page, {\n              size: selfSize,\n              totalSize: allSize,\n              static: isStatic,\n              isSsg,\n              isHybridAmp,\n              ssgPageRoutes,\n              initialRevalidateSeconds: false,\n              pageDuration: undefined,\n              ssgPageDurations: undefined,\n            })\n          })\n        })\n      )\n\n      const errorPageResult = await errorPageStaticResult\n      const nonStaticErrorPage =\n        (await errorPageHasCustomGetInitialProps) ||\n        (errorPageResult && errorPageResult.hasServerProps)\n\n      const returnValue = {\n        customAppGetInitialProps: await customAppGetInitialPropsPromise,\n        namedExports: await namedExportsPromise,\n        isNextImageImported,\n        hasSsrAmpPages,\n        hasNonStaticErrorPage: nonStaticErrorPage,\n      }\n\n      if (!sharedPool) staticWorkers.end()\n      return returnValue\n    })\n\n    if (customAppGetInitialProps) {\n      console.warn(\n        chalk.bold.yellow(`Warning: `) +\n          chalk.yellow(\n            `You have opted-out of Automatic Static Optimization due to \\`getInitialProps\\` in \\`pages/_app\\`. This does not opt-out pages with \\`getStaticProps\\``\n          )\n      )\n      console.warn(\n        'Read more: https://nextjs.org/docs/messages/opt-out-auto-static-optimization\\n'\n      )\n    }\n\n    if (!hasSsrAmpPages) {\n      requiredServerFiles.ignore.push(\n        path.relative(\n          dir,\n          path.join(\n            path.dirname(\n              require.resolve(\n                'next/dist/compiled/@ampproject/toolbox-optimizer'\n              )\n            ),\n            '**/*'\n          )\n        )\n      )\n    }\n\n    if (config.experimental.nftTracing) {\n      const globOrig =\n        require('next/dist/compiled/glob') as typeof import('next/dist/compiled/glob')\n      const glob = (pattern: string): Promise<string[]> => {\n        return new Promise((resolve, reject) => {\n          globOrig(pattern, { cwd: dir }, (err, files) => {\n            if (err) {\n              return reject(err)\n            }\n            resolve(files)\n          })\n        })\n      }\n\n      for (const page of pageKeys) {\n        const includeGlobs = pageTraceIncludes.get(page)\n        const excludeGlobs = pageTraceExcludes.get(page)\n\n        if (!includeGlobs?.length && !excludeGlobs?.length) {\n          continue\n        }\n\n        const traceFile = path.join(\n          distDir,\n          'server/pages',\n          `${page}.js.nft.json`\n        )\n        const traceContent = JSON.parse(\n          await promises.readFile(traceFile, 'utf8')\n        )\n        let includes: string[] = []\n        let excludes: string[] = []\n\n        if (includeGlobs?.length) {\n          for (const includeGlob of includeGlobs) {\n            includes.push(...(await glob(includeGlob)))\n          }\n        }\n\n        if (excludeGlobs?.length) {\n          for (const excludeGlob of excludeGlobs) {\n            excludes.push(...(await glob(excludeGlob)))\n          }\n        }\n\n        const combined = new Set([...traceContent.files, ...includes])\n        excludes.forEach((file) => combined.delete(file))\n\n        await promises.writeFile(\n          traceFile,\n          JSON.stringify({\n            version: traceContent.version,\n            files: [...combined],\n          })\n        )\n      }\n    }\n\n    if (serverPropsPages.size > 0 || ssgPages.size > 0) {\n      // We update the routes manifest after the build with the\n      // data routes since we can't determine these until after build\n      routesManifest.dataRoutes = getSortedRoutes([\n        ...serverPropsPages,\n        ...ssgPages,\n      ]).map((page) => {\n        const pagePath = normalizePagePath(page)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${pagePath}.json`\n        )\n\n        let dataRouteRegex: string\n        let namedDataRouteRegex: string | undefined\n        let routeKeys: { [named: string]: string } | undefined\n\n        if (isDynamicRoute(page)) {\n          const routeRegex = getRouteRegex(dataRoute.replace(/\\.json$/, ''))\n\n          dataRouteRegex = normalizeRouteRegex(\n            routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, '\\\\.json$')\n          )\n          namedDataRouteRegex = routeRegex.namedRegex!.replace(\n            /\\(\\?:\\/\\)\\?\\$$/,\n            '\\\\.json$'\n          )\n          routeKeys = routeRegex.routeKeys\n        } else {\n          dataRouteRegex = normalizeRouteRegex(\n            new RegExp(\n              `^${path.posix.join(\n                '/_next/data',\n                escapeStringRegexp(buildId),\n                `${pagePath}.json`\n              )}$`\n            ).source\n          )\n        }\n\n        return {\n          page,\n          routeKeys,\n          dataRouteRegex,\n          namedDataRouteRegex,\n        }\n      })\n\n      await promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    }\n\n    // Since custom _app.js can wrap the 404 page we have to opt-out of static optimization if it has getInitialProps\n    // Only export the static 404 when there is no /_error present\n    const useStatic404 =\n      !customAppGetInitialProps && (!hasNonStaticErrorPage || hasPages404)\n\n    if (invalidPages.size > 0) {\n      throw new Error(\n        `Build optimization failed: found page${\n          invalidPages.size === 1 ? '' : 's'\n        } without a React Component as default export in \\n${[...invalidPages]\n          .map((pg) => `pages${pg}`)\n          .join(\n            '\\n'\n          )}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.\\n`\n      )\n    }\n\n    await writeBuildId(distDir, buildId)\n\n    if (config.experimental.optimizeCss) {\n      const cssFilePaths = getCssFilePaths(buildManifest)\n\n      requiredServerFiles.files.push(\n        ...cssFilePaths.map((filePath) => path.join(config.distDir, filePath))\n      )\n    }\n\n    await promises.writeFile(\n      path.join(distDir, SERVER_FILES_MANIFEST),\n      JSON.stringify(requiredServerFiles),\n      'utf8'\n    )\n\n    const finalPrerenderRoutes: { [route: string]: SsgRoute } = {}\n    const tbdPrerenderRoutes: string[] = []\n    let ssgNotFoundPaths: string[] = []\n\n    if (postCompileSpinner) postCompileSpinner.stopAndPersist()\n\n    const { i18n } = config\n\n    const usedStaticStatusPages = STATIC_STATUS_PAGES.filter(\n      (page) =>\n        mappedPages[page] && mappedPages[page].startsWith('private-next-pages')\n    )\n    usedStaticStatusPages.forEach((page) => {\n      if (!ssgPages.has(page) && !customAppGetInitialProps) {\n        staticPages.add(page)\n      }\n    })\n\n    const hasPages500 = usedStaticStatusPages.includes('/500')\n    const useDefaultStatic500 =\n      !hasPages500 && !hasNonStaticErrorPage && !customAppGetInitialProps\n\n    const combinedPages = [...staticPages, ...ssgPages]\n\n    if (combinedPages.length > 0 || useStatic404 || useDefaultStatic500) {\n      const staticGenerationSpan = nextBuildSpan.traceChild('static-generation')\n      await staticGenerationSpan.traceAsyncFn(async () => {\n        detectConflictingPaths(\n          [\n            ...combinedPages,\n            ...pageKeys.filter((page) => !combinedPages.includes(page)),\n          ],\n          ssgPages,\n          additionalSsgPaths\n        )\n        const exportApp: typeof import('../export').default =\n          require('../export').default\n        const exportOptions = {\n          silent: false,\n          buildExport: true,\n          threads: config.experimental.cpus,\n          pages: combinedPages,\n          outdir: path.join(distDir, 'export'),\n          statusMessage: 'Generating static pages',\n          exportPageWorker: sharedPool\n            ? staticWorkers.exportPage.bind(staticWorkers)\n            : undefined,\n          endWorker: sharedPool\n            ? async () => {\n                await staticWorkers.end()\n              }\n            : undefined,\n        }\n        const exportConfig: any = {\n          ...config,\n          initialPageRevalidationMap: {},\n          pageDurationMap: {},\n          ssgNotFoundPaths: [] as string[],\n          // Default map will be the collection of automatic statically exported\n          // pages and incremental pages.\n          // n.b. we cannot handle this above in combinedPages because the dynamic\n          // page must be in the `pages` array, but not in the mapping.\n          exportPathMap: (defaultMap: any) => {\n            // Dynamically routed pages should be prerendered to be used as\n            // a client-side skeleton (fallback) while data is being fetched.\n            // This ensures the end-user never sees a 500 or slow response from the\n            // server.\n            //\n            // Note: prerendering disables automatic static optimization.\n            ssgPages.forEach((page) => {\n              if (isDynamicRoute(page)) {\n                tbdPrerenderRoutes.push(page)\n\n                if (ssgStaticFallbackPages.has(page)) {\n                  // Override the rendering for the dynamic page to be treated as a\n                  // fallback render.\n                  if (i18n) {\n                    defaultMap[`/${i18n.defaultLocale}${page}`] = {\n                      page,\n                      query: { __nextFallback: true },\n                    }\n                  } else {\n                    defaultMap[page] = { page, query: { __nextFallback: true } }\n                  }\n                } else {\n                  // Remove dynamically routed pages from the default path map when\n                  // fallback behavior is disabled.\n                  delete defaultMap[page]\n                }\n              }\n            })\n            // Append the \"well-known\" routes we should prerender for, e.g. blog\n            // post slugs.\n            additionalSsgPaths.forEach((routes, page) => {\n              const encodedRoutes = additionalSsgPathsEncoded.get(page)\n\n              routes.forEach((route, routeIdx) => {\n                defaultMap[route] = {\n                  page,\n                  query: { __nextSsgPath: encodedRoutes?.[routeIdx] },\n                }\n              })\n            })\n\n            if (useStatic404) {\n              defaultMap['/404'] = {\n                page: hasPages404 ? '/404' : '/_error',\n              }\n            }\n\n            if (useDefaultStatic500) {\n              defaultMap['/500'] = {\n                page: '/_error',\n              }\n            }\n\n            if (i18n) {\n              for (const page of [\n                ...staticPages,\n                ...ssgPages,\n                ...(useStatic404 ? ['/404'] : []),\n                ...(useDefaultStatic500 ? ['/500'] : []),\n              ]) {\n                const isSsg = ssgPages.has(page)\n                const isDynamic = isDynamicRoute(page)\n                const isFallback = isSsg && ssgStaticFallbackPages.has(page)\n\n                for (const locale of i18n.locales) {\n                  // skip fallback generation for SSG pages without fallback mode\n                  if (isSsg && isDynamic && !isFallback) continue\n                  const outputPath = `/${locale}${page === '/' ? '' : page}`\n\n                  defaultMap[outputPath] = {\n                    page: defaultMap[page]?.page || page,\n                    query: { __nextLocale: locale },\n                  }\n\n                  if (isFallback) {\n                    defaultMap[outputPath].query.__nextFallback = true\n                  }\n                }\n\n                if (isSsg) {\n                  // remove non-locale prefixed variant from defaultMap\n                  delete defaultMap[page]\n                }\n              }\n            }\n            return defaultMap\n          },\n        }\n\n        await exportApp(dir, exportOptions, exportConfig)\n\n        const postBuildSpinner = createSpinner({\n          prefixText: `${Log.prefixes.info} Finalizing page optimization`,\n        })\n        ssgNotFoundPaths = exportConfig.ssgNotFoundPaths\n\n        // remove server bundles that were exported\n        for (const page of staticPages) {\n          const serverBundle = getPagePath(page, distDir, isLikeServerless)\n          await promises.unlink(serverBundle)\n        }\n        const serverOutputDir = path.join(\n          distDir,\n          isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n        )\n\n        const moveExportedPage = async (\n          originPage: string,\n          page: string,\n          file: string,\n          isSsg: boolean,\n          ext: 'html' | 'json',\n          additionalSsgFile = false\n        ) => {\n          return staticGenerationSpan\n            .traceChild('move-exported-page')\n            .traceAsyncFn(async () => {\n              file = `${file}.${ext}`\n              const orig = path.join(exportOptions.outdir, file)\n              const pagePath = getPagePath(\n                originPage,\n                distDir,\n                isLikeServerless\n              )\n\n              const relativeDest = path\n                .relative(\n                  serverOutputDir,\n                  path.join(\n                    path.join(\n                      pagePath,\n                      // strip leading / and then recurse number of nested dirs\n                      // to place from base folder\n                      originPage\n                        .substr(1)\n                        .split('/')\n                        .map(() => '..')\n                        .join('/')\n                    ),\n                    file\n                  )\n                )\n                .replace(/\\\\/g, '/')\n\n              const dest = path.join(\n                distDir,\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                relativeDest\n              )\n\n              if (\n                !isSsg &&\n                !(\n                  // don't add static status page to manifest if it's\n                  // the default generated version e.g. no pages/500\n                  (\n                    STATIC_STATUS_PAGES.includes(page) &&\n                    !usedStaticStatusPages.includes(page)\n                  )\n                )\n              ) {\n                pagesManifest[page] = relativeDest\n              }\n\n              const isNotFound = ssgNotFoundPaths.includes(page)\n\n              // for SSG files with i18n the non-prerendered variants are\n              // output with the locale prefixed so don't attempt moving\n              // without the prefix\n              if ((!i18n || additionalSsgFile) && !isNotFound) {\n                await promises.mkdir(path.dirname(dest), { recursive: true })\n                await promises.rename(orig, dest)\n              } else if (i18n && !isSsg) {\n                // this will be updated with the locale prefixed variant\n                // since all files are output with the locale prefix\n                delete pagesManifest[page]\n              }\n\n              if (i18n) {\n                if (additionalSsgFile) return\n\n                for (const locale of i18n.locales) {\n                  const curPath = `/${locale}${page === '/' ? '' : page}`\n                  const localeExt = page === '/' ? path.extname(file) : ''\n                  const relativeDestNoPages = relativeDest.substr(\n                    'pages/'.length\n                  )\n\n                  if (isSsg && ssgNotFoundPaths.includes(curPath)) {\n                    continue\n                  }\n\n                  const updatedRelativeDest = path\n                    .join(\n                      'pages',\n                      locale + localeExt,\n                      // if it's the top-most index page we want it to be locale.EXT\n                      // instead of locale/index.html\n                      page === '/' ? '' : relativeDestNoPages\n                    )\n                    .replace(/\\\\/g, '/')\n\n                  const updatedOrig = path.join(\n                    exportOptions.outdir,\n                    locale + localeExt,\n                    page === '/' ? '' : file\n                  )\n                  const updatedDest = path.join(\n                    distDir,\n                    isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                    updatedRelativeDest\n                  )\n\n                  if (!isSsg) {\n                    pagesManifest[curPath] = updatedRelativeDest\n                  }\n                  await promises.mkdir(path.dirname(updatedDest), {\n                    recursive: true,\n                  })\n                  await promises.rename(updatedOrig, updatedDest)\n                }\n              }\n            })\n        }\n\n        // Only move /404 to /404 when there is no custom 404 as in that case we don't know about the 404 page\n        if (!hasPages404 && useStatic404) {\n          await moveExportedPage('/_error', '/404', '/404', false, 'html')\n        }\n\n        if (useDefaultStatic500) {\n          await moveExportedPage('/_error', '/500', '/500', false, 'html')\n        }\n\n        for (const page of combinedPages) {\n          const isSsg = ssgPages.has(page)\n          const isStaticSsgFallback = ssgStaticFallbackPages.has(page)\n          const isDynamic = isDynamicRoute(page)\n          const hasAmp = hybridAmpPages.has(page)\n          const file = normalizePagePath(page)\n\n          const pageInfo = pageInfos.get(page)\n          const durationInfo = exportConfig.pageDurationMap[page]\n          if (pageInfo && durationInfo) {\n            // Set Build Duration\n            if (pageInfo.ssgPageRoutes) {\n              pageInfo.ssgPageDurations = pageInfo.ssgPageRoutes.map(\n                (pagePath) => durationInfo[pagePath]\n              )\n            }\n            pageInfo.pageDuration = durationInfo[page]\n          }\n\n          // The dynamic version of SSG pages are only prerendered if the\n          // fallback is enabled. Below, we handle the specific prerenders\n          // of these.\n          const hasHtmlOutput = !(isSsg && isDynamic && !isStaticSsgFallback)\n\n          if (hasHtmlOutput) {\n            await moveExportedPage(page, page, file, isSsg, 'html')\n          }\n\n          if (hasAmp && (!isSsg || (isSsg && !isDynamic))) {\n            const ampPage = `${file}.amp`\n            await moveExportedPage(page, ampPage, ampPage, isSsg, 'html')\n\n            if (isSsg) {\n              await moveExportedPage(page, ampPage, ampPage, isSsg, 'json')\n            }\n          }\n\n          if (isSsg) {\n            // For a non-dynamic SSG page, we must copy its data file\n            // from export, we already moved the HTML file above\n            if (!isDynamic) {\n              await moveExportedPage(page, page, file, isSsg, 'json')\n\n              if (i18n) {\n                // TODO: do we want to show all locale variants in build output\n                for (const locale of i18n.locales) {\n                  const localePage = `/${locale}${page === '/' ? '' : page}`\n\n                  if (!ssgNotFoundPaths.includes(localePage)) {\n                    finalPrerenderRoutes[localePage] = {\n                      initialRevalidateSeconds:\n                        exportConfig.initialPageRevalidationMap[localePage],\n                      srcRoute: null,\n                      dataRoute: path.posix.join(\n                        '/_next/data',\n                        buildId,\n                        `${file}.json`\n                      ),\n                    }\n                  }\n                }\n              } else {\n                finalPrerenderRoutes[page] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[page],\n                  srcRoute: null,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${file}.json`\n                  ),\n                }\n              }\n              // Set Page Revalidation Interval\n              if (pageInfo) {\n                pageInfo.initialRevalidateSeconds =\n                  exportConfig.initialPageRevalidationMap[page]\n              }\n            } else {\n              // For a dynamic SSG page, we did not copy its data exports and only\n              // copy the fallback HTML file (if present).\n              // We must also copy specific versions of this page as defined by\n              // `getStaticPaths` (additionalSsgPaths).\n              const extraRoutes = additionalSsgPaths.get(page) || []\n              for (const route of extraRoutes) {\n                const pageFile = normalizePagePath(route)\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'html',\n                  true\n                )\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'json',\n                  true\n                )\n\n                if (hasAmp) {\n                  const ampPage = `${pageFile}.amp`\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'html',\n                    true\n                  )\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'json',\n                    true\n                  )\n                }\n\n                finalPrerenderRoutes[route] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[route],\n                  srcRoute: page,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${normalizePagePath(route)}.json`\n                  ),\n                }\n\n                // Set route Revalidation Interval\n                if (pageInfo) {\n                  pageInfo.initialRevalidateSeconds =\n                    exportConfig.initialPageRevalidationMap[route]\n                }\n              }\n            }\n          }\n        }\n\n        // remove temporary export folder\n        await recursiveDelete(exportOptions.outdir)\n        await promises.rmdir(exportOptions.outdir)\n        await promises.writeFile(\n          manifestPath,\n          JSON.stringify(pagesManifest, null, 2),\n          'utf8'\n        )\n\n        if (postBuildSpinner) postBuildSpinner.stopAndPersist()\n        console.log()\n      })\n    }\n\n    const analysisEnd = process.hrtime(analysisBegin)\n    telemetry.record(\n      eventBuildOptimize(pagePaths, {\n        durationInSeconds: analysisEnd[0],\n        staticPageCount: staticPages.size,\n        staticPropsPageCount: ssgPages.size,\n        serverPropsPageCount: serverPropsPages.size,\n        ssrPageCount:\n          pagePaths.length -\n          (staticPages.size + ssgPages.size + serverPropsPages.size),\n        hasStatic404: useStatic404,\n        hasReportWebVitals: namedExports?.includes('reportWebVitals') ?? false,\n        rewritesCount: combinedRewrites.length,\n        headersCount: headers.length,\n        redirectsCount: redirects.length - 1, // reduce one for trailing slash\n        headersWithHasCount: headers.filter((r: any) => !!r.has).length,\n        rewritesWithHasCount: combinedRewrites.filter((r: any) => !!r.has)\n          .length,\n        redirectsWithHasCount: redirects.filter((r: any) => !!r.has).length,\n      })\n    )\n\n    if (ssgPages.size > 0) {\n      const finalDynamicRoutes: PrerenderManifest['dynamicRoutes'] = {}\n      tbdPrerenderRoutes.forEach((tbdRoute) => {\n        const normalizedRoute = normalizePagePath(tbdRoute)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${normalizedRoute}.json`\n        )\n\n        finalDynamicRoutes[tbdRoute] = {\n          routeRegex: normalizeRouteRegex(getRouteRegex(tbdRoute).re.source),\n          dataRoute,\n          fallback: ssgBlockingFallbackPages.has(tbdRoute)\n            ? null\n            : ssgStaticFallbackPages.has(tbdRoute)\n            ? `${normalizedRoute}.html`\n            : false,\n          dataRouteRegex: normalizeRouteRegex(\n            getRouteRegex(dataRoute.replace(/\\.json$/, '')).re.source.replace(\n              /\\(\\?:\\\\\\/\\)\\?\\$$/,\n              '\\\\.json$'\n            )\n          ),\n        }\n      })\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: finalPrerenderRoutes,\n        dynamicRoutes: finalDynamicRoutes,\n        notFoundRoutes: ssgNotFoundPaths,\n        preview: previewProps,\n      }\n\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n      await generateClientSsgManifest(prerenderManifest, {\n        distDir,\n        buildId,\n        locales: config.i18n?.locales || [],\n      })\n    } else {\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: {},\n        dynamicRoutes: {},\n        preview: previewProps,\n        notFoundRoutes: [],\n      }\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n    }\n\n    const images = { ...config.images }\n    const { deviceSizes, imageSizes } = images\n    ;(images as any).sizes = [...deviceSizes, ...imageSizes]\n\n    await promises.writeFile(\n      path.join(distDir, IMAGES_MANIFEST),\n      JSON.stringify({\n        version: 1,\n        images,\n      }),\n      'utf8'\n    )\n    await promises.writeFile(\n      path.join(distDir, EXPORT_MARKER),\n      JSON.stringify({\n        version: 1,\n        hasExportPathMap: typeof config.exportPathMap === 'function',\n        exportTrailingSlash: config.trailingSlash === true,\n        isNextImageImported: isNextImageImported === true,\n      }),\n      'utf8'\n    )\n    await promises.unlink(path.join(distDir, EXPORT_DETAIL)).catch((err) => {\n      if (err.code === 'ENOENT') {\n        return Promise.resolve()\n      }\n      return Promise.reject(err)\n    })\n\n    staticPages.forEach((pg) => allStaticPages.add(pg))\n    pageInfos.forEach((info: PageInfo, key: string) => {\n      allPageInfos.set(key, info)\n    })\n\n    await nextBuildSpan.traceChild('print-tree-view').traceAsyncFn(() =>\n      printTreeView(Object.keys(mappedPages), allPageInfos, isLikeServerless, {\n        distPath: distDir,\n        buildId: buildId,\n        pagesDir,\n        useStatic404,\n        pageExtensions: config.pageExtensions,\n        buildManifest,\n        gzipSize: config.experimental.gzipSize,\n      })\n    )\n\n    if (debugOutput) {\n      nextBuildSpan\n        .traceChild('print-custom-routes')\n        .traceFn(() => printCustomRoutes({ redirects, rewrites, headers }))\n    }\n\n    if (config.analyticsId) {\n      console.log(\n        chalk.bold.green('Next.js Analytics') +\n          ' is enabled for this production build. ' +\n          \"You'll receive a Real Experience Score computed by all of your visitors.\"\n      )\n      console.log('')\n    }\n\n    await nextBuildSpan\n      .traceChild('telemetry-flush')\n      .traceAsyncFn(() => telemetry.flush())\n  })\n\n  // Ensure all traces are flushed before finishing the command\n  await flushAllTraces()\n\n  return buildResult\n}\n\nexport type ClientSsgManifest = Set<string>\n\nfunction generateClientSsgManifest(\n  prerenderManifest: PrerenderManifest,\n  {\n    buildId,\n    distDir,\n    locales,\n  }: { buildId: string; distDir: string; locales: string[] }\n) {\n  const ssgPages: ClientSsgManifest = new Set<string>([\n    ...Object.entries(prerenderManifest.routes)\n      // Filter out dynamic routes\n      .filter(([, { srcRoute }]) => srcRoute == null)\n      .map(([route]) => normalizeLocalePath(route, locales).pathname),\n    ...Object.keys(prerenderManifest.dynamicRoutes),\n  ])\n\n  const clientSsgManifestContent = `self.__SSG_MANIFEST=${devalue(\n    ssgPages\n  )};self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n  writeFileSync(\n    path.join(distDir, CLIENT_STATIC_FILES_PATH, buildId, '_ssgManifest.js'),\n    clientSsgManifestContent\n  )\n}\n"],"names":["build","ciEnvironment","Log","dir","conf","reactProductionProfiling","debugOutput","runLint","nextBuildSpan","buildResult","traceAsyncFn","loadedEnvFiles","traceChild","traceFn","config","distDir","join","target","buildId","generateBuildId","customRoutes","headers","rewrites","redirects","cacheDir","isCI","hasNextSupport","hasCache","console","log","prefixes","warn","telemetry","publicDir","pagesDir","hasPublicDir","record","webpackVersion","cliCommand","isSrcDir","relative","startsWith","hasNowJson","cwd","isCustomServer","resolve","then","events","ignoreTypeScriptErrors","Boolean","typescript","ignoreBuildErrors","typeCheckStart","process","hrtime","typeCheckingSpinner","prefixText","info","verifyResult","images","disableStaticImages","typeCheckEnd","durationInSeconds","typescriptVersion","version","inputFilesCount","result","totalFilesCount","incremental","stopAndPersist","ignoreESLint","eslint","ignoreDuringBuilds","eslintCacheDir","dirs","experimental","cpus","workerThreads","buildSpinner","isLikeServerless","pagePaths","pageExtensions","allStaticPages","Set","allPageInfos","Map","previewProps","previewModeId","randomBytes","toString","previewModeSigningKey","previewModeEncryptionKey","mappedPages","entrypoints","pageKeys","Object","keys","conflictingPublicFiles","hasCustomErrorPage","hasPages404","hasPublicUnderScoreNextDir","Error","page","hasPublicPageFile","push","numConflicting","length","nestedReservedPages","filter","match","dirname","restrictedRedirectPaths","map","p","basePath","buildCustomRoute","r","type","routeRegex","source","strict","sensitive","delimiter","regexSource","internal","undefined","statusCode","permanent","regex","routesManifestPath","routesManifest","pages404","dynamicRoutes","re","routeKeys","namedRegex","dataRoutes","i18n","beforeFiles","fallback","afterFiles","combinedRewrites","distDirCreated","mkdir","recursive","err","code","cleanDistDir","writeFile","JSON","stringify","manifestPath","requiredServerFiles","compress","configFile","appDir","files","optimizeFonts","file","ignore","runWebpackSpan","configs","Promise","all","isServer","client","server","clientConfig","optimization","minimize","minimizer","webpackBuildStart","warnings","errors","clientResult","serverResult","webpackBuildEnd","error","red","indexOf","page_name_regex","parsed","exec","page_name","groups","postCompileSpinner","buildManifestPath","ssgPages","ssgStaticFallbackPages","ssgBlockingFallbackPages","staticPages","invalidPages","hybridAmpPages","serverPropsPages","additionalSsgPaths","additionalSsgPathsEncoded","pageTraceIncludes","pageTraceExcludes","pageInfos","pagesManifest","parse","readFile","buildManifest","timeout","staticPageGenerationTimeout","sharedPool","staticWorker","require","infoPrinted","staticWorkers","onRestart","method","arg","attempts","path","pagePath","numWorkers","enableWorkerThreads","exposedMethods","analysisBegin","staticCheckSpan","customAppGetInitialProps","namedExports","isNextImageImported","hasSsrAmpPages","hasNonStaticErrorPage","env","NEXT_PHASE","runtimeEnvConfig","publicRuntimeConfig","serverRuntimeConfig","nonStaticErrorPageSpan","errorPageHasCustomGetInitialProps","hasCustomGetInitialProps","errorPageStaticResult","isPageStatic","httpAgentOptions","locales","defaultLocale","appPageToCheck","customAppGetInitialPropsPromise","namedExportsPromise","getNamedExports","computedManifestData","gzipSize","checkPageSpan","actualPage","selfSize","allSize","isSsg","isStatic","isHybridAmp","ssgPageRoutes","nonReservedPage","isPageStaticSpan","workerResult","id","nftTracing","set","traceIncludes","traceExcludes","isAmpOnly","add","hasStaticProps","prerenderRoutes","encodedPrerenderRoutes","prerenderFallback","hasServerProps","delete","includes","message","size","totalSize","static","initialRevalidateSeconds","pageDuration","ssgPageDurations","errorPageResult","nonStaticErrorPage","returnValue","end","bold","yellow","globOrig","glob","pattern","reject","includeGlobs","get","excludeGlobs","traceFile","traceContent","excludes","includeGlob","excludeGlob","combined","forEach","dataRoute","posix","dataRouteRegex","namedDataRouteRegex","replace","RegExp","useStatic404","pg","optimizeCss","cssFilePaths","filePath","finalPrerenderRoutes","tbdPrerenderRoutes","ssgNotFoundPaths","usedStaticStatusPages","has","hasPages500","useDefaultStatic500","combinedPages","staticGenerationSpan","exportApp","default","exportOptions","silent","buildExport","threads","pages","outdir","statusMessage","exportPageWorker","exportPage","bind","endWorker","exportConfig","initialPageRevalidationMap","pageDurationMap","exportPathMap","defaultMap","query","__nextFallback","routes","encodedRoutes","route","routeIdx","__nextSsgPath","isDynamic","isFallback","locale","outputPath","__nextLocale","postBuildSpinner","serverBundle","unlink","serverOutputDir","moveExportedPage","originPage","ext","additionalSsgFile","orig","relativeDest","substr","split","dest","isNotFound","rename","curPath","localeExt","extname","relativeDestNoPages","updatedRelativeDest","updatedOrig","updatedDest","isStaticSsgFallback","hasAmp","pageInfo","durationInfo","hasHtmlOutput","ampPage","localePage","srcRoute","extraRoutes","pageFile","rmdir","analysisEnd","staticPageCount","staticPropsPageCount","serverPropsPageCount","ssrPageCount","hasStatic404","hasReportWebVitals","rewritesCount","headersCount","redirectsCount","headersWithHasCount","rewritesWithHasCount","redirectsWithHasCount","finalDynamicRoutes","tbdRoute","normalizedRoute","prerenderManifest","notFoundRoutes","preview","generateClientSsgManifest","deviceSizes","imageSizes","sizes","hasExportPathMap","exportTrailingSlash","trailingSlash","catch","key","distPath","analyticsId","green","flush","entries","pathname","clientSsgManifestContent"],"mappings":"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"}