{"version":3,"sources":["../../../../../build/webpack/plugins/webpack-conformance-plugin/index.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { NodePath } from 'ast-types/lib/node-path'\nimport { visit } from 'next/dist/compiled/recast'\nimport { webpack } from 'next/dist/compiled/webpack/webpack'\nimport {\n  IConformanceAnomaly,\n  IConformanceTestResult,\n  IConformanceTestStatus,\n  IGetAstNodeResult,\n  IWebpackConformanceTest,\n  NodeInspector,\n} from './TestInterface'\n\nexport { DuplicatePolyfillsConformanceCheck } from './checks/duplicate-polyfills-conformance-check'\nexport { GranularChunksConformanceCheck } from './checks/granular-chunks-conformance'\nexport { MinificationConformanceCheck } from './checks/minification-conformance-check'\nexport { ReactSyncScriptsConformanceCheck } from './checks/react-sync-scripts-conformance-check'\n\nexport interface IWebpackConformancePluginOptions {\n  tests: IWebpackConformanceTest[]\n}\n\ninterface VisitorMap {\n  [key: string]: (path: NodePath) => void\n}\n\nexport default class WebpackConformancePlugin {\n  private tests: IWebpackConformanceTest[]\n  private errors: Array<IConformanceAnomaly>\n  private warnings: Array<IConformanceAnomaly>\n  private compiler?: webpack.Compiler\n\n  constructor(options: IWebpackConformancePluginOptions) {\n    this.tests = []\n    if (options.tests) {\n      this.tests.push(...options.tests)\n    }\n    this.errors = []\n    this.warnings = []\n  }\n\n  private gatherResults(results: Array<IConformanceTestResult>): void {\n    results.forEach((result) => {\n      if (result.result === IConformanceTestStatus.FAILED) {\n        result.errors && this.errors.push(...result.errors)\n        result.warnings && this.warnings.push(...result.warnings)\n      }\n    })\n  }\n\n  private buildStartedHandler = (\n    _compilation: webpack.compilation.Compilation,\n    callback: () => void\n  ) => {\n    const buildStartedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildStared && this.compiler) {\n          return test.buildStared(this.compiler.options)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildStartedResults)\n    callback()\n  }\n\n  private buildCompletedHandler = (\n    compilation: webpack.compilation.Compilation,\n    cb: () => void\n  ): void => {\n    const buildCompletedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildCompleted) {\n          return test.buildCompleted(compilation.assets)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildCompletedResults)\n    compilation.errors.push(...this.errors)\n    compilation.warnings.push(...this.warnings)\n    cb()\n  }\n\n  private parserHandler = (\n    factory: webpack.compilation.NormalModuleFactory\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    const collectedVisitors: Map<string, [NodeInspector?]> = new Map()\n    // Collect all interested visitors from all tests.\n    this.tests.forEach((test) => {\n      if (test.getAstNode) {\n        const getAstNodeCallbacks: IGetAstNodeResult[] = test.getAstNode()\n        getAstNodeCallbacks.forEach((result) => {\n          if (!collectedVisitors.has(result.visitor)) {\n            collectedVisitors.set(result.visitor, [])\n          }\n          ;(collectedVisitors.get(result.visitor) as NodeInspector[]).push(\n            result.inspectNode\n          )\n        })\n      }\n    })\n\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          parser.hooks.program.tap(this.constructor.name, (ast: any) => {\n            const visitors: VisitorMap = {}\n            const that = this\n            for (const visitorKey of collectedVisitors.keys()) {\n              visitors[visitorKey] = function (path: NodePath) {\n                const callbacks = collectedVisitors.get(visitorKey) || []\n                callbacks.forEach((cb) => {\n                  if (!cb) {\n                    return\n                  }\n                  const { request } = parser.state.module\n                  const outcome = cb(path, { request })\n                  that.gatherResults([outcome])\n                })\n                this.traverse(path)\n                return false\n              }\n            }\n            visit(ast, visitors)\n          })\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.make.tapAsync(\n      this.constructor.name,\n      this.buildStartedHandler\n    )\n    compiler.hooks.emit.tapAsync(\n      this.constructor.name,\n      this.buildCompletedHandler\n    )\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n  }\n}\n"],"names":["DuplicatePolyfillsConformanceCheck","GranularChunksConformanceCheck","MinificationConformanceCheck","ReactSyncScriptsConformanceCheck","WebpackConformancePlugin","options","buildStartedHandler","_compilation","callback","buildStartedResults","tests","map","test","buildStared","compiler","result","SUCCESS","gatherResults","buildCompletedHandler","compilation","cb","buildCompletedResults","buildCompleted","assets","errors","push","warnings","parserHandler","factory","JS_TYPES","collectedVisitors","Map","forEach","getAstNode","getAstNodeCallbacks","has","visitor","set","get","inspectNode","type","hooks","parser","for","tap","constructor","name","program","ast","visitors","that","visitorKey","keys","path","callbacks","request","state","module","outcome","traverse","results","FAILED","apply","make","tapAsync","emit","normalModuleFactory"],"mappings":"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"}