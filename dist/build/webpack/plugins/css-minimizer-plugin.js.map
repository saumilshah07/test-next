{"version":3,"sources":["../../../../build/webpack/plugins/css-minimizer-plugin.ts"],"sourcesContent":["import cssnanoSimple from 'cssnano-simple'\nimport postcssScss from 'next/dist/compiled/postcss-scss'\nimport postcss, { Parser } from 'postcss'\nimport {\n  webpack,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport { trace } from '../../../telemetry/trace'\nimport { spans } from './profiling-plugin'\n\n// https://github.com/NMFR/optimize-css-assets-webpack-plugin/blob/0a410a9bf28c7b0e81a3470a13748e68ca2f50aa/src/index.js#L20\nconst CSS_REGEX = /\\.css(\\?.*)?$/i\n\ntype CssMinimizerPluginOptions = {\n  postcssOptions: {\n    map: false | { prev?: string | false; inline: boolean; annotation: boolean }\n  }\n}\n\nexport class CssMinimizerPlugin {\n  __next_css_remove = true\n\n  private options: CssMinimizerPluginOptions\n\n  constructor(options: CssMinimizerPluginOptions) {\n    this.options = options\n  }\n\n  optimizeAsset(file: string, asset: any) {\n    const postcssOptions = {\n      ...this.options.postcssOptions,\n      to: file,\n      from: file,\n\n      // We don't actually add this parser to support Sass. It can also be used\n      // for inline comment support. See the README:\n      // https://github.com/postcss/postcss-scss/blob/master/README.md#2-inline-comments-for-postcss\n      parser: postcssScss as any as Parser,\n    }\n\n    let input: string\n    if (postcssOptions.map && asset.sourceAndMap) {\n      const { source, map } = asset.sourceAndMap()\n      input = source\n      postcssOptions.map.prev = map ? map : false\n    } else {\n      input = asset.source()\n    }\n\n    return postcss([cssnanoSimple({}, postcss)])\n      .process(input, postcssOptions)\n      .then((res) => {\n        if (res.map) {\n          return new sources.SourceMapSource(res.css, file, res.map.toJSON())\n        } else {\n          return new sources.RawSource(res.css)\n        }\n      })\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap('CssMinimizerPlugin', (compilation: any) => {\n      if (isWebpack5) {\n        const cache = compilation.getCache('CssMinimizerPlugin')\n        compilation.hooks.processAssets.tapPromise(\n          {\n            name: 'CssMinimizerPlugin',\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n          },\n          async (assets: any) => {\n            const compilerSpan = spans.get(compiler)\n            const cssMinimizerSpan = compilerSpan!.traceChild(\n              'css-minimizer-plugin'\n            )\n            cssMinimizerSpan.setAttribute('webpackVersion', 5)\n\n            return cssMinimizerSpan.traceAsyncFn(async () => {\n              const files = Object.keys(assets)\n              await Promise.all(\n                files\n                  .filter((file) => CSS_REGEX.test(file))\n                  .map(async (file) => {\n                    const assetSpan = cssMinimizerSpan.traceChild('minify-css')\n                    assetSpan.setAttribute('file', file)\n\n                    return assetSpan.traceAsyncFn(async () => {\n                      const asset = assets[file]\n\n                      const etag = cache.getLazyHashedEtag(asset)\n\n                      const cachedResult = await cache.getPromise(file, etag)\n\n                      assetSpan.setAttribute(\n                        'cache',\n                        cachedResult ? 'HIT' : 'MISS'\n                      )\n                      if (cachedResult) {\n                        assets[file] = cachedResult\n                        return\n                      }\n\n                      const result = await this.optimizeAsset(file, asset)\n                      await cache.storePromise(file, etag, result)\n                      assets[file] = result\n                    })\n                  })\n              )\n            })\n          }\n        )\n        return\n      }\n      compilation.hooks.optimizeChunkAssets.tapPromise(\n        'CssMinimizerPlugin',\n        (chunks: webpack.compilation.Chunk[]) => {\n          const compilerSpan = spans.get(compiler)\n          const cssMinimizerSpan = trace(\n            'css-minimizer-plugin',\n            compilerSpan?.id\n          )\n          cssMinimizerSpan.setAttribute('webpackVersion', 4)\n          cssMinimizerSpan.setAttribute('compilationName', compilation.name)\n\n          return cssMinimizerSpan.traceAsyncFn(async () => {\n            return await Promise.all(\n              chunks\n                .reduce(\n                  (acc, chunk) => acc.concat(chunk.files || []),\n                  [] as string[]\n                )\n                .filter((entry) => CSS_REGEX.test(entry))\n                .map(async (file) => {\n                  const assetSpan = trace('minify-css', cssMinimizerSpan.id)\n                  assetSpan.setAttribute('file', file)\n\n                  return assetSpan.traceAsyncFn(async () => {\n                    const asset = compilation.assets[file]\n                    // Makes trace attributes the same as webpack 5\n                    // When using webpack 4 the result is not cached\n                    assetSpan.setAttribute('cache', 'MISS')\n                    compilation.assets[file] = await this.optimizeAsset(\n                      file,\n                      asset\n                    )\n                  })\n                })\n            )\n          })\n        }\n      )\n    })\n  }\n}\n"],"names":["CSS_REGEX","CssMinimizerPlugin","options","__next_css_remove","optimizeAsset","file","asset","postcssOptions","to","from","parser","input","map","sourceAndMap","source","prev","cssnanoSimple","process","then","res","SourceMapSource","css","toJSON","RawSource","apply","compiler","hooks","compilation","tap","cache","getCache","processAssets","tapPromise","name","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","assets","compilerSpan","get","cssMinimizerSpan","traceChild","setAttribute","traceAsyncFn","files","Object","keys","Promise","all","filter","test","assetSpan","etag","getLazyHashedEtag","cachedResult","getPromise","result","storePromise","optimizeChunkAssets","chunks","id","reduce","acc","chunk","concat","entry"],"mappings":"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"}