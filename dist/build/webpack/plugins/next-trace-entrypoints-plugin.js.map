{"version":3,"sources":["../../../../build/webpack/plugins/next-trace-entrypoints-plugin.ts"],"sourcesContent":["import nodePath from 'path'\nimport { nodeFileTrace } from 'next/dist/compiled/@vercel/nft'\nimport {\n  webpack,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport { TRACE_OUTPUT_VERSION } from '../../../shared/lib/constants'\n\nconst PLUGIN_NAME = 'TraceEntryPointsPlugin'\nconst TRACE_IGNORES = [\n  '**/*/node_modules/react/**/*.development.js',\n  '**/*/node_modules/react-dom/**/*.development.js',\n]\n\nfunction getModuleFromDependency(\n  compilation: any,\n  dep: any\n): webpack.Module & { resource?: string } {\n  if (isWebpack5) {\n    return compilation.moduleGraph.getModule(dep)\n  }\n\n  return dep.module\n}\n\nexport class TraceEntryPointsPlugin implements webpack.Plugin {\n  private appDir: string\n  private entryTraces: Map<string, string[]>\n  private excludeFiles: string[]\n\n  constructor({\n    appDir,\n    excludeFiles,\n  }: {\n    appDir: string\n    excludeFiles?: string[]\n  }) {\n    this.appDir = appDir\n    this.entryTraces = new Map()\n    this.excludeFiles = excludeFiles || []\n  }\n\n  // Here we output all traced assets and webpack chunks to a\n  // ${page}.js.nft.json file\n  createTraceAssets(compilation: any, assets: any) {\n    const outputPath = compilation.outputOptions.path\n\n    for (const entrypoint of compilation.entrypoints.values()) {\n      const entryFiles = new Set<string>()\n\n      for (const chunk of entrypoint\n        .getEntrypointChunk()\n        .getAllReferencedChunks()) {\n        for (const file of chunk.files) {\n          entryFiles.add(nodePath.join(outputPath, file))\n        }\n        for (const file of chunk.auxiliaryFiles) {\n          entryFiles.add(nodePath.join(outputPath, file))\n        }\n      }\n      // don't include the entry itself in the trace\n      entryFiles.delete(\n        nodePath.join(\n          outputPath,\n          `${isWebpack5 ? '../' : ''}${entrypoint.name}.js`\n        )\n      )\n      const traceOutputName = `${isWebpack5 ? '../' : ''}${\n        entrypoint.name\n      }.js.nft.json`\n      const traceOutputPath = nodePath.dirname(\n        nodePath.join(outputPath, traceOutputName)\n      )\n\n      assets[traceOutputName] = new sources.RawSource(\n        JSON.stringify({\n          version: TRACE_OUTPUT_VERSION,\n          files: [...entryFiles, ...this.entryTraces.get(entrypoint.name)!].map(\n            (file) => {\n              return nodePath\n                .relative(traceOutputPath, file)\n                .replace(/\\\\/g, '/')\n            }\n          ),\n        })\n      )\n    }\n  }\n\n  apply(compiler: webpack.Compiler) {\n    if (isWebpack5) {\n      compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n        // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n        compilation.hooks.processAssets.tap(\n          {\n            name: PLUGIN_NAME,\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_SUMMARIZE,\n          },\n          (assets: any) => {\n            this.createTraceAssets(compilation, assets)\n          }\n        )\n      })\n    } else {\n      compiler.hooks.emit.tap(PLUGIN_NAME, (compilation: any) => {\n        this.createTraceAssets(compilation, compilation.assets)\n      })\n    }\n\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n      compilation.hooks.finishModules.tapAsync(\n        PLUGIN_NAME,\n        async (_stats: any, callback: any) => {\n          // we create entry -> module maps so that we can\n          // look them up faster instead of having to iterate\n          // over the compilation modules list\n          const entryNameMap = new Map<string, string>()\n          const entryModMap = new Map<string, any>()\n\n          try {\n            const depModMap = new Map<string, any>()\n\n            compilation.entries.forEach((entry) => {\n              const name = entry.name || entry.options?.name\n\n              if (name?.startsWith('pages/') && entry.dependencies[0]) {\n                const entryMod = getModuleFromDependency(\n                  compilation,\n                  entry.dependencies[0]\n                )\n\n                if (entryMod.resource) {\n                  entryNameMap.set(entryMod.resource, name)\n                  entryModMap.set(entryMod.resource, entryMod)\n                }\n              }\n            })\n\n            // TODO: investigate allowing non-sync fs calls in node-file-trace\n            // for better performance\n            const readFile = (path: string) => {\n              const mod = depModMap.get(path) || entryModMap.get(path)\n\n              // map the transpiled source when available to avoid\n              // parse errors in node-file-trace\n              const source = mod?.originalSource?.()\n\n              if (source) {\n                return source.buffer()\n              }\n\n              try {\n                return compilation.inputFileSystem.readFileSync(path)\n              } catch (e) {\n                if (e.code === 'ENOENT' || e.code === 'EISDIR') {\n                  return null\n                }\n                throw e\n              }\n            }\n            const readlink = (path: string) => {\n              try {\n                return compilation.inputFileSystem.readlinkSync(path)\n              } catch (e) {\n                if (\n                  e.code !== 'EINVAL' &&\n                  e.code !== 'ENOENT' &&\n                  e.code !== 'UNKNOWN'\n                ) {\n                  throw e\n                }\n                return null\n              }\n            }\n            const stat = (path: string) => {\n              try {\n                return compilation.inputFileSystem.statSync(path)\n              } catch (e) {\n                if (e.code === 'ENOENT') {\n                  return null\n                }\n                throw e\n              }\n            }\n\n            const nftCache = {}\n            const entryPaths = Array.from(entryModMap.keys())\n\n            for (const entry of entryPaths) {\n              depModMap.clear()\n              const entryMod = entryModMap.get(entry)\n              // TODO: investigate caching, will require ensuring no traced\n              // files in the cache have changed, we could potentially hash\n              // all traced files and only leverage the cache if the hashes\n              // match\n              // const cachedTraces = entryMod.buildInfo?.cachedNextEntryTrace\n\n              // Use cached trace if available and trace version matches\n              // if (\n              //   isWebpack5 &&\n              //   cachedTraces &&\n              //   cachedTraces.version === TRACE_OUTPUT_VERSION\n              // ) {\n              //   this.entryTraces.set(\n              //     entryNameMap.get(entry)!,\n              //     cachedTraces.tracedDeps\n              //   )\n              //   continue\n              // }\n              const collectDependencies = (mod: any) => {\n                if (!mod || !mod.dependencies) return\n\n                for (const dep of mod.dependencies) {\n                  const depMod = getModuleFromDependency(compilation, dep)\n\n                  if (depMod?.resource && !depModMap.get(depMod.resource)) {\n                    depModMap.set(depMod.resource, depMod)\n                    collectDependencies(depMod)\n                  }\n                }\n              }\n              collectDependencies(entryMod)\n\n              const toTrace: string[] = [entry, ...depModMap.keys()]\n\n              const root = nodePath.parse(process.cwd()).root\n              const result = await nodeFileTrace(toTrace, {\n                base: root,\n                cache: nftCache,\n                processCwd: this.appDir,\n                readFile,\n                readlink,\n                stat,\n                ignore: [...TRACE_IGNORES, ...this.excludeFiles],\n              })\n\n              const tracedDeps: string[] = []\n\n              for (const file of result.fileList) {\n                if (result.reasons[file].type === 'initial') {\n                  continue\n                }\n                tracedDeps.push(nodePath.join(root, file))\n              }\n\n              // entryMod.buildInfo.cachedNextEntryTrace = {\n              //   version: TRACE_OUTPUT_VERSION,\n              //   tracedDeps,\n              // }\n              this.entryTraces.set(entryNameMap.get(entry)!, tracedDeps)\n            }\n\n            callback()\n          } catch (err) {\n            callback(err)\n          }\n        }\n      )\n    })\n  }\n}\n"],"names":["PLUGIN_NAME","TRACE_IGNORES","getModuleFromDependency","compilation","dep","moduleGraph","getModule","module","TraceEntryPointsPlugin","appDir","excludeFiles","entryTraces","Map","createTraceAssets","assets","outputPath","outputOptions","path","entrypoint","entrypoints","values","entryFiles","Set","chunk","getEntrypointChunk","getAllReferencedChunks","file","files","add","join","auxiliaryFiles","delete","name","traceOutputName","traceOutputPath","dirname","RawSource","JSON","stringify","version","get","map","relative","replace","apply","compiler","hooks","tap","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_SUMMARIZE","emit","finishModules","tapAsync","_stats","callback","entryNameMap","entryModMap","depModMap","entries","forEach","entry","options","startsWith","dependencies","entryMod","resource","set","readFile","mod","source","originalSource","buffer","inputFileSystem","readFileSync","e","code","readlink","readlinkSync","stat","statSync","nftCache","entryPaths","Array","from","keys","clear","collectDependencies","depMod","toTrace","root","parse","process","cwd","result","base","cache","processCwd","ignore","tracedDeps","fileList","reasons","type","push","err"],"mappings":"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"}