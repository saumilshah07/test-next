{"version":3,"sources":["../../server/normalize-page-path.ts"],"sourcesContent":["import { posix } from 'path'\n\nexport { normalizePathSep, denormalizePagePath } from './denormalize-page-path'\n\nexport function normalizePagePath(page: string): string {\n  // If the page is `/` we need to append `/index`, otherwise the returned directory root will be bundles instead of pages\n  if (page === '/') {\n    page = '/index'\n  } else if (/^\\/index(\\/|$)/.test(page)) {\n    page = `/index${page}`\n  }\n  // Resolve on anything that doesn't start with `/`\n  if (!page.startsWith('/')) {\n    page = `/${page}`\n  }\n  // Throw when using ../ etc in the pathname\n  const resolvedPage = posix.normalize(page)\n  if (page !== resolvedPage) {\n    throw new Error(\n      `Requested and resolved page mismatch: ${page} ${resolvedPage}`\n    )\n  }\n  return page\n}\n"],"names":["normalizePathSep","denormalizePagePath","normalizePagePath","page","test","startsWith","resolvedPage","normalize","Error"],"mappings":";;;;+BAESA,CAAgB;;;oCAAhBA,gBAAgB;;;+BAAEC,CAAmB;;;oCAAnBA,mBAAmB;;;QAE9BC,iBAAiB,GAAjBA,iBAAiB;AAJX,GAAM,CAAN,KAAM;;SAIZA,iBAAiB,CAACC,IAAY,EAAU,CAAC;IACvD,EAAwH,AAAxH,sHAAwH;IACxH,EAAE,EAAEA,IAAI,KAAK,CAAG,IAAE,CAAC;QACjBA,IAAI,GAAG,CAAQ;IACjB,CAAC,MAAM,EAAE,mBAAmBC,IAAI,CAACD,IAAI,GAAG,CAAC;QACvCA,IAAI,IAAI,MAAM,EAAEA,IAAI;IACtB,CAAC;IACD,EAAkD,AAAlD,gDAAkD;IAClD,EAAE,GAAGA,IAAI,CAACE,UAAU,CAAC,CAAG,KAAG,CAAC;QAC1BF,IAAI,IAAI,CAAC,EAAEA,IAAI;IACjB,CAAC;IACD,EAA2C,AAA3C,yCAA2C;IAC3C,KAAK,CAACG,YAAY,GAhBE,KAAM,OAgBCC,SAAS,CAACJ,IAAI;IACzC,EAAE,EAAEA,IAAI,KAAKG,YAAY,EAAE,CAAC;QAC1B,KAAK,CAAC,GAAG,CAACE,KAAK,EACZ,sCAAsC,EAAEL,IAAI,CAAC,CAAC,EAAEG,YAAY;IAEjE,CAAC;IACD,MAAM,CAACH,IAAI;AACb,CAAC"}