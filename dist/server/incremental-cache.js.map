{"version":3,"sources":["../../server/incremental-cache.ts"],"sourcesContent":["import { promises, readFileSync } from 'fs'\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport path from 'path'\nimport { PrerenderManifest } from '../build'\nimport { PRERENDER_MANIFEST } from '../shared/lib/constants'\nimport { normalizePagePath } from './normalize-page-path'\n\nfunction toRoute(pathname: string): string {\n  return pathname.replace(/\\/$/, '').replace(/\\/index$/, '') || '/'\n}\n\ninterface CachedRedirectValue {\n  kind: 'REDIRECT'\n  props: Object\n}\n\ninterface CachedPageValue {\n  kind: 'PAGE'\n  html: string\n  pageData: Object\n}\n\nexport type IncrementalCacheValue = CachedRedirectValue | CachedPageValue\n\ntype IncrementalCacheEntry = {\n  curRevalidate?: number | false\n  // milliseconds to revalidate after\n  revalidateAfter: number | false\n  isStale?: boolean\n  value: IncrementalCacheValue | null\n}\n\nexport class IncrementalCache {\n  incrementalOptions: {\n    flushToDisk?: boolean\n    pagesDir?: string\n    distDir?: string\n    dev?: boolean\n  }\n\n  prerenderManifest: PrerenderManifest\n  cache?: LRUCache<string, IncrementalCacheEntry>\n  locales?: string[]\n\n  constructor({\n    max,\n    dev,\n    distDir,\n    pagesDir,\n    flushToDisk,\n    locales,\n  }: {\n    dev: boolean\n    max?: number\n    distDir: string\n    pagesDir: string\n    flushToDisk?: boolean\n    locales?: string[]\n  }) {\n    this.incrementalOptions = {\n      dev,\n      distDir,\n      pagesDir,\n      flushToDisk:\n        !dev && (typeof flushToDisk !== 'undefined' ? flushToDisk : true),\n    }\n    this.locales = locales\n\n    if (dev) {\n      this.prerenderManifest = {\n        version: -1 as any, // letting us know this doesn't conform to spec\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: null as any, // `preview` is special case read in next-dev-server\n      }\n    } else {\n      this.prerenderManifest = JSON.parse(\n        readFileSync(path.join(distDir, PRERENDER_MANIFEST), 'utf8')\n      )\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      max = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n\n    if (max) {\n      this.cache = new LRUCache({\n        max,\n        length({ value }) {\n          if (!value || value.kind === 'REDIRECT') return 25\n          // rough estimate of size of cache value\n          return value.html.length + JSON.stringify(value.pageData).length\n        },\n      })\n    }\n  }\n\n  private getSeedPath(pathname: string, ext: string): string {\n    return path.join(this.incrementalOptions.pagesDir!, `${pathname}.${ext}`)\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number\n  ): number | false {\n    pathname = toRoute(pathname)\n\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (this.incrementalOptions.dev) return new Date().getTime() - 1000\n\n    const { initialRevalidateSeconds } = this.prerenderManifest.routes[\n      pathname\n    ] || {\n      initialRevalidateSeconds: 1,\n    }\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  getFallback(page: string): Promise<string> {\n    page = normalizePagePath(page)\n    return promises.readFile(this.getSeedPath(page, 'html'), 'utf8')\n  }\n\n  // get data from cache if available\n  async get(pathname: string): Promise<IncrementalCacheEntry | null> {\n    if (this.incrementalOptions.dev) return null\n    pathname = normalizePagePath(pathname)\n\n    let data = this.cache && this.cache.get(pathname)\n\n    // let's check the disk for seed data\n    if (!data) {\n      if (this.prerenderManifest.notFoundRoutes.includes(pathname)) {\n        const now = Date.now()\n        const revalidateAfter = this.calculateRevalidate(pathname, now)\n        data = {\n          value: null,\n          revalidateAfter: revalidateAfter !== false ? now : false,\n        }\n      }\n\n      try {\n        const htmlPath = this.getSeedPath(pathname, 'html')\n        const html = await promises.readFile(htmlPath, 'utf8')\n        const { mtime } = await promises.stat(htmlPath)\n        const pageData = JSON.parse(\n          await promises.readFile(this.getSeedPath(pathname, 'json'), 'utf8')\n        )\n\n        data = {\n          revalidateAfter: this.calculateRevalidate(pathname, mtime.getTime()),\n          value: {\n            kind: 'PAGE',\n            html,\n            pageData,\n          },\n        }\n        if (this.cache) {\n          this.cache.set(pathname, data)\n        }\n      } catch (_) {\n        // unable to get data from disk\n      }\n    }\n    if (!data) {\n      return null\n    }\n\n    if (\n      data &&\n      data.revalidateAfter !== false &&\n      data.revalidateAfter < new Date().getTime()\n    ) {\n      data.isStale = true\n    }\n\n    const manifestPath = toRoute(pathname)\n    const manifestEntry = this.prerenderManifest.routes[manifestPath]\n\n    if (data && manifestEntry) {\n      data.curRevalidate = manifestEntry.initialRevalidateSeconds\n    }\n    return data\n  }\n\n  // populate the incremental cache with new data\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    revalidateSeconds?: number | false\n  ) {\n    if (this.incrementalOptions.dev) return\n    if (typeof revalidateSeconds !== 'undefined') {\n      // TODO: Update this to not mutate the manifest from the\n      // build.\n      this.prerenderManifest.routes[pathname] = {\n        dataRoute: path.posix.join(\n          '/_next/data',\n          `${normalizePagePath(pathname)}.json`\n        ),\n        srcRoute: null, // FIXME: provide actual source route, however, when dynamically appending it doesn't really matter\n        initialRevalidateSeconds: revalidateSeconds,\n      }\n    }\n\n    pathname = normalizePagePath(pathname)\n    if (this.cache) {\n      this.cache.set(pathname, {\n        revalidateAfter: this.calculateRevalidate(\n          pathname,\n          new Date().getTime()\n        ),\n        value: data,\n      })\n    }\n\n    // TODO: This option needs to cease to exist unless it stops mutating the\n    // `next build` output's manifest.\n    if (this.incrementalOptions.flushToDisk && data?.kind === 'PAGE') {\n      try {\n        const seedPath = this.getSeedPath(pathname, 'html')\n        await promises.mkdir(path.dirname(seedPath), { recursive: true })\n        await promises.writeFile(seedPath, data.html, 'utf8')\n        await promises.writeFile(\n          this.getSeedPath(pathname, 'json'),\n          JSON.stringify(data.pageData),\n          'utf8'\n        )\n      } catch (error) {\n        // failed to flush to disk\n        console.warn('Failed to update prerender files for', pathname, error)\n      }\n    }\n  }\n}\n"],"names":["toRoute","pathname","replace","IncrementalCache","max","dev","distDir","pagesDir","flushToDisk","locales","incrementalOptions","prerenderManifest","version","routes","dynamicRoutes","notFoundRoutes","preview","JSON","parse","join","process","env","__NEXT_TEST_MAX_ISR_CACHE","parseInt","cache","length","value","kind","html","stringify","pageData","getSeedPath","ext","calculateRevalidate","fromTime","Date","getTime","initialRevalidateSeconds","revalidateAfter","getFallback","page","readFile","get","data","includes","now","htmlPath","mtime","stat","set","_","isStale","manifestPath","manifestEntry","curRevalidate","revalidateSeconds","dataRoute","posix","srcRoute","seedPath","mkdir","dirname","recursive","writeFile","error","console","warn"],"mappings":"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"}