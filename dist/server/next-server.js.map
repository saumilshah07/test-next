{"version":3,"sources":["../../server/next-server.ts"],"sourcesContent":["import compression from 'next/dist/compiled/compression'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { join, relative, resolve, sep } from 'path'\nimport {\n  parse as parseQs,\n  stringify as stringifyQs,\n  ParsedUrlQuery,\n} from 'querystring'\nimport { format as formatUrl, parse as parseUrl, UrlWithParsedQuery } from 'url'\nimport Observable from 'next/dist/compiled/zen-observable'\nimport { PrerenderManifest } from '../build'\nimport {\n  getRedirectStatus,\n  Header,\n  Redirect,\n  Rewrite,\n  RouteType,\n  CustomRoutes,\n  modifyRouteRegex,\n} from '../lib/load-custom-routes'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PAGES_MANIFEST,\n  PERMANENT_REDIRECT_STATUS,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  STATIC_STATUS_PAGES,\n  TEMPORARY_REDIRECT_STATUS,\n} from '../shared/lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../shared/lib/router/utils'\nimport * as envConfig from '../shared/lib/runtime-config'\nimport {\n  DecodeError,\n  isResSent,\n  NextApiRequest,\n  NextApiResponse,\n  normalizeRepeatedSlashes,\n} from '../shared/lib/utils'\nimport {\n  apiResolver,\n  setLazyProp,\n  getCookieParser,\n  tryGetPreviewData,\n  __ApiPreviewProps,\n} from './api-utils'\nimport { DomainLocale, isTargetLikeServerless, NextConfig } from './config'\nimport pathMatch from '../shared/lib/router/utils/path-match'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { loadComponents, LoadComponentsReturnType } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport { RenderOpts, RenderOptsPartial, renderToHTML } from './render'\nimport { getPagePath, requireFontManifest } from './require'\nimport Router, {\n  DynamicRoutes,\n  PageChecker,\n  Params,\n  route,\n  Route,\n} from './router'\nimport prepareDestination, {\n  compileNonPath,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { sendRenderResult, setRevalidateHeaders } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport { IncrementalCache } from './incremental-cache'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage, RenderResult, resultsToString } from './utils'\nimport { loadEnvConfig } from '@next/env'\nimport './node-polyfill-fetch'\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { removePathTrailingSlash } from '../client/normalize-trailing-slash'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { FontManifest } from './font-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport * as Log from '../build/output/log'\nimport { detectDomainLocale } from '../shared/lib/i18n/detect-domain-locale'\nimport escapePathDelimiters from '../shared/lib/router/utils/escape-path-delimiters'\nimport { getUtils } from '../build/webpack/loaders/next-serverless-loader/utils'\nimport { PreviewData } from 'next/types'\nimport ResponseCache, {\n  ResponseCacheEntry,\n  ResponseCacheValue,\n} from './response-cache'\nimport { NextConfigComplete } from './config-shared'\nimport { parseNextUrl } from '../shared/lib/router/utils/parse-next-url'\n\nconst getCustomRouteMatcher = pathMatch(true)\n\ntype Middleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: ParsedUrlQuery\n}\n\ntype DynamicRouteItem = {\n  page: string\n  match: ReturnType<typeof getRouteMatcher>\n}\n\nexport type ServerConstructor = {\n  /**\n   * Where the Next project is located - @default '.'\n   */\n  dir?: string\n  /**\n   * Hide error messages containing server information - @default false\n   */\n  quiet?: boolean\n  /**\n   * Object what you would use in next.config.js - @default {}\n   */\n  conf?: NextConfig | null\n  dev?: boolean\n  customServer?: boolean\n}\n\ntype RequestContext = {\n  req: IncomingMessage\n  res: ServerResponse\n  pathname: string\n  query: ParsedUrlQuery\n  renderOpts: RenderOptsPartial\n}\n\nexport default class Server {\n  protected dir: string\n  protected quiet: boolean\n  protected nextConfig: NextConfigComplete\n  protected distDir: string\n  protected pagesDir?: string\n  protected publicDir: string\n  protected hasStaticDir: boolean\n  protected serverBuildDir: string\n  protected pagesManifest?: PagesManifest\n  protected buildId: string\n  protected minimalMode: boolean\n  protected renderOpts: {\n    poweredByHeader: boolean\n    buildId: string\n    generateEtags: boolean\n    runtimeConfig?: { [key: string]: any }\n    assetPrefix?: string\n    canonicalBase: string\n    dev?: boolean\n    previewProps: __ApiPreviewProps\n    customServer?: boolean\n    ampOptimizerConfig?: { [key: string]: any }\n    basePath: string\n    optimizeFonts: boolean\n    images: string\n    fontManifest: FontManifest\n    optimizeImages: boolean\n    disableOptimizedLoading?: boolean\n    optimizeCss: any\n    locale?: string\n    locales?: string[]\n    defaultLocale?: string\n    domainLocales?: DomainLocale[]\n    distDir: string\n    concurrentFeatures?: boolean\n  }\n  private compression?: Middleware\n  private incrementalCache: IncrementalCache\n  private responseCache: ResponseCache\n  protected router: Router\n  protected dynamicRoutes?: DynamicRoutes\n  protected customRoutes: CustomRoutes\n\n  public constructor({\n    dir = '.',\n    quiet = false,\n    conf,\n    dev = false,\n    minimalMode = false,\n    customServer = true,\n  }: ServerConstructor & { conf: NextConfig; minimalMode?: boolean }) {\n    this.dir = resolve(dir)\n    this.quiet = quiet\n    loadEnvConfig(this.dir, dev, Log)\n\n    this.nextConfig = conf as NextConfigComplete\n\n    this.distDir = join(this.dir, this.nextConfig.distDir)\n    this.publicDir = join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n    this.hasStaticDir = !minimalMode && fs.existsSync(join(this.dir, 'static'))\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n      compress,\n    } = this.nextConfig\n\n    this.buildId = this.readBuildId()\n    this.minimalMode = minimalMode\n\n    this.renderOpts = {\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPreviewProps(),\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: JSON.stringify(this.nextConfig.images),\n      optimizeFonts: !!this.nextConfig.optimizeFonts && !dev,\n      fontManifest:\n        this.nextConfig.optimizeFonts && !dev\n          ? requireFontManifest(this.distDir, this._isLikeServerless)\n          : null,\n      optimizeImages: !!this.nextConfig.experimental.optimizeImages,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      concurrentFeatures: this.nextConfig.experimental.concurrentFeatures,\n    }\n\n    // Only the `publicRuntimeConfig` key is exposed to the client side\n    // It'll be rendered as part of __NEXT_DATA__ on the client side\n    if (Object.keys(publicRuntimeConfig).length > 0) {\n      this.renderOpts.runtimeConfig = publicRuntimeConfig\n    }\n\n    if (compress && this.nextConfig.target === 'server') {\n      this.compression = compression() as Middleware\n    }\n\n    // Initialize next/config with the environment configuration\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(this.serverBuildDir, PAGES_MANIFEST)\n\n    if (!dev) {\n      this.pagesManifest = require(pagesManifestPath)\n    }\n\n    this.customRoutes = this.getCustomRoutes()\n    this.router = new Router(this.generateRoutes())\n    this.setAssetPrefix(assetPrefix)\n\n    this.incrementalCache = new IncrementalCache({\n      dev,\n      distDir: this.distDir,\n      pagesDir: join(\n        this.distDir,\n        this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n        'pages'\n      ),\n      locales: this.nextConfig.i18n?.locales,\n      max: this.nextConfig.experimental.isrMemoryCacheSize,\n      flushToDisk: !minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n    })\n    this.responseCache = new ResponseCache(this.incrementalCache)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting both serverless and SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_IMAGES`.\n     * TODO(atcastle@): Remove this when experimental.optimizeImages are being cleaned up.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeImages) {\n      process.env.__NEXT_OPTIMIZE_IMAGES = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    console.error(err)\n  }\n\n  private async handleRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    const urlParts = (req.url || '').split('?')\n    const urlNoQuery = urlParts[0]\n\n    if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n      const cleanUrl = normalizeRepeatedSlashes(req.url!)\n      res.setHeader('Location', cleanUrl)\n      res.setHeader('Refresh', `0;url=${cleanUrl}`)\n      res.statusCode = 308\n      res.end(cleanUrl)\n      return\n    }\n\n    setLazyProp({ req: req as any }, 'cookies', getCookieParser(req.headers))\n\n    // Parse url if parsedUrl not provided\n    if (!parsedUrl || typeof parsedUrl !== 'object') {\n      const url: any = req.url\n      parsedUrl = parseUrl(url, true)\n    }\n    const { basePath, i18n } = this.nextConfig\n\n    // Parse the querystring ourselves if the user doesn't handle querystring parsing\n    if (typeof parsedUrl.query === 'string') {\n      parsedUrl.query = parseQs(parsedUrl.query)\n    }\n    ;(req as any).__NEXT_INIT_QUERY = Object.assign({}, parsedUrl.query)\n\n    const url = parseNextUrl({\n      headers: req.headers,\n      nextConfig: this.nextConfig,\n      url: req.url?.replace(/^\\/+/, '/'),\n    })\n\n    if (url.basePath) {\n      ;(req as any)._nextHadBasePath = true\n      req.url = req.url!.replace(basePath, '') || '/'\n    }\n\n    if (\n      this.minimalMode &&\n      req.headers['x-matched-path'] &&\n      typeof req.headers['x-matched-path'] === 'string'\n    ) {\n      const reqUrlIsDataUrl = req.url?.includes('/_next/data')\n      const matchedPathIsDataUrl =\n        req.headers['x-matched-path']?.includes('/_next/data')\n      const isDataUrl = reqUrlIsDataUrl || matchedPathIsDataUrl\n\n      let parsedPath = parseUrl(\n        isDataUrl ? req.url! : (req.headers['x-matched-path'] as string),\n        true\n      )\n      const { pathname, query } = parsedPath\n      let matchedPathname = pathname as string\n\n      let matchedPathnameNoExt = isDataUrl\n        ? matchedPathname.replace(/\\.json$/, '')\n        : matchedPathname\n\n      if (i18n) {\n        const localePathResult = normalizeLocalePath(\n          matchedPathname || '/',\n          i18n.locales\n        )\n\n        if (localePathResult.detectedLocale) {\n          parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n        }\n      }\n\n      if (isDataUrl) {\n        matchedPathname = denormalizePagePath(matchedPathname)\n        matchedPathnameNoExt = denormalizePagePath(matchedPathnameNoExt)\n      }\n\n      const pageIsDynamic = isDynamicRoute(matchedPathnameNoExt)\n      const combinedRewrites: Rewrite[] = []\n\n      combinedRewrites.push(...this.customRoutes.rewrites.beforeFiles)\n      combinedRewrites.push(...this.customRoutes.rewrites.afterFiles)\n      combinedRewrites.push(...this.customRoutes.rewrites.fallback)\n\n      const utils = getUtils({\n        pageIsDynamic,\n        page: matchedPathnameNoExt,\n        i18n: this.nextConfig.i18n,\n        basePath: this.nextConfig.basePath,\n        rewrites: combinedRewrites,\n      })\n\n      utils.handleRewrites(req, parsedUrl)\n\n      // interpolate dynamic params and normalize URL if needed\n      if (pageIsDynamic) {\n        let params: ParsedUrlQuery | false = {}\n\n        Object.assign(parsedUrl.query, query)\n        const paramsResult = utils.normalizeDynamicRouteParams(parsedUrl.query)\n\n        if (paramsResult.hasValidParams) {\n          params = paramsResult.params\n        } else if (req.headers['x-now-route-matches']) {\n          const opts: Record<string, string> = {}\n          params = utils.getParamsFromRouteMatches(\n            req,\n            opts,\n            (parsedUrl.query.__nextLocale as string | undefined) || ''\n          )\n\n          if (opts.locale) {\n            parsedUrl.query.__nextLocale = opts.locale\n          }\n        } else {\n          params = utils.dynamicRouteMatcher!(matchedPathnameNoExt)\n        }\n\n        if (params) {\n          params = utils.normalizeDynamicRouteParams(params).params\n\n          matchedPathname = utils.interpolateDynamicPath(\n            matchedPathname,\n            params\n          )\n          req.url = utils.interpolateDynamicPath(req.url!, params)\n        }\n\n        if (reqUrlIsDataUrl && matchedPathIsDataUrl) {\n          req.url = formatUrl({\n            ...parsedPath,\n            pathname: matchedPathname,\n          })\n        }\n\n        Object.assign(parsedUrl.query, params)\n        utils.normalizeVercelUrl(req, true)\n      }\n\n      parsedUrl.pathname = `${basePath || ''}${\n        matchedPathname === '/' && basePath ? '' : matchedPathname\n      }`\n    }\n\n    ;(req as any).__nextHadTrailingSlash = url.locale?.trailingSlash\n    if (url.locale?.domain) {\n      ;(req as any).__nextIsLocaleDomain = true\n    }\n\n    if (url.locale?.path.detectedLocale) {\n      req.url = formatUrl(url)\n      ;(req as any).__nextStrippedLocale = true\n      if (url.pathname === '/api' || url.pathname.startsWith('/api/')) {\n        return this.render404(req, res, parsedUrl)\n      }\n    }\n\n    if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n      if (url?.locale?.locale) {\n        parsedUrl.query.__nextLocale = url.locale.locale\n      }\n    }\n\n    if (url?.locale?.defaultLocale) {\n      parsedUrl.query.__nextDefaultLocale = url.locale.defaultLocale\n    }\n\n    if (url.locale?.redirect) {\n      res.setHeader('Location', url.locale.redirect)\n      res.statusCode = TEMPORARY_REDIRECT_STATUS\n      res.end()\n      return\n    }\n\n    res.statusCode = 200\n    try {\n      return await this.run(req, res, parsedUrl)\n    } catch (err) {\n      if (this.minimalMode || this.renderOpts.dev) {\n        throw err\n      }\n      this.logError(err)\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  public getRequestHandler() {\n    return this.handleRequest.bind(this)\n  }\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  // Backwards compatibility\n  public async prepare(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected getCustomRoutes(): CustomRoutes {\n    const customRoutes = require(join(this.distDir, ROUTES_MANIFEST))\n    let rewrites: CustomRoutes['rewrites']\n\n    // rewrites can be stored as an array when an array is\n    // returned in next.config.js so massage them into\n    // the expected object format\n    if (Array.isArray(customRoutes.rewrites)) {\n      rewrites = {\n        beforeFiles: [],\n        afterFiles: customRoutes.rewrites,\n        fallback: [],\n      }\n    } else {\n      rewrites = customRoutes.rewrites\n    }\n    return Object.assign(customRoutes, { rewrites })\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getPreviewProps(): __ApiPreviewProps {\n    return this.getPrerenderManifest().preview\n  }\n\n  protected generateRoutes(): {\n    basePath: string\n    headers: Route[]\n    rewrites: {\n      beforeFiles: Route[]\n      afterFiles: Route[]\n      fallback: Route[]\n    }\n    fsRoutes: Route[]\n    redirects: Route[]\n    catchAllRoute: Route\n    pageChecker: PageChecker\n    useFileSystemPublicRoutes: boolean\n    dynamicRoutes: DynamicRoutes | undefined\n    locales: string[]\n  } {\n    const server: Server = this\n    const publicRoutes = fs.existsSync(this.publicDir)\n      ? this.generatePublicRoutes()\n      : []\n\n    const staticFilesRoute = this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n\n    const fsRoutes: Route[] = [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'image' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[0] === 'pages' ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/data/:path*'),\n        type: 'route',\n        name: '_next/data catchall',\n        fn: async (req, res, params, _parsedUrl) => {\n          // Make sure to 404 for /_next/data/ itself and\n          // we also want to 404 if the buildId isn't correct\n          if (!params.path || params.path[0] !== this.buildId) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n          // remove buildId from URL\n          params.path.shift()\n\n          // show 404 if it doesn't end with .json\n          if (!params.path[params.path.length - 1].endsWith('.json')) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          // re-create page's pathname\n          let pathname = `/${params.path.join('/')}`\n          pathname = getRouteFromAssetPath(pathname, '.json')\n\n          const { i18n } = this.nextConfig\n\n          if (i18n) {\n            const { host } = req?.headers || {}\n            // remove port from host and remove port if present\n            const hostname = host?.split(':')[0].toLowerCase()\n            const localePathResult = normalizeLocalePath(pathname, i18n.locales)\n            const { defaultLocale } =\n              detectDomainLocale(i18n.domains, hostname) || {}\n\n            let detectedLocale = ''\n\n            if (localePathResult.detectedLocale) {\n              pathname = localePathResult.pathname\n              detectedLocale = localePathResult.detectedLocale\n            }\n\n            _parsedUrl.query.__nextLocale = detectedLocale!\n            _parsedUrl.query.__nextDefaultLocale =\n              defaultLocale || i18n.defaultLocale\n\n            if (!detectedLocale) {\n              _parsedUrl.query.__nextLocale =\n                _parsedUrl.query.__nextDefaultLocale\n              await this.render404(req, res, _parsedUrl)\n              return { finished: true }\n            }\n          }\n\n          const parsedUrl = parseUrl(pathname, true)\n\n          await this.render(\n            req,\n            res,\n            pathname,\n            { ..._parsedUrl.query, _nextDataReq: '1' },\n            parsedUrl\n          )\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/image'),\n        type: 'route',\n        name: '_next/image catchall',\n        fn: (req, res, _params, parsedUrl) => {\n          if (this.minimalMode) {\n            res.statusCode = 400\n            res.end('Bad Request')\n            return {\n              finished: true,\n            }\n          }\n          const { imageOptimizer } =\n            require('./image-optimizer') as typeof import('./image-optimizer')\n\n          return imageOptimizer(\n            server,\n            req,\n            res,\n            parsedUrl,\n            server.nextConfig,\n            server.distDir,\n            this.renderOpts.dev\n          )\n        },\n      },\n      {\n        match: route('/_next/:path*'),\n        type: 'route',\n        name: '_next catchall',\n        // This path is needed because `render()` does a check for `/_next` and the calls the routing again\n        fn: async (req, res, _params, parsedUrl) => {\n          await this.render404(req, res, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      ...publicRoutes,\n      ...staticFilesRoute,\n    ]\n\n    const restrictedRedirectPaths = ['/_next'].map((p) =>\n      this.nextConfig.basePath ? `${this.nextConfig.basePath}${p}` : p\n    )\n\n    const getCustomRoute = (\n      r: Rewrite | Redirect | Header,\n      type: RouteType\n    ) => {\n      const match = getCustomRouteMatcher(\n        r.source,\n        !(r as any).internal\n          ? (regex: string) =>\n              modifyRouteRegex(\n                regex,\n                type === 'redirect' ? restrictedRedirectPaths : undefined\n              )\n          : undefined\n      )\n\n      return {\n        ...r,\n        type,\n        match,\n        name: type,\n        fn: async (_req, _res, _params, _parsedUrl) => ({ finished: false }),\n      } as Route & Rewrite & Header\n    }\n\n    // Headers come very first\n    const headers = this.minimalMode\n      ? []\n      : this.customRoutes.headers.map((r) => {\n          const headerRoute = getCustomRoute(r, 'header')\n          return {\n            match: headerRoute.match,\n            has: headerRoute.has,\n            type: headerRoute.type,\n            name: `${headerRoute.type} ${headerRoute.source} header route`,\n            fn: async (_req, res, params, _parsedUrl) => {\n              const hasParams = Object.keys(params).length > 0\n\n              for (const header of (headerRoute as Header).headers) {\n                let { key, value } = header\n                if (hasParams) {\n                  key = compileNonPath(key, params)\n                  value = compileNonPath(value, params)\n                }\n                res.setHeader(key, value)\n              }\n              return { finished: false }\n            },\n          } as Route\n        })\n\n    // since initial query values are decoded by querystring.parse\n    // we need to re-encode them here but still allow passing through\n    // values from rewrites/redirects\n    const stringifyQuery = (req: IncomingMessage, query: ParsedUrlQuery) => {\n      const initialQueryValues = Object.values((req as any).__NEXT_INIT_QUERY)\n\n      return stringifyQs(query, undefined, undefined, {\n        encodeURIComponent(value) {\n          if (initialQueryValues.some((val) => val === value)) {\n            return encodeURIComponent(value)\n          }\n          return value\n        },\n      })\n    }\n\n    const redirects = this.minimalMode\n      ? []\n      : this.customRoutes.redirects.map((redirect) => {\n          const redirectRoute = getCustomRoute(redirect, 'redirect')\n          return {\n            internal: redirectRoute.internal,\n            type: redirectRoute.type,\n            match: redirectRoute.match,\n            has: redirectRoute.has,\n            statusCode: redirectRoute.statusCode,\n            name: `Redirect route ${redirectRoute.source}`,\n            fn: async (req, res, params, parsedUrl) => {\n              const { parsedDestination } = prepareDestination(\n                redirectRoute.destination,\n                params,\n                parsedUrl.query,\n                false\n              )\n\n              const { query } = parsedDestination\n              delete (parsedDestination as any).query\n\n              parsedDestination.search = stringifyQuery(req, query)\n\n              let updatedDestination = formatUrl(parsedDestination)\n\n              if (updatedDestination.startsWith('/')) {\n                updatedDestination =\n                  normalizeRepeatedSlashes(updatedDestination)\n              }\n\n              res.setHeader('Location', updatedDestination)\n              res.statusCode = getRedirectStatus(redirectRoute as Redirect)\n\n              // Since IE11 doesn't support the 308 header add backwards\n              // compatibility using refresh header\n              if (res.statusCode === 308) {\n                res.setHeader('Refresh', `0;url=${updatedDestination}`)\n              }\n\n              res.end(updatedDestination)\n              return {\n                finished: true,\n              }\n            },\n          } as Route\n        })\n\n    const buildRewrite = (rewrite: Rewrite, check = true) => {\n      const rewriteRoute = getCustomRoute(rewrite, 'rewrite')\n      return {\n        ...rewriteRoute,\n        check,\n        type: rewriteRoute.type,\n        name: `Rewrite route ${rewriteRoute.source}`,\n        match: rewriteRoute.match,\n        fn: async (req, res, params, parsedUrl) => {\n          const { newUrl, parsedDestination } = prepareDestination(\n            rewriteRoute.destination,\n            params,\n            parsedUrl.query,\n            true\n          )\n\n          // external rewrite, proxy it\n          if (parsedDestination.protocol) {\n            const { query } = parsedDestination\n            delete (parsedDestination as any).query\n            parsedDestination.search = stringifyQuery(req, query)\n\n            const target = formatUrl(parsedDestination)\n            const proxy = new Proxy({\n              target,\n              changeOrigin: true,\n              ignorePath: true,\n              xfwd: true,\n              proxyTimeout: 30_000, // limit proxying to 30 seconds\n            })\n\n            await new Promise((proxyResolve, proxyReject) => {\n              let finished = false\n\n              proxy.on('proxyReq', (proxyReq) => {\n                proxyReq.on('close', () => {\n                  if (!finished) {\n                    finished = true\n                    proxyResolve(true)\n                  }\n                })\n              })\n              proxy.on('error', (err) => {\n                if (!finished) {\n                  finished = true\n                  proxyReject(err)\n                }\n              })\n              proxy.web(req, res)\n            })\n\n            return {\n              finished: true,\n            }\n          }\n          ;(req as any)._nextRewroteUrl = newUrl\n          ;(req as any)._nextDidRewrite =\n            (req as any)._nextRewroteUrl !== req.url\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        },\n      } as Route\n    }\n\n    let beforeFiles: Route[] = []\n    let afterFiles: Route[] = []\n    let fallback: Route[] = []\n\n    if (!this.minimalMode) {\n      if (Array.isArray(this.customRoutes.rewrites)) {\n        afterFiles = this.customRoutes.rewrites.map((r) => buildRewrite(r))\n      } else {\n        beforeFiles = this.customRoutes.rewrites.beforeFiles.map((r) =>\n          buildRewrite(r, false)\n        )\n        afterFiles = this.customRoutes.rewrites.afterFiles.map((r) =>\n          buildRewrite(r)\n        )\n        fallback = this.customRoutes.rewrites.fallback.map((r) =>\n          buildRewrite(r)\n        )\n      }\n    }\n\n    const catchAllRoute: Route = {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'Catchall render',\n      fn: async (req, res, _params, parsedUrl) => {\n        let { pathname, query } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        // next.js core assumes page path without trailing slash\n        pathname = removePathTrailingSlash(pathname)\n\n        if (this.nextConfig.i18n) {\n          const localePathResult = normalizeLocalePath(\n            pathname,\n            this.nextConfig.i18n?.locales\n          )\n\n          if (localePathResult.detectedLocale) {\n            pathname = localePathResult.pathname\n            parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n          }\n        }\n        const bubbleNoFallback = !!query._nextBubbleNoFallback\n\n        if (pathname === '/api' || pathname.startsWith('/api/')) {\n          delete query._nextBubbleNoFallback\n\n          const handled = await this.handleApiRequest(\n            req as NextApiRequest,\n            res as NextApiResponse,\n            pathname,\n            query\n          )\n          if (handled) {\n            return { finished: true }\n          }\n        }\n\n        try {\n          await this.render(req, res, pathname, query, parsedUrl)\n\n          return {\n            finished: true,\n          }\n        } catch (err) {\n          if (err instanceof NoFallbackError && bubbleNoFallback) {\n            return {\n              finished: false,\n            }\n          }\n          throw err\n        }\n      },\n    }\n\n    const { useFileSystemPublicRoutes } = this.nextConfig\n\n    if (useFileSystemPublicRoutes) {\n      this.dynamicRoutes = this.getDynamicRoutes()\n    }\n\n    return {\n      headers,\n      fsRoutes,\n      rewrites: {\n        beforeFiles,\n        afterFiles,\n        fallback,\n      },\n      redirects,\n      catchAllRoute,\n      useFileSystemPublicRoutes,\n      dynamicRoutes: this.dynamicRoutes,\n      basePath: this.nextConfig.basePath,\n      pageChecker: this.hasPage.bind(this),\n      locales: this.nextConfig.i18n?.locales || [],\n    }\n  }\n\n  private async getPagePath(\n    pathname: string,\n    locales?: string[]\n  ): Promise<string> {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev,\n      locales\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let found = false\n    try {\n      found = !!(await this.getPagePath(\n        pathname,\n        this.nextConfig.i18n?.locales\n      ))\n    } catch (_) {}\n\n    return found\n  }\n\n  protected async _beforeCatchAllRender(\n    _req: IncomingMessage,\n    _res: ServerResponse,\n    _params: Params,\n    _parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    return false\n  }\n\n  // Used to build API page in development\n  protected async ensureApiPage(_pathname: string): Promise<void> {}\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  private async handleApiRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery\n  ): Promise<boolean> {\n    let page = pathname\n    let params: Params | boolean = false\n    let pageFound = await this.hasPage(page)\n\n    if (!pageFound && this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        params = dynamicRoute.match(pathname)\n        if (dynamicRoute.page.startsWith('/api') && params) {\n          page = dynamicRoute.page\n          pageFound = true\n          break\n        }\n      }\n    }\n\n    if (!pageFound) {\n      return false\n    }\n    // Make sure the page is built before getting the path\n    // or else it won't be in the manifest yet\n    await this.ensureApiPage(page)\n\n    let builtPagePath\n    try {\n      builtPagePath = await this.getPagePath(page)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false\n      }\n      throw err\n    }\n\n    const pageModule = await require(builtPagePath)\n    query = { ...query, ...params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req,\n      res,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      this.minimalMode,\n      this.renderOpts.dev,\n      page\n    )\n    return true\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) =>\n        encodeURI(p.replace(/\\\\/g, '/'))\n      )\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const { basePath } = this.nextConfig\n\n          // if basePath is defined require it be present\n          if (basePath) {\n            const basePathParts = basePath.split('/')\n            // remove first empty value\n            basePathParts.shift()\n\n            if (\n              !basePathParts.every((part: string, idx: number) => {\n                return part === pathParts[idx]\n              })\n            ) {\n              return { finished: false }\n            }\n\n            pathParts.splice(0, basePathParts.length)\n          }\n\n          let path = `/${pathParts.join('/')}`\n\n          if (!publicFiles.has(path)) {\n            // In `next-dev-server.ts`, we ensure encoded paths match\n            // decoded paths on the filesystem. So we need do the\n            // opposite here: make sure decoded paths match encoded.\n            path = encodeURI(path)\n          }\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              join(this.publicDir, ...pathParts),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  protected getDynamicRoutes(): Array<DynamicRouteItem> {\n    const addedPages = new Set<string>()\n\n    return getSortedRoutes(\n      Object.keys(this.pagesManifest!).map(\n        (page) =>\n          normalizeLocalePath(page, this.nextConfig.i18n?.locales).pathname\n      )\n    )\n      .map((page) => {\n        if (addedPages.has(page) || !isDynamicRoute(page)) return null\n        addedPages.add(page)\n        return {\n          page,\n          match: getRouteMatcher(getRouteRegex(page)),\n        }\n      })\n      .filter((item): item is DynamicRouteItem => Boolean(item))\n  }\n\n  private handleCompression(req: IncomingMessage, res: ServerResponse): void {\n    if (this.compression) {\n      this.compression(req, res, () => {})\n    }\n  }\n\n  protected async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    this.handleCompression(req, res)\n\n    try {\n      const matched = await this.router.execute(req, res, parsedUrl)\n      if (matched) {\n        return\n      }\n    } catch (err) {\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n      throw err\n    }\n\n    await this.render404(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (ctx: RequestContext) => Promise<ResponsePayload | null>,\n    partialContext: {\n      req: IncomingMessage\n      res: ServerResponse\n      pathname: string\n      query: ParsedUrlQuery\n    }\n  ): Promise<void> {\n    // TODO: Determine when dynamic HTML is allowed\n    const requireStaticHTML = true\n    const ctx = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        requireStaticHTML,\n      },\n    } as const\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const { body, type, revalidateOptions } = payload\n    if (!isResSent(res)) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n      if (dev) {\n        // In dev, we should not cache pages for any reason.\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n      }\n      return sendRenderResult({\n        req,\n        res,\n        resultOrPayload: requireStaticHTML\n          ? await resultsToString([body])\n          : body,\n        type,\n        generateEtags,\n        poweredByHeader,\n        options: revalidateOptions,\n      })\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (ctx: RequestContext) => Promise<ResponsePayload | null>,\n    partialContext: {\n      req: IncomingMessage\n      res: ServerResponse\n      pathname: string\n      query: ParsedUrlQuery\n    }\n  ): Promise<string | null> {\n    const payload = await fn({\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        requireStaticHTML: true,\n      },\n    })\n    if (payload === null) {\n      return null\n    }\n    return resultsToString([payload.body])\n  }\n\n  public async render(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const url: any = req.url\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !this.minimalMode &&\n      !query._nextDataReq &&\n      (url.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && url.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    // Custom server users can run `app.render()` which needs compression.\n    if (this.renderOpts.customServer) {\n      this.handleCompression(req, res)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    let paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n\n    if (query.__nextLocale) {\n      paths = [\n        ...paths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        ),\n        ...paths,\n      ]\n    }\n\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath?.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? {\n                  amp: query.amp,\n                  _nextDataReq: query._nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                }\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  protected async getStaticPaths(pathname: string): Promise<{\n    staticPaths: string[] | undefined\n    fallbackMode: 'static' | 'blocking' | false\n  }> {\n    // `staticPaths` is intentionally set to `undefined` as it should've\n    // been caught when checking disk data.\n    const staticPaths = undefined\n\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname].fallback\n\n    return {\n      staticPaths,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n          ? 'blocking'\n          : false,\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    { req, res, pathname, renderOpts: opts }: RequestContext,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    const is404Page = pathname === '/404'\n    const is500Page = pathname === '/500'\n\n    const isLikeServerless =\n      typeof components.Component === 'object' &&\n      typeof (components.Component as any).renderReqToHTML === 'function'\n    const isSSG = !!components.getStaticProps\n    const hasServerProps = !!components.getServerSideProps\n    const hasStaticPaths = !!components.getStaticPaths\n    const hasGetInitialProps = !!(components.Component as any).getInitialProps\n\n    // Toggle whether or not this is a Data request\n    const isDataReq = !!query._nextDataReq && (isSSG || hasServerProps)\n    delete query._nextDataReq\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isDataReq) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.substr(1), 10)\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        type: 'html',\n        // TODO: Static pages should be written as chunks\n        body: Observable.of(components.Component),\n      }\n    }\n\n    if (!query.amp) {\n      delete query.amp\n    }\n\n    const locale = query.__nextLocale as string\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : (query.__nextDefaultLocale as string)\n\n    const { i18n } = this.nextConfig\n    const locales = i18n?.locales\n\n    let previewData: PreviewData\n    let isPreviewMode = false\n\n    if (hasServerProps || isSSG) {\n      previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n      isPreviewMode = previewData !== false\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = (req as any)._nextRewroteUrl\n      ? (req as any)._nextRewroteUrl\n      : urlPathname\n\n    urlPathname = removePathTrailingSlash(urlPathname)\n    resolvedUrlPathname = normalizeLocalePath(\n      removePathTrailingSlash(resolvedUrlPathname),\n      this.nextConfig.i18n?.locales\n    ).pathname\n\n    const stripNextDataPath = (path: string) => {\n      if (path.includes(this.buildId)) {\n        const splitPath = path.substring(\n          path.indexOf(this.buildId) + this.buildId.length\n        )\n\n        path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n      }\n\n      if (this.nextConfig.i18n) {\n        return normalizeLocalePath(path, locales).pathname\n      }\n      return path\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (\n        basePath &&\n        redirect.basePath !== false &&\n        redirect.destination.startsWith('/')\n      ) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (redirect.destination.startsWith('/')) {\n        redirect.destination = normalizeRepeatedSlashes(redirect.destination)\n      }\n\n      if (statusCode === PERMANENT_REDIRECT_STATUS) {\n        res.setHeader('Refresh', `0;url=${redirect.destination}`)\n      }\n\n      res.statusCode = statusCode\n      res.setHeader('Location', redirect.destination)\n      res.end()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq) {\n      resolvedUrlPathname = stripNextDataPath(resolvedUrlPathname)\n      urlPathname = stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey =\n      isPreviewMode || !isSSG || this.minimalMode\n        ? null // Preview mode bypasses the cache\n        : `${locale ? `/${locale}` : ''}${\n            (pathname === '/' || resolvedUrlPathname === '/') && locale\n              ? ''\n              : resolvedUrlPathname\n          }${query.amp ? '.amp' : ''}`\n\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    if (ssgCacheKey) {\n      // we only encode path delimiters for path segments from\n      // getStaticPaths so we need to attempt decoding the URL\n      // to match against and only escape the path delimiters\n      // this allows non-ascii values to be handled e.g. Japanese characters\n\n      // TODO: investigate adding this handling for non-SSG pages so\n      // non-ascii names work there also\n      ssgCacheKey = ssgCacheKey\n        .split('/')\n        .map((seg) => {\n          try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true)\n          } catch (_) {\n            // An improperly encoded URL was provided\n            throw new DecodeError('failed to decode param')\n          }\n          return seg\n        })\n        .join('/')\n    }\n\n    const doRender: () => Promise<ResponseCacheEntry | null> = async () => {\n      let pageData: any\n      let body: RenderResult | null\n      let sprRevalidate: number | false\n      let isNotFound: boolean | undefined\n      let isRedirect: boolean | undefined\n\n      // handle serverless\n      if (isLikeServerless) {\n        const renderResult = await (\n          components.Component as any\n        ).renderReqToHTML(req, res, 'passthrough', {\n          locale,\n          locales,\n          defaultLocale,\n          optimizeCss: this.renderOpts.optimizeCss,\n          distDir: this.distDir,\n          fontManifest: this.renderOpts.fontManifest,\n          domainLocales: this.renderOpts.domainLocales,\n        })\n\n        body = renderResult.html\n        pageData = renderResult.renderOpts.pageData\n        sprRevalidate = renderResult.renderOpts.revalidate\n        isNotFound = renderResult.renderOpts.isNotFound\n        isRedirect = renderResult.renderOpts.isRedirect\n      } else {\n        const origQuery = parseUrl(req.url || '', true).query\n        const hadTrailingSlash =\n          urlPathname !== '/' && this.nextConfig.trailingSlash\n\n        const resolvedUrl = formatUrl({\n          pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n          // make sure to only add query values from original URL\n          query: origQuery,\n        })\n\n        const renderOpts: RenderOpts = {\n          ...components,\n          ...opts,\n          isDataReq,\n          resolvedUrl,\n          locale,\n          locales,\n          defaultLocale,\n          // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n          // and not the resolved URL to prevent a hydration mismatch on\n          // asPath\n          resolvedAsPath:\n            hasServerProps || hasGetInitialProps\n              ? formatUrl({\n                  // we use the original URL pathname less the _next/data prefix if\n                  // present\n                  pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                  query: origQuery,\n                })\n              : resolvedUrl,\n        }\n\n        const renderResult = await renderToHTML(\n          req,\n          res,\n          pathname,\n          query,\n          renderOpts\n        )\n\n        body = renderResult\n        // TODO: change this to a different passing mechanism\n        pageData = (renderOpts as any).pageData\n        sprRevalidate = (renderOpts as any).revalidate\n        isNotFound = (renderOpts as any).isNotFound\n        isRedirect = (renderOpts as any).isRedirect\n      }\n\n      let value: ResponseCacheValue | null\n      if (isNotFound) {\n        value = null\n      } else if (isRedirect) {\n        value = { kind: 'REDIRECT', props: pageData }\n      } else {\n        if (!body) {\n          return null\n        }\n        value = { kind: 'PAGE', html: body, pageData }\n      }\n      return { revalidate: sprRevalidate, value }\n    }\n\n    const cacheEntry = await this.responseCache.get(\n      ssgCacheKey,\n      async (hasResolved) => {\n        const isProduction = !this.renderOpts.dev\n        const isDynamicPathname = isDynamicRoute(pathname)\n        const didRespond = hasResolved || isResSent(res)\n\n        const { staticPaths, fallbackMode } = hasStaticPaths\n          ? await this.getStaticPaths(pathname)\n          : { staticPaths: undefined, fallbackMode: false }\n\n        // When we did not respond from cache, we need to choose to block on\n        // rendering or return a skeleton.\n        //\n        // * Data requests always block.\n        //\n        // * Blocking mode fallback always blocks.\n        //\n        // * Preview mode toggles all pages to be resolved in a blocking manner.\n        //\n        // * Non-dynamic pages should block (though this is an impossible\n        //   case in production).\n        //\n        // * Dynamic pages should return their skeleton if not defined in\n        //   getStaticPaths, then finish the data request on the client-side.\n        //\n        if (\n          this.minimalMode !== true &&\n          fallbackMode !== 'blocking' &&\n          ssgCacheKey &&\n          !didRespond &&\n          !isPreviewMode &&\n          isDynamicPathname &&\n          // Development should trigger fallback when the path is not in\n          // `getStaticPaths`\n          (isProduction ||\n            !staticPaths ||\n            !staticPaths.includes(\n              // we use ssgCacheKey here as it is normalized to match the\n              // encoding from getStaticPaths along with including the locale\n              query.amp ? ssgCacheKey.replace(/\\.amp$/, '') : ssgCacheKey\n            ))\n        ) {\n          if (\n            // In development, fall through to render to handle missing\n            // getStaticPaths.\n            (isProduction || staticPaths) &&\n            // When fallback isn't present, abort this render so we 404\n            fallbackMode !== 'static'\n          ) {\n            throw new NoFallbackError()\n          }\n\n          if (!isDataReq) {\n            // Production already emitted the fallback as static HTML.\n            if (isProduction) {\n              const html = await this.incrementalCache.getFallback(\n                locale ? `/${locale}${pathname}` : pathname\n              )\n              return {\n                value: {\n                  kind: 'PAGE',\n                  html: Observable.of(html),\n                  pageData: {},\n                },\n              }\n            }\n            // We need to generate the fallback on-demand for development.\n            else {\n              query.__nextFallback = 'true'\n              if (isLikeServerless) {\n                prepareServerlessUrl(req, query)\n              }\n              const result = await doRender()\n              if (!result) {\n                return null\n              }\n              // Prevent caching this result\n              delete result.revalidate\n              return result\n            }\n          }\n        }\n\n        const result = await doRender()\n        if (!result) {\n          return null\n        }\n        return {\n          ...result,\n          revalidate:\n            result.revalidate !== undefined\n              ? result.revalidate\n              : /* default to minimum revalidate (this should be an invariant) */ 1,\n        }\n      }\n    )\n\n    if (!cacheEntry) {\n      if (ssgCacheKey) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error('invariant: cache entry required but not generated')\n      }\n      return null\n    }\n\n    const { revalidate, value: cachedData } = cacheEntry\n    const revalidateOptions: any =\n      typeof revalidate !== 'undefined' &&\n      (!this.renderOpts.dev || (hasServerProps && !isDataReq))\n        ? {\n            // When the page is 404 cache-control should not be added\n            private: isPreviewMode || is404Page,\n            stateful: !isSSG,\n            revalidate,\n          }\n        : undefined\n\n    if (!cachedData) {\n      if (revalidateOptions) {\n        setRevalidateHeaders(res, revalidateOptions)\n      }\n      if (isDataReq) {\n        res.statusCode = 404\n        res.end('{\"notFound\":true}')\n        return null\n      } else {\n        await this.render404(req, res, {\n          pathname,\n          query,\n        } as UrlWithParsedQuery)\n        return null\n      }\n    } else if (cachedData.kind === 'REDIRECT') {\n      if (isDataReq) {\n        return {\n          type: 'json',\n          body: Observable.of(JSON.stringify(cachedData.props)),\n          revalidateOptions,\n        }\n      } else {\n        await handleRedirect(cachedData.props)\n        return null\n      }\n    } else {\n      return {\n        type: isDataReq ? 'json' : 'html',\n        body: isDataReq\n          ? Observable.of(JSON.stringify(cachedData.pageData))\n          : cachedData.html,\n        revalidateOptions,\n      }\n    }\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext\n  ): Promise<ResponsePayload | null> {\n    const { res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback = !!query._nextBubbleNoFallback\n    delete query._nextBubbleNoFallback\n\n    try {\n      const result = await this.findPageComponents(pathname, query)\n      if (result) {\n        try {\n          return await this.renderToResponseWithComponents(ctx, result)\n        } catch (err) {\n          const isNoFallbackError = err instanceof NoFallbackError\n\n          if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n            throw err\n          }\n        }\n      }\n\n      if (this.dynamicRoutes) {\n        for (const dynamicRoute of this.dynamicRoutes) {\n          const params = dynamicRoute.match(pathname)\n          if (!params) {\n            continue\n          }\n\n          const dynamicRouteResult = await this.findPageComponents(\n            dynamicRoute.page,\n            query,\n            params\n          )\n          if (dynamicRouteResult) {\n            try {\n              page = dynamicRoute.page\n              return await this.renderToResponseWithComponents(\n                {\n                  ...ctx,\n                  pathname: dynamicRoute.page,\n                  renderOpts: {\n                    ...ctx.renderOpts,\n                    params,\n                  },\n                },\n                dynamicRouteResult\n              )\n            } catch (err) {\n              const isNoFallbackError = err instanceof NoFallbackError\n\n              if (\n                !isNoFallbackError ||\n                (isNoFallbackError && bubbleNoFallback)\n              ) {\n                throw err\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n      const isWrappedError = err instanceof WrappedBuildError\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? err.innerError : err\n      )\n\n      if (!isWrappedError) {\n        if (this.minimalMode || this.renderOpts.dev) {\n          if (err) {\n            err.page = page\n          }\n          throw err\n        }\n        this.logError(err)\n      }\n      return response\n    }\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    console.warn(\n      chalk.bold.yellow(`Warning: `) +\n        chalk.yellow(\n          `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n        )\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext,\n    _err: Error | null\n  ): Promise<ResponsePayload | null> {\n    const { res, query } = ctx\n    let err = _err\n    if (this.renderOpts.dev && !err && res.statusCode === 500) {\n      err = new Error(\n        'An undefined error was thrown sometime during render... ' +\n          'See https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      // use static 404 page if available and is 404 response\n      if (is404) {\n        result = await this.findPageComponents('/404', query)\n        using404Page = result !== null\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (!result && STATIC_STATUS_PAGES.includes(statusPage)) {\n        result = await this.findPageComponents(statusPage, query)\n      }\n\n      if (!result) {\n        result = await this.findPageComponents('/_error', query)\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result!\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (renderToHtmlError) {\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents()\n\n      if (fallbackComponents) {\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        type: 'html',\n        body: Observable.of('Internal Server Error'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getFallbackErrorComponents(): Promise<LoadComponentsReturnType | null> {\n    // The development server will provide an implementation for this\n    return null\n  }\n\n  public async render404(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery,\n    setHeaders = true\n  ): Promise<void> {\n    const url: any = req.url\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(url, true)\n    const { i18n } = this.nextConfig\n\n    if (i18n) {\n      query.__nextLocale = query.__nextLocale || i18n.defaultLocale\n      query.__nextDefaultLocale =\n        query.__nextDefaultLocale || i18n.defaultLocale\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n\n  public async serveStatic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await serveStatic(req, res, path)\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  private getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n    nextFilesStatic = !this.minimalMode\n      ? recursiveReadDirSync(join(this.distDir, 'static')).map((f) =>\n          join('.', relative(this.dir, this.distDir), 'static', f)\n        )\n      : []\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected readBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected get _isLikeServerless(): boolean {\n    return isTargetLikeServerless(this.nextConfig.target)\n  }\n}\n\nfunction prepareServerlessUrl(\n  req: IncomingMessage,\n  query: ParsedUrlQuery\n): void {\n  const curUrl = parseUrl(req.url!, true)\n  req.url = formatUrl({\n    ...curUrl,\n    search: undefined,\n    query: {\n      ...curUrl.query,\n      ...query,\n    },\n  })\n}\n\nclass NoFallbackError extends Error {}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  type: 'html' | 'json'\n  body: RenderResult\n  revalidateOptions?: any\n}\n"],"names":["envConfig","Log","getCustomRouteMatcher","Server","dir","quiet","conf","dev","minimalMode","customServer","customErrorNo404Warn","console","warn","bold","yellow","_validFilesystemPathSet","nextConfig","distDir","publicDir","hasStaticDir","existsSync","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","compress","buildId","readBuildId","renderOpts","poweredByHeader","canonicalBase","amp","previewProps","getPreviewProps","undefined","ampOptimizerConfig","experimental","optimizer","basePath","images","JSON","stringify","optimizeFonts","fontManifest","_isLikeServerless","optimizeImages","optimizeCss","disableOptimizedLoading","domainLocales","i18n","domains","concurrentFeatures","Object","keys","length","runtimeConfig","target","compression","setConfig","serverBuildDir","pagesManifestPath","pagesManifest","require","customRoutes","getCustomRoutes","router","generateRoutes","setAssetPrefix","incrementalCache","pagesDir","locales","max","isrMemoryCacheSize","flushToDisk","isrFlushToDisk","responseCache","process","env","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_IMAGES","__NEXT_OPTIMIZE_CSS","logError","err","error","handleRequest","req","res","parsedUrl","url","urlParts","split","urlNoQuery","match","cleanUrl","setHeader","statusCode","end","headers","query","__NEXT_INIT_QUERY","assign","replace","_nextHadBasePath","reqUrlIsDataUrl","includes","matchedPathIsDataUrl","isDataUrl","parsedPath","pathname","matchedPathname","matchedPathnameNoExt","localePathResult","detectedLocale","__nextLocale","pageIsDynamic","combinedRewrites","push","rewrites","beforeFiles","afterFiles","fallback","utils","page","handleRewrites","params","paramsResult","normalizeDynamicRouteParams","hasValidParams","opts","getParamsFromRouteMatches","locale","dynamicRouteMatcher","interpolateDynamicPath","normalizeVercelUrl","__nextHadTrailingSlash","trailingSlash","domain","__nextIsLocaleDomain","path","__nextStrippedLocale","startsWith","render404","defaultLocale","__nextDefaultLocale","redirect","run","getRequestHandler","bind","prefix","prepare","close","setImmutableAssetCacheControl","Array","isArray","getPrerenderManifest","_cachedPreviewManifest","manifest","preview","server","publicRoutes","generatePublicRoutes","staticFilesRoute","name","fn","p","serveStatic","finished","fsRoutes","type","_parsedUrl","shift","endsWith","join","host","hostname","toLowerCase","render","_nextDataReq","_params","imageOptimizer","restrictedRedirectPaths","map","getCustomRoute","r","source","internal","regex","_req","_res","headerRoute","has","hasParams","header","key","value","stringifyQuery","initialQueryValues","values","encodeURIComponent","some","val","redirects","redirectRoute","parsedDestination","destination","search","updatedDestination","buildRewrite","rewrite","check","rewriteRoute","newUrl","protocol","proxy","changeOrigin","ignorePath","xfwd","proxyTimeout","Promise","proxyResolve","proxyReject","on","proxyReq","web","_nextRewroteUrl","_nextDidRewrite","catchAllRoute","Error","bubbleNoFallback","_nextBubbleNoFallback","handled","handleApiRequest","NoFallbackError","useFileSystemPublicRoutes","dynamicRoutes","getDynamicRoutes","pageChecker","hasPage","getPagePath","found","_","_beforeCatchAllRender","ensureApiPage","_pathname","pageFound","dynamicRoute","builtPagePath","code","pageModule","default","prepareServerlessUrl","publicFiles","Set","encodeURI","pathParts","basePathParts","every","part","idx","splice","addedPages","add","filter","item","Boolean","handleCompression","matched","execute","renderError","pipe","partialContext","requireStaticHTML","ctx","payload","body","revalidateOptions","resultOrPayload","options","getStaticHTML","renderToResponse","findPageComponents","paths","pagePath","components","Component","getStaticProps","getStaticPaths","staticPaths","fallbackField","fallbackMode","renderToResponseWithComponents","is404Page","is500Page","isLikeServerless","renderReqToHTML","isSSG","hasServerProps","getServerSideProps","hasStaticPaths","hasGetInitialProps","getInitialProps","isDataReq","parseInt","substr","of","previewData","isPreviewMode","urlPathname","resolvedUrlPathname","stripNextDataPath","splitPath","substring","indexOf","handleRedirect","pageData","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","ssgCacheKey","seg","decodeURIComponent","doRender","sprRevalidate","isNotFound","isRedirect","renderResult","html","revalidate","origQuery","hadTrailingSlash","resolvedUrl","resolvedAsPath","kind","props","cacheEntry","get","hasResolved","isProduction","isDynamicPathname","didRespond","getFallback","__nextFallback","result","cachedData","private","stateful","isNoFallbackError","dynamicRouteResult","renderErrorToResponse","isWrappedError","WrappedBuildError","response","innerError","renderToHTML","setHeaders","_err","is404","using404Page","statusPage","NODE_ENV","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","isServeableUrl","method","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","untrustedFileUrl","decodedUntrustedFilePath","untrustedFilePath","filesystemUrls","resolved","buildIdFile","readFileSync","trim","curUrl"],"mappings":"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"}