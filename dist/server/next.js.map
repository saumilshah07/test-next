{"version":3,"sources":["../../server/next.ts"],"sourcesContent":["import './node-polyfill-fetch'\nimport { default as Server, ServerConstructor } from './next-server'\nimport { NON_STANDARD_NODE_ENV } from '../lib/constants'\nimport * as log from '../build/output/log'\nimport loadConfig, { NextConfig } from './config'\nimport { resolve } from 'path'\nimport {\n  PHASE_DEVELOPMENT_SERVER,\n  PHASE_PRODUCTION_SERVER,\n} from '../shared/lib/constants'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { UrlWithParsedQuery } from 'url'\n\ntype NextServerConstructor = ServerConstructor & {\n  /**\n   * Whether to launch Next.js in dev mode - @default false\n   */\n  dev?: boolean\n}\n\nlet ServerImpl: typeof Server\n\nconst getServerImpl = async () => {\n  if (ServerImpl === undefined)\n    ServerImpl = (await import('./next-server')).default\n  return ServerImpl\n}\n\nexport class NextServer {\n  private serverPromise?: Promise<Server>\n  private server?: Server\n  private reqHandlerPromise?: Promise<any>\n  private preparedAssetPrefix?: string\n  options: NextServerConstructor\n\n  constructor(options: NextServerConstructor) {\n    this.options = options\n  }\n\n  getRequestHandler() {\n    return async (\n      req: IncomingMessage,\n      res: ServerResponse,\n      parsedUrl?: UrlWithParsedQuery\n    ) => {\n      const requestHandler = await this.getServerRequestHandler()\n      return requestHandler(req, res, parsedUrl)\n    }\n  }\n\n  setAssetPrefix(assetPrefix: string) {\n    if (this.server) {\n      this.server.setAssetPrefix(assetPrefix)\n    } else {\n      this.preparedAssetPrefix = assetPrefix\n    }\n  }\n\n  logError(...args: Parameters<Server['logError']>) {\n    if (this.server) {\n      this.server.logError(...args)\n    }\n  }\n\n  async render(...args: Parameters<Server['render']>) {\n    const server = await this.getServer()\n    return server.render(...args)\n  }\n\n  async renderToHTML(...args: Parameters<Server['renderToHTML']>) {\n    const server = await this.getServer()\n    return server.renderToHTML(...args)\n  }\n\n  async renderError(...args: Parameters<Server['renderError']>) {\n    const server = await this.getServer()\n    return server.renderError(...args)\n  }\n\n  async renderErrorToHTML(...args: Parameters<Server['renderErrorToHTML']>) {\n    const server = await this.getServer()\n    return server.renderErrorToHTML(...args)\n  }\n\n  async render404(...args: Parameters<Server['render404']>) {\n    const server = await this.getServer()\n    return server.render404(...args)\n  }\n\n  async serveStatic(...args: Parameters<Server['serveStatic']>) {\n    const server = await this.getServer()\n    return server.serveStatic(...args)\n  }\n\n  async prepare() {\n    const server = await this.getServer()\n    return server.prepare()\n  }\n\n  async close() {\n    const server = await this.getServer()\n    return (server as any).close()\n  }\n\n  private async createServer(\n    options: NextServerConstructor & {\n      conf: NextConfig\n      isNextDevCommand?: boolean\n    }\n  ): Promise<Server> {\n    if (options.dev) {\n      const DevServer = require('./dev/next-dev-server').default\n      return new DevServer(options)\n    }\n    const ServerImplementation = await getServerImpl()\n    return new ServerImplementation(options)\n  }\n\n  private async loadConfig() {\n    const phase = this.options.dev\n      ? PHASE_DEVELOPMENT_SERVER\n      : PHASE_PRODUCTION_SERVER\n    const dir = resolve(this.options.dir || '.')\n    const conf = await loadConfig(phase, dir, this.options.conf)\n    return conf\n  }\n\n  private async getServer() {\n    if (!this.serverPromise) {\n      setTimeout(getServerImpl, 10)\n      this.serverPromise = this.loadConfig().then(async (conf) => {\n        this.server = await this.createServer({\n          ...this.options,\n          conf,\n        })\n        if (this.preparedAssetPrefix) {\n          this.server.setAssetPrefix(this.preparedAssetPrefix)\n        }\n        return this.server\n      })\n    }\n    return this.serverPromise\n  }\n\n  private async getServerRequestHandler() {\n    // Memoize request handler creation\n    if (!this.reqHandlerPromise) {\n      this.reqHandlerPromise = this.getServer().then((server) =>\n        server.getRequestHandler().bind(server)\n      )\n    }\n    return this.reqHandlerPromise\n  }\n}\n\n// This file is used for when users run `require('next')`\nfunction createServer(options: NextServerConstructor): NextServer {\n  const standardEnv = ['production', 'development', 'test']\n\n  if (options == null) {\n    throw new Error(\n      'The server has not been instantiated properly. https://nextjs.org/docs/messages/invalid-server-options'\n    )\n  }\n\n  if (\n    !(options as any).isNextDevCommand &&\n    process.env.NODE_ENV &&\n    !standardEnv.includes(process.env.NODE_ENV)\n  ) {\n    log.warn(NON_STANDARD_NODE_ENV)\n  }\n\n  if (options.dev) {\n    if (typeof options.dev !== 'boolean') {\n      console.warn(\n        \"Warning: 'dev' is not a boolean which could introduce unexpected behavior. https://nextjs.org/docs/messages/invalid-server-options\"\n      )\n    }\n  }\n\n  return new NextServer(options)\n}\n\n// Support commonjs `require('next')`\nmodule.exports = createServer\nexports = module.exports\n\n// Support `import next from 'next'`\nexport default createServer\n"],"names":["log","ServerImpl","getServerImpl","undefined","default","NextServer","options","getRequestHandler","req","res","parsedUrl","requestHandler","getServerRequestHandler","setAssetPrefix","assetPrefix","server","preparedAssetPrefix","logError","args","render","getServer","renderToHTML","renderError","renderErrorToHTML","render404","serveStatic","prepare","close","createServer","dev","DevServer","require","ServerImplementation","loadConfig","phase","dir","conf","serverPromise","setTimeout","then","reqHandlerPromise","bind","standardEnv","Error","isNextDevCommand","process","env","NODE_ENV","includes","warn","console","module","exports"],"mappings":"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"}