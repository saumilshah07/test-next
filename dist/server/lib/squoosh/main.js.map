{"version":3,"sources":["../../../../server/lib/squoosh/main.ts"],"sourcesContent":["import { Worker } from 'jest-worker'\nimport * as path from 'path'\nimport { execOnce } from '../../../shared/lib/utils'\nimport { cpus } from 'os'\n\ntype RotateOperation = {\n  type: 'rotate'\n  numRotations: number\n}\ntype ResizeOperation = {\n  type: 'resize'\n} & ({ width: number; height?: never } | { height: number; width?: never })\nexport type Operation = RotateOperation | ResizeOperation\nexport type Encoding = 'jpeg' | 'png' | 'webp'\n\nconst getWorker = execOnce(\n  () =>\n    new Worker(path.resolve(__dirname, 'impl'), {\n      enableWorkerThreads: true,\n      // There will be at most 6 workers needed since each worker will take\n      // at least 1 operation type.\n      numWorkers: Math.max(1, Math.min(cpus().length - 1, 6)),\n      computeWorkerKey: (method) => method,\n    })\n)\n\nexport async function processBuffer(\n  buffer: Buffer,\n  operations: Operation[],\n  encoding: Encoding,\n  quality: number\n): Promise<Buffer> {\n  const worker: typeof import('./impl') = getWorker() as any\n\n  let imageData = await worker.decodeBuffer(buffer)\n  for (const operation of operations) {\n    if (operation.type === 'rotate') {\n      imageData = await worker.rotate(imageData, operation.numRotations)\n    } else if (operation.type === 'resize') {\n      if (\n        operation.width &&\n        imageData.width &&\n        imageData.width > operation.width\n      ) {\n        imageData = await worker.resize({\n          image: imageData,\n          width: operation.width,\n        })\n      } else if (\n        operation.height &&\n        imageData.height &&\n        imageData.height > operation.height\n      ) {\n        imageData = await worker.resize({\n          image: imageData,\n          height: operation.height,\n        })\n      }\n    }\n  }\n\n  switch (encoding) {\n    case 'jpeg':\n      return Buffer.from(await worker.encodeJpeg(imageData, { quality }))\n    case 'webp':\n      return Buffer.from(await worker.encodeWebp(imageData, { quality }))\n    case 'png':\n      return Buffer.from(await worker.encodePng(imageData))\n    default:\n      throw Error(`Unsupported encoding format`)\n  }\n}\n"],"names":["processBuffer","path","getWorker","resolve","__dirname","enableWorkerThreads","numWorkers","Math","max","min","length","computeWorkerKey","method","buffer","operations","encoding","quality","worker","imageData","decodeBuffer","operation","type","rotate","numRotations","width","resize","image","height","Buffer","from","encodeJpeg","encodeWebp","encodePng","Error"],"mappings":";;;;QA0BsBA,aAAa,GAAbA,aAAa;AA1BZ,GAAa,CAAb,WAAa;AACxBC,GAAI,CAAJA,IAAI;AACS,GAA2B,CAA3B,MAA2B;AAC/B,GAAI,CAAJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;AAYzB,KAAK,CAACC,SAAS,OAbU,MAA2B,eAehD,GAAG,CAjBgB,WAAa,QACxBD,IAAI,CAgBIE,OAAO,CAACC,SAAS,EAAE,CAAM,QAAG,CAAC;QAC3CC,mBAAmB,EAAE,IAAI;QACzB,EAAqE,AAArE,mEAAqE;QACrE,EAA6B,AAA7B,2BAA6B;QAC7BC,UAAU,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,KAlBjB,GAAI,SAkBqBC,MAAM,GAAG,CAAC,EAAE,CAAC;QACrDC,gBAAgB,GAAGC,MAAM,GAAKA,MAAM;IACtC,CAAC;;eAGiBZ,aAAa,CACjCa,MAAc,EACdC,UAAuB,EACvBC,QAAkB,EAClBC,OAAe,EACE,CAAC;IAClB,KAAK,CAACC,MAAM,GAA4Bf,SAAS;IAEjD,GAAG,CAACgB,SAAS,GAAG,KAAK,CAACD,MAAM,CAACE,YAAY,CAACN,MAAM;IAChD,GAAG,EAAE,KAAK,CAACO,SAAS,IAAIN,UAAU,CAAE,CAAC;QACnC,EAAE,EAAEM,SAAS,CAACC,IAAI,KAAK,CAAQ,SAAE,CAAC;YAChCH,SAAS,GAAG,KAAK,CAACD,MAAM,CAACK,MAAM,CAACJ,SAAS,EAAEE,SAAS,CAACG,YAAY;QACnE,CAAC,MAAM,EAAE,EAAEH,SAAS,CAACC,IAAI,KAAK,CAAQ,SAAE,CAAC;YACvC,EAAE,EACAD,SAAS,CAACI,KAAK,IACfN,SAAS,CAACM,KAAK,IACfN,SAAS,CAACM,KAAK,GAAGJ,SAAS,CAACI,KAAK,EACjC,CAAC;gBACDN,SAAS,GAAG,KAAK,CAACD,MAAM,CAACQ,MAAM,CAAC,CAAC;oBAC/BC,KAAK,EAAER,SAAS;oBAChBM,KAAK,EAAEJ,SAAS,CAACI,KAAK;gBACxB,CAAC;YACH,CAAC,MAAM,EAAE,EACPJ,SAAS,CAACO,MAAM,IAChBT,SAAS,CAACS,MAAM,IAChBT,SAAS,CAACS,MAAM,GAAGP,SAAS,CAACO,MAAM,EACnC,CAAC;gBACDT,SAAS,GAAG,KAAK,CAACD,MAAM,CAACQ,MAAM,CAAC,CAAC;oBAC/BC,KAAK,EAAER,SAAS;oBAChBS,MAAM,EAAEP,SAAS,CAACO,MAAM;gBAC1B,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,CAAEZ,QAAQ;QACd,IAAI,CAAC,CAAM;YACT,MAAM,CAACa,MAAM,CAACC,IAAI,CAAC,KAAK,CAACZ,MAAM,CAACa,UAAU,CAACZ,SAAS,EAAE,CAAC;gBAACF,OAAO;YAAC,CAAC;QACnE,IAAI,CAAC,CAAM;YACT,MAAM,CAACY,MAAM,CAACC,IAAI,CAAC,KAAK,CAACZ,MAAM,CAACc,UAAU,CAACb,SAAS,EAAE,CAAC;gBAACF,OAAO;YAAC,CAAC;QACnE,IAAI,CAAC,CAAK;YACR,MAAM,CAACY,MAAM,CAACC,IAAI,CAAC,KAAK,CAACZ,MAAM,CAACe,SAAS,CAACd,SAAS;;YAEnD,KAAK,CAACe,KAAK,EAAE,2BAA2B;;AAE9C,CAAC"}