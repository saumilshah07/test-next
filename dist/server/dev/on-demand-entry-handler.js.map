{"version":3,"sources":["../../../server/dev/on-demand-entry-handler.ts"],"sourcesContent":["import { EventEmitter } from 'events'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { join, posix } from 'path'\nimport { parse } from 'url'\nimport { webpack, isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport * as Log from '../../build/output/log'\nimport { normalizePagePath, normalizePathSep } from '../normalize-page-path'\nimport { pageNotFoundError } from '../require'\nimport { findPageFile } from '../lib/find-page-file'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\n\nexport const ADDED = Symbol('added')\nexport const BUILDING = Symbol('building')\nexport const BUILT = Symbol('built')\n\nexport let entries: {\n  [page: string]: {\n    serverBundlePath: string\n    clientBundlePath: string\n    absolutePagePath: string\n    status?: typeof ADDED | typeof BUILDING | typeof BUILT\n    lastActiveTime?: number\n  }\n} = {}\n\nexport default function onDemandEntryHandler(\n  watcher: any,\n  multiCompiler: webpack.MultiCompiler,\n  {\n    pagesDir,\n    pageExtensions,\n    maxInactiveAge,\n    pagesBufferLength,\n  }: {\n    pagesDir: string\n    pageExtensions: string[]\n    maxInactiveAge: number\n    pagesBufferLength: number\n  }\n) {\n  const { compilers } = multiCompiler\n  const invalidator = new Invalidator(watcher, multiCompiler)\n\n  let lastAccessPages = ['']\n  let doneCallbacks: EventEmitter | null = new EventEmitter()\n\n  for (const compiler of compilers) {\n    compiler.hooks.make.tap(\n      'NextJsOnDemandEntries',\n      (_compilation: webpack.compilation.Compilation) => {\n        invalidator.startBuilding()\n      }\n    )\n  }\n\n  function getPagePathsFromEntrypoints(entrypoints: any): string[] {\n    const pagePaths = []\n    for (const entrypoint of entrypoints.values()) {\n      const page = getRouteFromEntrypoint(entrypoint.name)\n      if (page) {\n        pagePaths.push(page)\n      }\n    }\n\n    return pagePaths\n  }\n\n  multiCompiler.hooks.done.tap('NextJsOnDemandEntries', (multiStats) => {\n    const [clientStats, serverStats] = multiStats.stats\n    const pagePaths = new Set([\n      ...getPagePathsFromEntrypoints(clientStats.compilation.entrypoints),\n      ...getPagePathsFromEntrypoints(serverStats.compilation.entrypoints),\n    ])\n\n    for (const page of pagePaths) {\n      const entry = entries[page]\n      if (!entry) {\n        continue\n      }\n\n      if (entry.status !== BUILDING) {\n        continue\n      }\n\n      entry.status = BUILT\n      entry.lastActiveTime = Date.now()\n      doneCallbacks!.emit(page)\n    }\n\n    invalidator.doneBuilding()\n  })\n\n  const disposeHandler = setInterval(function () {\n    disposeInactiveEntries(watcher, lastAccessPages, maxInactiveAge)\n  }, 5000)\n\n  disposeHandler.unref()\n\n  function handlePing(pg: string) {\n    const page = normalizePathSep(pg)\n    const entryInfo = entries[page]\n    let toSend\n\n    // If there's no entry, it may have been invalidated and needs to be re-built.\n    if (!entryInfo) {\n      // if (page !== lastEntry) client pings, but there's no entry for page\n      return { invalid: true }\n    }\n\n    // 404 is an on demand entry but when a new page is added we have to refresh the page\n    if (page === '/_error') {\n      toSend = { invalid: true }\n    } else {\n      toSend = { success: true }\n    }\n\n    // We don't need to maintain active state of anything other than BUILT entries\n    if (entryInfo.status !== BUILT) return\n\n    // If there's an entryInfo\n    if (!lastAccessPages.includes(page)) {\n      lastAccessPages.unshift(page)\n\n      // Maintain the buffer max length\n      if (lastAccessPages.length > pagesBufferLength) {\n        lastAccessPages.pop()\n      }\n    }\n    entryInfo.lastActiveTime = Date.now()\n    return toSend\n  }\n\n  return {\n    async ensurePage(page: string) {\n      let normalizedPagePath: string\n      try {\n        normalizedPagePath = normalizePagePath(page)\n      } catch (err) {\n        console.error(err)\n        throw pageNotFoundError(page)\n      }\n\n      let pagePath = await findPageFile(\n        pagesDir,\n        normalizedPagePath,\n        pageExtensions\n      )\n\n      // Default the /_error route to the Next.js provided default page\n      if (page === '/_error' && pagePath === null) {\n        pagePath = 'next/dist/pages/_error'\n      }\n\n      if (pagePath === null) {\n        throw pageNotFoundError(normalizedPagePath)\n      }\n\n      let pageUrl = pagePath.replace(/\\\\/g, '/')\n\n      pageUrl = `${pageUrl[0] !== '/' ? '/' : ''}${pageUrl\n        .replace(new RegExp(`\\\\.+(?:${pageExtensions.join('|')})$`), '')\n        .replace(/\\/index$/, '')}`\n\n      pageUrl = pageUrl === '' ? '/' : pageUrl\n\n      const bundleFile = normalizePagePath(pageUrl)\n      const serverBundlePath = posix.join('pages', bundleFile)\n      const clientBundlePath = posix.join('pages', bundleFile)\n      const absolutePagePath = pagePath.startsWith('next/dist/pages')\n        ? require.resolve(pagePath)\n        : join(pagesDir, pagePath)\n\n      page = posix.normalize(pageUrl)\n\n      return new Promise<void>((resolve, reject) => {\n        // Makes sure the page that is being kept in on-demand-entries matches the webpack output\n        const normalizedPage = normalizePathSep(page)\n        const entryInfo = entries[normalizedPage]\n\n        if (entryInfo) {\n          if (entryInfo.status === BUILT) {\n            resolve()\n            return\n          }\n\n          if (entryInfo.status === BUILDING) {\n            doneCallbacks!.once(normalizedPage, handleCallback)\n            return\n          }\n        }\n\n        Log.event(`build page: ${normalizedPage}`)\n\n        entries[normalizedPage] = {\n          serverBundlePath,\n          clientBundlePath,\n          absolutePagePath,\n          status: ADDED,\n        }\n        doneCallbacks!.once(normalizedPage, handleCallback)\n\n        invalidator.invalidate()\n\n        function handleCallback(err: Error) {\n          if (err) return reject(err)\n          resolve()\n        }\n      })\n    },\n\n    middleware(req: IncomingMessage, res: ServerResponse, next: Function) {\n      if (!req.url?.startsWith('/_next/webpack-hmr')) return next()\n\n      const { query } = parse(req.url!, true)\n      const page = query.page\n      if (!page) return next()\n\n      const runPing = () => {\n        const data = handlePing(query.page as string)\n        if (!data) return\n        res.write('data: ' + JSON.stringify(data) + '\\n\\n')\n      }\n      const pingInterval = setInterval(() => runPing(), 5000)\n\n      req.on('close', () => {\n        clearInterval(pingInterval)\n      })\n      next()\n    },\n  }\n}\n\nfunction disposeInactiveEntries(\n  watcher: any,\n  lastAccessPages: any,\n  maxInactiveAge: number\n) {\n  const disposingPages: any = []\n\n  Object.keys(entries).forEach((page) => {\n    const { lastActiveTime, status } = entries[page]\n\n    // This means this entry is currently building or just added\n    // We don't need to dispose those entries.\n    if (status !== BUILT) return\n\n    // We should not build the last accessed page even we didn't get any pings\n    // Sometimes, it's possible our XHR ping to wait before completing other requests.\n    // In that case, we should not dispose the current viewing page\n    if (lastAccessPages.includes(page)) return\n\n    if (lastActiveTime && Date.now() - lastActiveTime > maxInactiveAge) {\n      disposingPages.push(page)\n    }\n  })\n\n  if (disposingPages.length > 0) {\n    disposingPages.forEach((page: any) => {\n      delete entries[page]\n    })\n    // disposing inactive page(s)\n    watcher.invalidate()\n  }\n}\n\n// Make sure only one invalidation happens at a time\n// Otherwise, webpack hash gets changed and it'll force the client to reload.\nclass Invalidator {\n  private multiCompiler: webpack.MultiCompiler\n  private watcher: any\n  private building: boolean\n  private rebuildAgain: boolean\n\n  constructor(watcher: any, multiCompiler: webpack.MultiCompiler) {\n    this.multiCompiler = multiCompiler\n    this.watcher = watcher\n    // contains an array of types of compilers currently building\n    this.building = false\n    this.rebuildAgain = false\n  }\n\n  invalidate() {\n    // If there's a current build is processing, we won't abort it by invalidating.\n    // (If aborted, it'll cause a client side hard reload)\n    // But let it to invalidate just after the completion.\n    // So, it can re-build the queued pages at once.\n    if (this.building) {\n      this.rebuildAgain = true\n      return\n    }\n\n    this.building = true\n    if (!isWebpack5) {\n      // Work around a bug in webpack, calling `invalidate` on Watching.js\n      // doesn't trigger the invalid call used to keep track of the `.done` hook on multiCompiler\n      for (const compiler of this.multiCompiler.compilers) {\n        compiler.hooks.invalid.call()\n      }\n    }\n\n    this.watcher.invalidate()\n  }\n\n  startBuilding() {\n    this.building = true\n  }\n\n  doneBuilding() {\n    this.building = false\n\n    if (this.rebuildAgain) {\n      this.rebuildAgain = false\n      this.invalidate()\n    }\n  }\n}\n"],"names":["onDemandEntryHandler","Log","ADDED","Symbol","BUILDING","BUILT","entries","watcher","multiCompiler","pagesDir","pageExtensions","maxInactiveAge","pagesBufferLength","compilers","invalidator","Invalidator","lastAccessPages","doneCallbacks","compiler","hooks","make","tap","_compilation","startBuilding","getPagePathsFromEntrypoints","entrypoints","pagePaths","entrypoint","values","page","name","push","done","multiStats","clientStats","serverStats","stats","Set","compilation","entry","status","lastActiveTime","Date","now","emit","doneBuilding","disposeHandler","setInterval","disposeInactiveEntries","unref","handlePing","pg","entryInfo","toSend","invalid","success","includes","unshift","length","pop","ensurePage","normalizedPagePath","err","console","error","pagePath","pageUrl","replace","RegExp","join","bundleFile","serverBundlePath","clientBundlePath","absolutePagePath","startsWith","require","resolve","normalize","Promise","reject","normalizedPage","once","handleCallback","event","invalidate","middleware","req","res","next","url","query","runPing","data","write","JSON","stringify","pingInterval","on","clearInterval","disposingPages","Object","keys","forEach","building","rebuildAgain","call"],"mappings":"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"}