{"version":3,"sources":["../../../server/dev/next-dev-server.ts"],"sourcesContent":["import crypto from 'crypto'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { Worker } from 'jest-worker'\nimport AmpHtmlValidator from 'next/dist/compiled/amphtml-validator'\nimport findUp from 'next/dist/compiled/find-up'\nimport { join as pathJoin, relative, resolve as pathResolve, sep } from 'path'\nimport React from 'react'\nimport { UrlWithParsedQuery } from 'url'\nimport Watchpack from 'watchpack'\nimport { ampValidation } from '../../build/output'\nimport { PUBLIC_DIR_MIDDLEWARE_CONFLICT } from '../../lib/constants'\nimport { fileExists } from '../../lib/file-exists'\nimport { findPagesDir } from '../../lib/find-pages-dir'\nimport loadCustomRoutes, { CustomRoutes } from '../../lib/load-custom-routes'\nimport { verifyTypeScriptSetup } from '../../lib/verifyTypeScriptSetup'\nimport {\n  PHASE_DEVELOPMENT_SERVER,\n  CLIENT_STATIC_FILES_PATH,\n  DEV_CLIENT_PAGES_MANIFEST,\n} from '../../shared/lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../../shared/lib/router/utils'\nimport { __ApiPreviewProps } from '../api-utils'\nimport Server, {\n  WrappedBuildError,\n  ServerConstructor,\n  FindComponentsResult,\n} from '../next-server'\nimport { normalizePagePath } from '../normalize-page-path'\nimport Router, { Params, route } from '../router'\nimport { eventCliSession } from '../../telemetry/events'\nimport { Telemetry } from '../../telemetry/storage'\nimport { setGlobal } from '../../telemetry/trace'\nimport HotReloader from './hot-reloader'\nimport { findPageFile } from '../lib/find-page-file'\nimport { getNodeOptionsWithoutInspect } from '../lib/utils'\nimport { withCoalescedInvoke } from '../../lib/coalesced-function'\nimport { NextConfig } from '../config'\nimport { ParsedUrlQuery } from 'querystring'\nimport {\n  LoadComponentsReturnType,\n  loadDefaultErrorComponents,\n} from '../load-components'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { parseStack } from '@next/react-dev-overlay/lib/internal/helpers/parseStack'\nimport {\n  createOriginalStackFrame,\n  getSourceById,\n} from '@next/react-dev-overlay/lib/middleware'\nimport * as Log from '../../build/output/log'\n\n// Load ReactDevOverlay only when needed\nlet ReactDevOverlayImpl: React.FunctionComponent\nconst ReactDevOverlay = (props: any) => {\n  if (ReactDevOverlayImpl === undefined) {\n    ReactDevOverlayImpl =\n      require('@next/react-dev-overlay/lib/client').ReactDevOverlay\n  }\n  return ReactDevOverlayImpl(props)\n}\n\nexport default class DevServer extends Server {\n  private devReady: Promise<void>\n  private setDevReady?: Function\n  private webpackWatcher?: Watchpack | null\n  private hotReloader?: HotReloader\n  private isCustomServer: boolean\n  protected sortedRoutes?: string[]\n\n  protected staticPathsWorker: import('jest-worker').Worker & {\n    loadStaticPaths: typeof import('./static-paths-worker').loadStaticPaths\n  }\n\n  constructor(\n    options: ServerConstructor & {\n      conf: NextConfig\n      isNextDevCommand?: boolean\n    }\n  ) {\n    super({ ...options, dev: true })\n    this.renderOpts.dev = true\n    ;(this.renderOpts as any).ErrorDebug = ReactDevOverlay\n    this.devReady = new Promise((resolve) => {\n      this.setDevReady = resolve\n    })\n    ;(this.renderOpts as any).ampSkipValidation =\n      this.nextConfig.experimental?.amp?.skipValidation ?? false\n    ;(this.renderOpts as any).ampValidator = (\n      html: string,\n      pathname: string\n    ) => {\n      const validatorPath =\n        this.nextConfig.experimental &&\n        this.nextConfig.experimental.amp &&\n        this.nextConfig.experimental.amp.validator\n      return AmpHtmlValidator.getInstance(validatorPath).then((validator) => {\n        const result = validator.validateString(html)\n        ampValidation(\n          pathname,\n          result.errors\n            .filter((e) => e.severity === 'ERROR')\n            .filter((e) => this._filterAmpDevelopmentScript(html, e)),\n          result.errors.filter((e) => e.severity !== 'ERROR')\n        )\n      })\n    }\n    if (fs.existsSync(pathJoin(this.dir, 'static'))) {\n      console.warn(\n        `The static directory has been deprecated in favor of the public directory. https://nextjs.org/docs/messages/static-dir-deprecated`\n      )\n    }\n    this.isCustomServer = !options.isNextDevCommand\n    this.pagesDir = findPagesDir(this.dir)\n    this.staticPathsWorker = new Worker(\n      require.resolve('./static-paths-worker'),\n      {\n        maxRetries: 1,\n        numWorkers: this.nextConfig.experimental.cpus,\n        enableWorkerThreads: this.nextConfig.experimental.workerThreads,\n        forkOptions: {\n          env: {\n            ...process.env,\n            // discard --inspect/--inspect-brk flags from process.env.NODE_OPTIONS. Otherwise multiple Node.js debuggers\n            // would be started if user launch Next.js in debugging mode. The number of debuggers is linked to\n            // the number of workers Next.js tries to launch. The only worker users are interested in debugging\n            // is the main Next.js one\n            NODE_OPTIONS: getNodeOptionsWithoutInspect(),\n          },\n        },\n      }\n    ) as Worker & {\n      loadStaticPaths: typeof import('./static-paths-worker').loadStaticPaths\n    }\n\n    this.staticPathsWorker.getStdout().pipe(process.stdout)\n    this.staticPathsWorker.getStderr().pipe(process.stderr)\n  }\n\n  protected readBuildId(): string {\n    return 'development'\n  }\n\n  async addExportPathMapRoutes() {\n    // Makes `next export` exportPathMap work in development mode.\n    // So that the user doesn't have to define a custom server reading the exportPathMap\n    if (this.nextConfig.exportPathMap) {\n      console.log('Defining routes from exportPathMap')\n      const exportPathMap = await this.nextConfig.exportPathMap(\n        {},\n        {\n          dev: true,\n          dir: this.dir,\n          outDir: null,\n          distDir: this.distDir,\n          buildId: this.buildId,\n        }\n      ) // In development we can't give a default path mapping\n      for (const path in exportPathMap) {\n        const { page, query = {} } = exportPathMap[path]\n\n        // We use unshift so that we're sure the routes is defined before Next's default routes\n        this.router.addFsRoute({\n          match: route(path),\n          type: 'route',\n          name: `${path} exportpathmap route`,\n          fn: async (req, res, _params, parsedUrl) => {\n            const { query: urlQuery } = parsedUrl\n\n            Object.keys(urlQuery)\n              .filter((key) => query[key] === undefined)\n              .forEach((key) =>\n                console.warn(\n                  `Url '${path}' defines a query parameter '${key}' that is missing in exportPathMap`\n                )\n              )\n\n            const mergedQuery = { ...urlQuery, ...query }\n\n            await this.render(req, res, page, mergedQuery, parsedUrl)\n            return {\n              finished: true,\n            }\n          },\n        })\n      }\n    }\n  }\n\n  async startWatcher(): Promise<void> {\n    if (this.webpackWatcher) {\n      return\n    }\n\n    const regexPageExtension = new RegExp(\n      `\\\\.+(?:${this.nextConfig.pageExtensions.join('|')})$`\n    )\n\n    let resolved = false\n    return new Promise((resolve, reject) => {\n      const pagesDir = this.pagesDir\n\n      // Watchpack doesn't emit an event for an empty directory\n      fs.readdir(pagesDir!, (_, files) => {\n        if (files?.length) {\n          return\n        }\n\n        if (!resolved) {\n          resolve()\n          resolved = true\n        }\n      })\n\n      let wp = (this.webpackWatcher = new Watchpack())\n      wp.watch([], [pagesDir!], 0)\n\n      wp.on('aggregated', () => {\n        const routedPages = []\n        const knownFiles = wp.getTimeInfoEntries()\n        for (const [fileName, { accuracy }] of knownFiles) {\n          if (accuracy === undefined || !regexPageExtension.test(fileName)) {\n            continue\n          }\n\n          let pageName =\n            '/' + relative(pagesDir!, fileName).replace(/\\\\+/g, '/')\n          pageName = pageName.replace(regexPageExtension, '')\n          pageName = pageName.replace(/\\/index$/, '') || '/'\n\n          routedPages.push(pageName)\n        }\n\n        try {\n          // we serve a separate manifest with all pages for the client in\n          // dev mode so that we can match a page after a rewrite on the client\n          // before it has been built and is populated in the _buildManifest\n          const sortedRoutes = getSortedRoutes(routedPages)\n\n          if (\n            !this.sortedRoutes?.every((val, idx) => val === sortedRoutes[idx])\n          ) {\n            // emit the change so clients fetch the update\n            this.hotReloader!.send(undefined, { devPagesManifest: true })\n          }\n          this.sortedRoutes = sortedRoutes\n\n          this.dynamicRoutes = this.sortedRoutes\n            .filter(isDynamicRoute)\n            .map((page) => ({\n              page,\n              match: getRouteMatcher(getRouteRegex(page)),\n            }))\n\n          this.router.setDynamicRoutes(this.dynamicRoutes)\n\n          if (!resolved) {\n            resolve()\n            resolved = true\n          }\n        } catch (e) {\n          if (!resolved) {\n            reject(e)\n            resolved = true\n          } else {\n            console.warn('Failed to reload dynamic routes:', e)\n          }\n        }\n      })\n    })\n  }\n\n  async stopWatcher(): Promise<void> {\n    if (!this.webpackWatcher) {\n      return\n    }\n\n    this.webpackWatcher.close()\n    this.webpackWatcher = null\n  }\n\n  async prepare(): Promise<void> {\n    await verifyTypeScriptSetup(\n      this.dir,\n      this.pagesDir!,\n      false,\n      !this.nextConfig.images.disableStaticImages\n    )\n\n    this.customRoutes = await loadCustomRoutes(this.nextConfig)\n\n    // reload router\n    const { redirects, rewrites, headers } = this.customRoutes\n\n    if (\n      rewrites.beforeFiles.length ||\n      rewrites.afterFiles.length ||\n      rewrites.fallback.length ||\n      redirects.length ||\n      headers.length\n    ) {\n      this.router = new Router(this.generateRoutes())\n    }\n\n    this.hotReloader = new HotReloader(this.dir, {\n      pagesDir: this.pagesDir!,\n      config: this.nextConfig,\n      previewProps: this.getPreviewProps(),\n      buildId: this.buildId,\n      rewrites,\n    })\n    await super.prepare()\n    await this.addExportPathMapRoutes()\n    await this.hotReloader.start()\n    await this.startWatcher()\n    this.setDevReady!()\n\n    const telemetry = new Telemetry({ distDir: this.distDir })\n    telemetry.record(\n      eventCliSession(PHASE_DEVELOPMENT_SERVER, this.distDir, {\n        webpackVersion: this.hotReloader.isWebpack5 ? 5 : 4,\n        cliCommand: 'dev',\n        isSrcDir: relative(this.dir, this.pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: this.dir })),\n        isCustomServer: this.isCustomServer,\n      })\n    )\n    // This is required by the tracing subsystem.\n    setGlobal('telemetry', telemetry)\n\n    process.on('unhandledRejection', (reason) => {\n      this.logErrorWithOriginalStack(reason, 'unhandledRejection').catch(\n        () => {}\n      )\n    })\n    process.on('uncaughtException', (err) => {\n      this.logErrorWithOriginalStack(err, 'uncaughtException').catch(() => {})\n    })\n  }\n\n  protected async close(): Promise<void> {\n    await this.stopWatcher()\n    await this.staticPathsWorker.end()\n    if (this.hotReloader) {\n      await this.hotReloader.stop()\n    }\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let normalizedPath: string\n\n    try {\n      normalizedPath = normalizePagePath(pathname)\n    } catch (err) {\n      console.error(err)\n      // if normalizing the page fails it means it isn't valid\n      // so it doesn't exist so don't throw and return false\n      // to ensure we return 404 instead of 500\n      return false\n    }\n\n    const pageFile = await findPageFile(\n      this.pagesDir!,\n      normalizedPath,\n      this.nextConfig.pageExtensions\n    )\n    return !!pageFile\n  }\n\n  protected async _beforeCatchAllRender(\n    req: IncomingMessage,\n    res: ServerResponse,\n    params: Params,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    const { pathname } = parsedUrl\n    const pathParts = params.path || []\n    const path = `/${pathParts.join('/')}`\n    // check for a public file, throwing error if there's a\n    // conflicting page\n    let decodedPath: string\n\n    try {\n      decodedPath = decodeURIComponent(path)\n    } catch (_) {\n      throw new DecodeError('failed to decode param')\n    }\n\n    if (await this.hasPublicFile(decodedPath)) {\n      if (await this.hasPage(pathname!)) {\n        const err = new Error(\n          `A conflicting public file and page file was found for path ${pathname} https://nextjs.org/docs/messages/conflicting-public-file-page`\n        )\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname!, {})\n        return true\n      }\n      await this.servePublic(req, res, pathParts)\n      return true\n    }\n\n    return false\n  }\n\n  async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.devReady\n\n    const { basePath } = this.nextConfig\n    let originalPathname: string | null = null\n\n    if (basePath && parsedUrl.pathname?.startsWith(basePath)) {\n      // strip basePath before handling dev bundles\n      // If replace ends up replacing the full url it'll be `undefined`, meaning we have to default it to `/`\n      originalPathname = parsedUrl.pathname\n      parsedUrl.pathname = parsedUrl.pathname!.slice(basePath.length) || '/'\n    }\n\n    const { pathname } = parsedUrl\n\n    if (pathname!.startsWith('/_next')) {\n      if (await fileExists(pathJoin(this.publicDir, '_next'))) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    const { finished = false } = await this.hotReloader!.run(\n      req,\n      res,\n      parsedUrl\n    )\n\n    if (finished) {\n      return\n    }\n\n    if (originalPathname) {\n      // restore the path before continuing so that custom-routes can accurately determine\n      // if they should match against the basePath or not\n      parsedUrl.pathname = originalPathname\n    }\n    try {\n      return await super.run(req, res, parsedUrl)\n    } catch (err) {\n      res.statusCode = 500\n      try {\n        this.logErrorWithOriginalStack(err).catch(() => {})\n        return await this.renderError(err, req, res, pathname!, {\n          __NEXT_PAGE: err?.page || pathname,\n        })\n      } catch (internalErr) {\n        console.error(internalErr)\n        res.end('Internal Server Error')\n      }\n    }\n  }\n\n  private async logErrorWithOriginalStack(\n    possibleError?: any,\n    type?: 'unhandledRejection' | 'uncaughtException'\n  ) {\n    let usedOriginalStack = false\n\n    if (possibleError?.name && possibleError?.stack && possibleError?.message) {\n      const err: Error & { stack: string } = possibleError\n      try {\n        const frames = parseStack(err.stack)\n        const frame = frames[0]\n\n        if (frame.lineNumber && frame?.file) {\n          const compilation = this.hotReloader?.serverStats?.compilation\n          const moduleId = frame.file!.replace(\n            /^(webpack-internal:\\/\\/\\/|file:\\/\\/)/,\n            ''\n          )\n\n          const source = await getSourceById(\n            !!frame.file?.startsWith(sep) || !!frame.file?.startsWith('file:'),\n            moduleId,\n            compilation,\n            this.hotReloader!.isWebpack5\n          )\n\n          const originalFrame = await createOriginalStackFrame({\n            line: frame.lineNumber!,\n            column: frame.column,\n            source,\n            frame,\n            modulePath: moduleId,\n            rootDirectory: this.dir,\n          })\n\n          if (originalFrame) {\n            const { originalCodeFrame, originalStackFrame } = originalFrame\n            const { file, lineNumber, column, methodName } = originalStackFrame\n\n            console.error(\n              chalk.red('error') +\n                ' - ' +\n                `${file} (${lineNumber}:${column}) @ ${methodName}`\n            )\n            console.error(`${chalk.red(err.name)}: ${err.message}`)\n            console.error(originalCodeFrame)\n            usedOriginalStack = true\n          }\n        }\n      } catch (_) {\n        // failed to load original stack using source maps\n        // this un-actionable by users so we don't show the\n        // internal error and only show the provided stack\n      }\n    }\n\n    if (!usedOriginalStack) {\n      if (type) {\n        Log.error(`${type}:`, possibleError)\n      } else {\n        Log.error(possibleError)\n      }\n    }\n  }\n\n  // override production loading of routes-manifest\n  protected getCustomRoutes(): CustomRoutes {\n    // actual routes will be loaded asynchronously during .prepare()\n    return {\n      redirects: [],\n      rewrites: { beforeFiles: [], afterFiles: [], fallback: [] },\n      headers: [],\n    }\n  }\n\n  private _devCachedPreviewProps: __ApiPreviewProps | undefined\n  protected getPreviewProps() {\n    if (this._devCachedPreviewProps) {\n      return this._devCachedPreviewProps\n    }\n    return (this._devCachedPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    })\n  }\n\n  generateRoutes() {\n    const { fsRoutes, ...otherRoutes } = super.generateRoutes()\n\n    // In development we expose all compiled files for react-error-overlay's line show feature\n    // We use unshift so that we're sure the routes is defined before Next's default routes\n    fsRoutes.unshift({\n      match: route('/_next/development/:path*'),\n      type: 'route',\n      name: '_next/development catchall',\n      fn: async (req, res, params) => {\n        const p = pathJoin(this.distDir, ...(params.path || []))\n        await this.serveStatic(req, res, p)\n        return {\n          finished: true,\n        }\n      },\n    })\n\n    fsRoutes.unshift({\n      match: route(\n        `/_next/${CLIENT_STATIC_FILES_PATH}/${this.buildId}/${DEV_CLIENT_PAGES_MANIFEST}`\n      ),\n      type: 'route',\n      name: `_next/${CLIENT_STATIC_FILES_PATH}/${this.buildId}/${DEV_CLIENT_PAGES_MANIFEST}`,\n      fn: async (_req, res) => {\n        res.statusCode = 200\n        res.setHeader('Content-Type', 'application/json; charset=utf-8')\n        res.end(\n          JSON.stringify({\n            pages: this.sortedRoutes,\n          })\n        )\n        return {\n          finished: true,\n        }\n      },\n    })\n\n    fsRoutes.push({\n      match: route('/:path*'),\n      type: 'route',\n      requireBasePath: false,\n      name: 'catchall public directory route',\n      fn: async (req, res, params, parsedUrl) => {\n        const { pathname } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        // Used in development to check public directory paths\n        if (await this._beforeCatchAllRender(req, res, params, parsedUrl)) {\n          return {\n            finished: true,\n          }\n        }\n\n        return {\n          finished: false,\n        }\n      },\n    })\n\n    return { fsRoutes, ...otherRoutes }\n  }\n\n  // In development public files are not added to the router but handled as a fallback instead\n  protected generatePublicRoutes(): never[] {\n    return []\n  }\n\n  // In development dynamic routes cannot be known ahead of time\n  protected getDynamicRoutes(): never[] {\n    return []\n  }\n\n  _filterAmpDevelopmentScript(\n    html: string,\n    event: { line: number; col: number; code: string }\n  ): boolean {\n    if (event.code !== 'DISALLOWED_SCRIPT_TAG') {\n      return true\n    }\n\n    const snippetChunks = html.split('\\n')\n\n    let snippet\n    if (\n      !(snippet = html.split('\\n')[event.line - 1]) ||\n      !(snippet = snippet.substring(event.col))\n    ) {\n      return true\n    }\n\n    snippet = snippet + snippetChunks.slice(event.line).join('\\n')\n    snippet = snippet.substring(0, snippet.indexOf('</script>'))\n\n    return !snippet.includes('data-amp-development-mode-only')\n  }\n\n  protected async getStaticPaths(pathname: string): Promise<{\n    staticPaths: string[] | undefined\n    fallbackMode: false | 'static' | 'blocking'\n  }> {\n    // we lazy load the staticPaths to prevent the user\n    // from waiting on them for the page to load in dev mode\n\n    const __getStaticPaths = async () => {\n      const { publicRuntimeConfig, serverRuntimeConfig, httpAgentOptions } =\n        this.nextConfig\n      const { locales, defaultLocale } = this.nextConfig.i18n || {}\n\n      const paths = await this.staticPathsWorker.loadStaticPaths(\n        this.distDir,\n        pathname,\n        !this.renderOpts.dev && this._isLikeServerless,\n        {\n          publicRuntimeConfig,\n          serverRuntimeConfig,\n        },\n        httpAgentOptions,\n        locales,\n        defaultLocale\n      )\n      return paths\n    }\n    const { paths: staticPaths, fallback } = (\n      await withCoalescedInvoke(__getStaticPaths)(`staticPaths-${pathname}`, [])\n    ).value\n\n    return {\n      staticPaths,\n      fallbackMode:\n        fallback === 'blocking'\n          ? 'blocking'\n          : fallback === true\n          ? 'static'\n          : false,\n    }\n  }\n\n  protected async ensureApiPage(pathname: string) {\n    return this.hotReloader!.ensurePage(pathname)\n  }\n\n  protected async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    await this.devReady\n    const compilationErr = await this.getCompilationError(pathname)\n    if (compilationErr) {\n      // Wrap build errors so that they don't get logged again\n      throw new WrappedBuildError(compilationErr)\n    }\n    try {\n      await this.hotReloader!.ensurePage(pathname)\n      return super.findPageComponents(pathname, query, params)\n    } catch (err) {\n      if ((err as any).code !== 'ENOENT') {\n        throw err\n      }\n      return null\n    }\n  }\n\n  protected async getFallbackErrorComponents(): Promise<LoadComponentsReturnType | null> {\n    await this.hotReloader!.buildFallbackError()\n    // Build the error page to ensure the fallback is built too.\n    // TODO: See if this can be moved into hotReloader or removed.\n    await this.hotReloader!.ensurePage('/_error')\n    return await loadDefaultErrorComponents(this.distDir)\n  }\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'no-store, must-revalidate')\n  }\n\n  private servePublic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathParts: string[]\n  ): Promise<void> {\n    const p = pathJoin(this.publicDir, ...pathParts)\n    return this.serveStatic(req, res, p)\n  }\n\n  async hasPublicFile(path: string): Promise<boolean> {\n    try {\n      const info = await fs.promises.stat(pathJoin(this.publicDir, path))\n      return info.isFile()\n    } catch (_) {\n      return false\n    }\n  }\n\n  async getCompilationError(page: string): Promise<any> {\n    const errors = await this.hotReloader!.getCompilationErrors(page)\n    if (errors.length === 0) return\n\n    // Return the very first error we found.\n    return errors[0]\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = pathResolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // During development mode, files can be added while the server is running.\n    // Checks for .next/static, .next/server, static and public.\n    // Note that in development .next/server is available for error reporting purposes.\n    // see `packages/next/server/next-server.ts` for more details.\n    if (\n      untrustedFilePath.startsWith(pathJoin(this.distDir, 'static') + sep) ||\n      untrustedFilePath.startsWith(pathJoin(this.distDir, 'server') + sep) ||\n      untrustedFilePath.startsWith(pathJoin(this.dir, 'static') + sep) ||\n      untrustedFilePath.startsWith(pathJoin(this.dir, 'public') + sep)\n    ) {\n      return true\n    }\n\n    return false\n  }\n}\n"],"names":["Log","ReactDevOverlayImpl","ReactDevOverlay","props","undefined","require","DevServer","options","dev","renderOpts","ErrorDebug","devReady","Promise","resolve","setDevReady","ampSkipValidation","nextConfig","experimental","amp","skipValidation","ampValidator","html","pathname","validatorPath","validator","getInstance","then","result","validateString","errors","filter","e","severity","_filterAmpDevelopmentScript","existsSync","dir","console","warn","isCustomServer","isNextDevCommand","pagesDir","staticPathsWorker","maxRetries","numWorkers","cpus","enableWorkerThreads","workerThreads","forkOptions","env","process","NODE_OPTIONS","getStdout","pipe","stdout","getStderr","stderr","readBuildId","addExportPathMapRoutes","exportPathMap","log","outDir","distDir","buildId","path","page","query","router","addFsRoute","match","type","name","fn","req","res","_params","parsedUrl","urlQuery","Object","keys","key","forEach","mergedQuery","render","finished","startWatcher","webpackWatcher","regexPageExtension","RegExp","pageExtensions","join","resolved","reject","readdir","_","files","length","wp","watch","on","routedPages","knownFiles","getTimeInfoEntries","fileName","accuracy","test","pageName","replace","push","sortedRoutes","every","val","idx","hotReloader","send","devPagesManifest","dynamicRoutes","map","setDynamicRoutes","stopWatcher","close","prepare","images","disableStaticImages","customRoutes","redirects","rewrites","headers","beforeFiles","afterFiles","fallback","generateRoutes","config","previewProps","getPreviewProps","start","telemetry","record","webpackVersion","isWebpack5","cliCommand","isSrcDir","startsWith","hasNowJson","cwd","reason","logErrorWithOriginalStack","catch","err","end","stop","hasPage","normalizedPath","error","pageFile","_beforeCatchAllRender","params","pathParts","decodedPath","decodeURIComponent","hasPublicFile","Error","statusCode","renderError","servePublic","run","basePath","originalPathname","slice","publicDir","__NEXT_PAGE","internalErr","possibleError","usedOriginalStack","stack","message","frames","frame","lineNumber","file","compilation","serverStats","moduleId","source","originalFrame","line","column","modulePath","rootDirectory","originalCodeFrame","originalStackFrame","methodName","red","getCustomRoutes","_devCachedPreviewProps","previewModeId","randomBytes","toString","previewModeSigningKey","previewModeEncryptionKey","fsRoutes","otherRoutes","unshift","p","serveStatic","_req","setHeader","JSON","stringify","pages","requireBasePath","generatePublicRoutes","getDynamicRoutes","event","code","snippetChunks","split","snippet","substring","col","indexOf","includes","getStaticPaths","__getStaticPaths","publicRuntimeConfig","serverRuntimeConfig","httpAgentOptions","locales","defaultLocale","i18n","paths","loadStaticPaths","_isLikeServerless","staticPaths","value","fallbackMode","ensureApiPage","ensurePage","findPageComponents","compilationErr","getCompilationError","getFallbackErrorComponents","buildFallbackError","setImmutableAssetCacheControl","info","promises","stat","isFile","getCompilationErrors","isServeableUrl","untrustedFileUrl","decodedUntrustedFilePath","untrustedFilePath"],"mappings":"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"}