{"version":3,"sources":["../../lib/recursive-delete.ts"],"sourcesContent":["import { Dirent, promises } from 'fs'\nimport { join } from 'path'\nimport { promisify } from 'util'\n\nconst sleep = promisify(setTimeout)\n\nconst unlinkFile = async (p: string, t = 1): Promise<void> => {\n  try {\n    await promises.unlink(p)\n  } catch (e) {\n    if (\n      (e.code === 'EBUSY' ||\n        e.code === 'ENOTEMPTY' ||\n        e.code === 'EPERM' ||\n        e.code === 'EMFILE') &&\n      t < 3\n    ) {\n      await sleep(t * 100)\n      return unlinkFile(p, t++)\n    }\n\n    if (e.code === 'ENOENT') {\n      return\n    }\n\n    throw e\n  }\n}\n\n/**\n * Recursively delete directory contents\n * @param  {string} dir Directory to delete the contents of\n * @param  {RegExp} [exclude] Exclude based on relative file path\n * @param  {string} [previousPath] Ensures that parameter dir exists, this is not passed recursively\n * @returns Promise void\n */\nexport async function recursiveDelete(\n  dir: string,\n  exclude?: RegExp,\n  previousPath: string = ''\n): Promise<void> {\n  let result\n  try {\n    result = await promises.readdir(dir, { withFileTypes: true })\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      return\n    }\n    throw e\n  }\n\n  await Promise.all(\n    result.map(async (part: Dirent) => {\n      const absolutePath = join(dir, part.name)\n\n      // readdir does not follow symbolic links\n      // if part is a symbolic link, follow it using stat\n      let isDirectory = part.isDirectory()\n      if (part.isSymbolicLink()) {\n        const stats = await promises.stat(absolutePath)\n        isDirectory = stats.isDirectory()\n      }\n\n      const pp = join(previousPath, part.name)\n      if (isDirectory && (!exclude || !exclude.test(pp))) {\n        await recursiveDelete(absolutePath, exclude, pp)\n        return promises.rmdir(absolutePath)\n      }\n\n      if (!exclude || !exclude.test(pp)) {\n        return unlinkFile(absolutePath)\n      }\n    })\n  )\n}\n"],"names":["recursiveDelete","sleep","setTimeout","unlinkFile","p","t","unlink","e","code","dir","exclude","previousPath","result","readdir","withFileTypes","Promise","all","map","part","absolutePath","name","isDirectory","isSymbolicLink","stats","stat","pp","test","rmdir"],"mappings":";;;;QAoCsBA,eAAe,GAAfA,eAAe;AApCJ,GAAI,CAAJ,GAAI;AAChB,GAAM,CAAN,KAAM;AACD,GAAM,CAAN,KAAM;AAEhC,KAAK,CAACC,KAAK,OAFe,KAAM,YAERC,UAAU;AAElC,KAAK,CAACC,UAAU,UAAUC,CAAS,EAAEC,CAAC,GAAG,CAAC,GAAoB,CAAC;IAC7D,GAAG,CAAC,CAAC;QACH,KAAK,CARwB,GAAI,UAQlBC,MAAM,CAACF,CAAC;IACzB,CAAC,CAAC,KAAK,EAAEG,CAAC,EAAE,CAAC;QACX,EAAE,GACCA,CAAC,CAACC,IAAI,KAAK,CAAO,UACjBD,CAAC,CAACC,IAAI,KAAK,CAAW,cACtBD,CAAC,CAACC,IAAI,KAAK,CAAO,UAClBD,CAAC,CAACC,IAAI,KAAK,CAAQ,YACrBH,CAAC,GAAG,CAAC,EACL,CAAC;YACD,KAAK,CAACJ,KAAK,CAACI,CAAC,GAAG,GAAG;YACnB,MAAM,CAACF,UAAU,CAACC,CAAC,EAAEC,CAAC;QACxB,CAAC;QAED,EAAE,EAAEE,CAAC,CAACC,IAAI,KAAK,CAAQ,SAAE,CAAC;YACxB,MAAM;QACR,CAAC;QAED,KAAK,CAACD,CAAC;IACT,CAAC;AACH,CAAC;eASqBP,eAAe,CACnCS,GAAW,EACXC,OAAgB,EAChBC,YAAoB,GAAG,CAAE,GACV,CAAC;IAChB,GAAG,CAACC,MAAM;IACV,GAAG,CAAC,CAAC;QACHA,MAAM,GAAG,KAAK,CA3Ce,GAAI,UA2CTC,OAAO,CAACJ,GAAG,EAAE,CAAC;YAACK,aAAa,EAAE,IAAI;QAAC,CAAC;IAC9D,CAAC,CAAC,KAAK,EAAEP,CAAC,EAAE,CAAC;QACX,EAAE,EAAEA,CAAC,CAACC,IAAI,KAAK,CAAQ,SAAE,CAAC;YACxB,MAAM;QACR,CAAC;QACD,KAAK,CAACD,CAAC;IACT,CAAC;IAED,KAAK,CAACQ,OAAO,CAACC,GAAG,CACfJ,MAAM,CAACK,GAAG,QAAQC,IAAY,GAAK,CAAC;QAClC,KAAK,CAACC,YAAY,OApDH,KAAM,OAoDKV,GAAG,EAAES,IAAI,CAACE,IAAI;QAExC,EAAyC,AAAzC,uCAAyC;QACzC,EAAmD,AAAnD,iDAAmD;QACnD,GAAG,CAACC,WAAW,GAAGH,IAAI,CAACG,WAAW;QAClC,EAAE,EAAEH,IAAI,CAACI,cAAc,IAAI,CAAC;YAC1B,KAAK,CAACC,KAAK,GAAG,KAAK,CA3DM,GAAI,UA2DAC,IAAI,CAACL,YAAY;YAC9CE,WAAW,GAAGE,KAAK,CAACF,WAAW;QACjC,CAAC;QAED,KAAK,CAACI,EAAE,OA9DO,KAAM,OA8DLd,YAAY,EAAEO,IAAI,CAACE,IAAI;QACvC,EAAE,EAAEC,WAAW,MAAMX,OAAO,KAAKA,OAAO,CAACgB,IAAI,CAACD,EAAE,IAAI,CAAC;YACnD,KAAK,CAACzB,eAAe,CAACmB,YAAY,EAAET,OAAO,EAAEe,EAAE;YAC/C,MAAM,CAlEmB,GAAI,UAkEbE,KAAK,CAACR,YAAY;QACpC,CAAC;QAED,EAAE,GAAGT,OAAO,KAAKA,OAAO,CAACgB,IAAI,CAACD,EAAE,GAAG,CAAC;YAClC,MAAM,CAACtB,UAAU,CAACgB,YAAY;QAChC,CAAC;IACH,CAAC;AAEL,CAAC"}